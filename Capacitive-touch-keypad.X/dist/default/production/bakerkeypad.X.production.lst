

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Feb 19 15:31:49 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1936
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 23 "main.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 23 "main.c"
    51  8007  CFBC               	dw 0xFFFC & 0xFFFF & 0xFFFF & 0xFFBF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xEFFF & 0xD
                                 FFF ;#
    52                           # 24 "main.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 24 "main.c"
    55  8008  DFFF               	dw 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xDFFF ;#
    56                           	FNCALL	_main,_capsensinit
    57                           	FNCALL	_main,_setscanchannel
    58                           	FNCALL	_main,_usartinit
    59                           	FNCALL	_main,_I2Cinit
    60                           	FNCALL	_main,_USARTWriteString
    61                           	FNCALL	_main,_USARTWriteInt
    62                           	FNCALL	_main,_USARTWriteChar
    63                           	FNCALL	_USARTWriteInt,_USARTWriteChar
    64                           	FNCALL	_USARTWriteInt,___awmod
    65                           	FNCALL	_USARTWriteInt,___awdiv
    66                           	FNCALL	_USARTWriteString,_USARTWriteChar
    67                           	FNROOT	_main
    68                           	FNCALL	_isr,i1_setscanchannel
    69                           	FNCALL	intlevel1,_isr
    70                           	global	intlevel1
    71                           	FNROOT	intlevel1
    72                           	global	_i2c_tx_buff
    73                           	global	_keycnt
    74                           	global	_keystat
    75                           	global	USARTWriteInt@F3022
    76                           	global	_max
    77                           	global	_raw_reading
    78                           	global	_avgflag
    79                           	global	_pos
    80                           	global	_curdiff
    81                           	global	_olddiff
    82                           	global	_i2c_rx_buff
    83                           	global	_diff
    84                           	global	_channelno
    85                           	global	_count
    86                           	global	_average
    87                           	global	_cur_read
    88                           	global	_debounc
    89                           	global	_tholdflg
    90                           psect	nvBANK0,class=BANK0,space=1
    91                           global __pnvBANK0
    92  006F                     __pnvBANK0:
    93  006F                     _tholdflg:
    94  006F                            ds      1
    95                           
    96                           	global	_threshold
    97                           psect	nvBANK3,class=BANK3,space=1
    98                           global __pnvBANK3
    99  01A0                     __pnvBANK3:
   100  01A0                     _threshold:
   101  01A0                            ds      32
   102                           
   103                           	global	_pwrstat
   104                           psect	nvCOMMON,class=COMMON,space=1
   105                           global __pnvCOMMON
   106  007D                     __pnvCOMMON:
   107  007D                     _pwrstat:
   108  007D                            ds      1
   109                           
   110                           	global	_CPSCON0
   111  001E                     _CPSCON0	set	30
   112                           	global	_CPSCON1
   113  001F                     _CPSCON1	set	31
   114                           	global	_PIR1bits
   115  0011                     _PIR1bits	set	17
   116                           	global	_STATUSbits
   117  0003                     _STATUSbits	set	3
   118                           	global	_T1CON
   119  0018                     _T1CON	set	24
   120                           	global	_T1GCON
   121  0019                     _T1GCON	set	25
   122                           	global	_TMR0
   123  0015                     _TMR0	set	21
   124                           	global	_TMR1H
   125  0017                     _TMR1H	set	23
   126                           	global	_TMR1L
   127  0016                     _TMR1L	set	22
   128                           	global	_CARRY
   129  0018                     _CARRY	set	24
   130                           	global	_GIE
   131  005F                     _GIE	set	95
   132                           	global	_PEIE
   133  005E                     _PEIE	set	94
   134                           	global	_SSPIF
   135  008B                     _SSPIF	set	139
   136                           	global	_T1GGO
   137  00CB                     _T1GGO	set	203
   138                           	global	_TMR0IE
   139  005D                     _TMR0IE	set	93
   140                           	global	_TMR0IF
   141  005A                     _TMR0IF	set	90
   142                           	global	_TMR1GIF
   143  008F                     _TMR1GIF	set	143
   144                           	global	_TMR1IF
   145  0088                     _TMR1IF	set	136
   146                           	global	_TMR1ON
   147  00C0                     _TMR1ON	set	192
   148                           	global	_ADCON0
   149  009D                     _ADCON0	set	157
   150                           	global	_ADCON1
   151  009E                     _ADCON1	set	158
   152                           	global	_OPTION_REG
   153  0095                     _OPTION_REG	set	149
   154                           	global	_OSCCON
   155  0099                     _OSCCON	set	153
   156                           	global	_OSCTUNE
   157  0098                     _OSCTUNE	set	152
   158                           	global	_PIE1bits
   159  0091                     _PIE1bits	set	145
   160                           	global	_TRISA
   161  008C                     _TRISA	set	140
   162                           	global	_TRISB
   163  008D                     _TRISB	set	141
   164                           	global	_TRISC
   165  008E                     _TRISC	set	142
   166                           	global	_TRISCbits
   167  008E                     _TRISCbits	set	142
   168                           	global	_WDTCONbits
   169  0097                     _WDTCONbits	set	151
   170                           	global	_SSPIE
   171  048B                     _SSPIE	set	1163
   172                           	global	_SWDTEN
   173  04B8                     _SWDTEN	set	1208
   174                           	global	_TMR1GIE
   175  048F                     _TMR1GIE	set	1167
   176                           	global	_TMR1IE
   177  0488                     _TMR1IE	set	1160
   178                           	global	_LATB
   179  010D                     _LATB	set	269
   180                           	global	_LATCbits
   181  010E                     _LATCbits	set	270
   182                           	global	_EEADR
   183  0191                     _EEADR	set	401
   184                           	global	_ANSELA
   185  018C                     _ANSELA	set	396
   186                           	global	_ANSELB
   187  018D                     _ANSELB	set	397
   188                           	global	_EECON1
   189  0195                     _EECON1	set	405
   190                           	global	_EECON2
   191  0196                     _EECON2	set	406
   192                           	global	_EEDATA
   193  0193                     _EEDATA	set	403
   194                           	global	_RCSTAbits
   195  019D                     _RCSTAbits	set	413
   196                           	global	_SPBRGH
   197  019C                     _SPBRGH	set	412
   198                           	global	_SPBRGL
   199  019B                     _SPBRGL	set	411
   200                           	global	_TXREG
   201  019A                     _TXREG	set	410
   202                           	global	_TXSTAbits
   203  019E                     _TXSTAbits	set	414
   204                           	global	_RD
   205  0CA8                     _RD	set	3240
   206                           	global	_WR
   207  0CA9                     _WR	set	3241
   208                           	global	_WREN
   209  0CAA                     _WREN	set	3242
   210                           	global	_SSPADD
   211  0212                     _SSPADD	set	530
   212                           	global	_SSPBUF
   213  0211                     _SSPBUF	set	529
   214                           	global	_SSPCON1
   215  0215                     _SSPCON1	set	533
   216                           	global	_SSPCON1bits
   217  0215                     _SSPCON1bits	set	533
   218                           	global	_SSPCON2
   219  0216                     _SSPCON2	set	534
   220                           	global	_SSPCON2bits
   221  0216                     _SSPCON2bits	set	534
   222                           	global	_SSPCON3
   223  0217                     _SSPCON3	set	535
   224                           	global	_SSPMSK
   225  0213                     _SSPMSK	set	531
   226                           	global	_SSPSTAT
   227  0214                     _SSPSTAT	set	532
   228                           psect	strings,class=STRING,delta=2
   229                           global __pstrings
   230  0800                     __pstrings:
   231                           	global    __stringtab
   232  0800                     __stringtab:
   233  0800  3400               	retlw	0
   234                           psect	strings
   235                           	
   236  0801                     STR_2:	
   237  0801  344B               	retlw	75	;'K'
   238  0802  3465               	retlw	101	;'e'
   239  0803  3479               	retlw	121	;'y'
   240  0804  3420               	retlw	32	;' '
   241  0805  3444               	retlw	68	;'D'
   242  0806  3465               	retlw	101	;'e'
   243  0807  3474               	retlw	116	;'t'
   244  0808  3465               	retlw	101	;'e'
   245  0809  3463               	retlw	99	;'c'
   246  080A  3474               	retlw	116	;'t'
   247  080B  3465               	retlw	101	;'e'
   248  080C  3464               	retlw	100	;'d'
   249  080D  3420               	retlw	32	;' '
   250  080E  343D               	retlw	61	;'='
   251  080F  3420               	retlw	32	;' '
   252  0810  3400               	retlw	0
   253                           psect	strings
   254                           	
   255  0811                     STR_1:	
   256  0811  3420               	retlw	32	;' '
   257  0812  3472               	retlw	114	;'r'
   258  0813  3465               	retlw	101	;'e'
   259  0814  3473               	retlw	115	;'s'
   260  0815  3465               	retlw	101	;'e'
   261  0816  3474               	retlw	116	;'t'
   262  0817  3420               	retlw	32	;' '
   263  0818  3400               	retlw	0
   264                           psect	strings
   265                           	file	"C:\Users\Admin\AppData\Local\Temp\s50k."
   266                           	line	#
   267                           psect cinit,class=CODE,delta=2
   268                           global start_initialization
   269  0FDB                     start_initialization:
   270                           
   271                           psect	bssCOMMON,class=COMMON,space=1
   272                           global __pbssCOMMON
   273  007B                     __pbssCOMMON:
   274  007B                     _channelno:
   275  007B                            ds      1
   276                           
   277  007C                     _count:
   278  007C                            ds      1
   279                           
   280                           psect	bssBANK0,class=BANK0,space=1
   281                           global __pbssBANK0
   282  0048                     __pbssBANK0:
   283  0048                     _i2c_tx_buff:
   284  0048                            ds      8
   285                           
   286  0050                     _keycnt:
   287  0050                            ds      8
   288                           
   289  0058                     _keystat:
   290  0058                            ds      8
   291                           
   292  0060                     USARTWriteInt@F3022:
   293  0060                            ds      5
   294                           
   295  0065                     _max:
   296  0065                            ds      4
   297                           
   298  0069                     _raw_reading:
   299  0069                            ds      4
   300                           
   301  006D                     _avgflag:
   302  006D                            ds      1
   303                           
   304  006E                     _pos:
   305  006E                            ds      1
   306                           
   307                           psect	bssBANK1,class=BANK1,space=1
   308                           global __pbssBANK1
   309  00A0                     __pbssBANK1:
   310  00A0                     _average:
   311  00A0                            ds      32
   312                           
   313  00C0                     _cur_read:
   314  00C0                            ds      32
   315                           
   316  00E0                     _debounc:
   317  00E0                            ds      16
   318                           
   319                           psect	bssBANK2,class=BANK2,space=1
   320                           global __pbssBANK2
   321  0120                     __pbssBANK2:
   322  0120                     _curdiff:
   323  0120                            ds      32
   324                           
   325  0140                     _olddiff:
   326  0140                            ds      32
   327                           
   328  0160                     _i2c_rx_buff:
   329  0160                            ds      8
   330                           
   331                           psect	bssBANK3,class=BANK3,space=1
   332                           global __pbssBANK3
   333  01C0                     __pbssBANK3:
   334  01C0                     _diff:
   335  01C0                            ds      32
   336                           
   337                           psect clrtext,class=CODE,delta=2
   338                           global clear_ram
   339                           ;	Called with FSR0 containing the base address, and
   340                           ;	WREG with the size to clear
   341  0F87                     clear_ram:
   342  0F87  0064               	clrwdt			;clear the watchdog before getting into this loop
   343  0F88                     clrloop:
   344  0F88  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   345  0F89  3101               	addfsr	0,1
   346  0F8A  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   347  0F8B  2F88               	goto clrloop	;have we reached the end yet?
   348  0F8C  3400               	retlw	0		;all done for this memory range, return
   349                           ; Clear objects allocated to COMMON
   350                           psect cinit,class=CODE,delta=2
   351                           	global __pbssCOMMON
   352  0FDB  01FB               	clrf	((__pbssCOMMON)+0)&07Fh
   353  0FDC  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
   354                           ; Clear objects allocated to BANK0
   355                           psect cinit,class=CODE,delta=2
   356                           	global __pbssBANK0
   357  0FDD  3048               	movlw	low(__pbssBANK0)
   358  0FDE  0084               	movwf	fsr0l
   359  0FDF  3000               	movlw	high(__pbssBANK0)
   360  0FE0  0085               	movwf	fsr0h
   361  0FE1  3027               	movlw	027h
   362  0FE2  318F  2787  318F   	fcall	clear_ram
   363                           ; Clear objects allocated to BANK1
   364                           psect cinit,class=CODE,delta=2
   365                           	global __pbssBANK1
   366  0FE5  30A0               	movlw	low(__pbssBANK1)
   367  0FE6  0084               	movwf	fsr0l
   368  0FE7  3000               	movlw	high(__pbssBANK1)
   369  0FE8  0085               	movwf	fsr0h
   370  0FE9  3050               	movlw	050h
   371  0FEA  318F  2787  318F   	fcall	clear_ram
   372                           ; Clear objects allocated to BANK2
   373                           psect cinit,class=CODE,delta=2
   374                           	global __pbssBANK2
   375  0FED  3020               	movlw	low(__pbssBANK2)
   376  0FEE  0084               	movwf	fsr0l
   377  0FEF  3001               	movlw	high(__pbssBANK2)
   378  0FF0  0085               	movwf	fsr0h
   379  0FF1  3048               	movlw	048h
   380  0FF2  318F  2787  318F   	fcall	clear_ram
   381                           ; Clear objects allocated to BANK3
   382                           psect cinit,class=CODE,delta=2
   383                           	global __pbssBANK3
   384  0FF5  30C0               	movlw	low(__pbssBANK3)
   385  0FF6  0084               	movwf	fsr0l
   386  0FF7  3001               	movlw	high(__pbssBANK3)
   387  0FF8  0085               	movwf	fsr0h
   388  0FF9  3020               	movlw	020h
   389  0FFA  318F  2787  318F   	fcall	clear_ram
   390                           psect cinit,class=CODE,delta=2
   391                           global end_of_initialization
   392                           
   393                           ;End of C runtime variable initialization code
   394                           
   395  0FFD                     end_of_initialization:
   396  0FFD  0020               movlb 0
   397  0FFE  3181  2979         ljmp _main	;jump to C main() function
   398                           psect	cstackCOMMON,class=COMMON,space=1
   399                           global __pcstackCOMMON
   400  0070                     __pcstackCOMMON:
   401                           	global	?_setscanchannel
   402  0070                     ?_setscanchannel:	; 0 bytes @ 0x0
   403                           	global	?_capsensinit
   404  0070                     ?_capsensinit:	; 0 bytes @ 0x0
   405                           	global	?_usartinit
   406  0070                     ?_usartinit:	; 0 bytes @ 0x0
   407                           	global	?_USARTWriteChar
   408  0070                     ?_USARTWriteChar:	; 0 bytes @ 0x0
   409                           	global	?_USARTWriteString
   410  0070                     ?_USARTWriteString:	; 0 bytes @ 0x0
   411                           	global	?_I2Cinit
   412  0070                     ?_I2Cinit:	; 0 bytes @ 0x0
   413                           	global	?_main
   414  0070                     ?_main:	; 0 bytes @ 0x0
   415                           	global	?_isr
   416  0070                     ?_isr:	; 0 bytes @ 0x0
   417                           	global	??_isr
   418  0070                     ??_isr:	; 0 bytes @ 0x0
   419                           	global	?i1_setscanchannel
   420  0070                     ?i1_setscanchannel:	; 0 bytes @ 0x0
   421                           	global	??i1_setscanchannel
   422  0070                     ??i1_setscanchannel:	; 0 bytes @ 0x0
   423  0070                     	ds	7
   424                           	global	isr@sspstat
   425  0077                     isr@sspstat:	; 1 bytes @ 0x7
   426  0077                     	ds	1
   427                           	global	isr@buff_idx
   428  0078                     isr@buff_idx:	; 1 bytes @ 0x8
   429  0078                     	ds	1
   430                           	global	isr@j
   431  0079                     isr@j:	; 1 bytes @ 0x9
   432  0079                     	ds	1
   433                           	global	isr@no
   434  007A                     isr@no:	; 1 bytes @ 0xA
   435  007A                     	ds	1
   436                           psect	cstackBANK0,class=BANK0,space=1
   437                           global __pcstackBANK0
   438  0020                     __pcstackBANK0:
   439                           	global	??_setscanchannel
   440  0020                     ??_setscanchannel:	; 0 bytes @ 0x0
   441                           	global	??_capsensinit
   442  0020                     ??_capsensinit:	; 0 bytes @ 0x0
   443                           	global	??_usartinit
   444  0020                     ??_usartinit:	; 0 bytes @ 0x0
   445                           	global	??_USARTWriteChar
   446  0020                     ??_USARTWriteChar:	; 0 bytes @ 0x0
   447                           	global	??_I2Cinit
   448  0020                     ??_I2Cinit:	; 0 bytes @ 0x0
   449                           	global	?___awdiv
   450  0020                     ?___awdiv:	; 2 bytes @ 0x0
   451                           	global	?___awmod
   452  0020                     ?___awmod:	; 2 bytes @ 0x0
   453                           	global	USARTWriteChar@ch
   454  0020                     USARTWriteChar@ch:	; 1 bytes @ 0x0
   455                           	global	___awdiv@divisor
   456  0020                     ___awdiv@divisor:	; 2 bytes @ 0x0
   457                           	global	___awmod@divisor
   458  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   459  0020                     	ds	1
   460                           	global	??_USARTWriteString
   461  0021                     ??_USARTWriteString:	; 0 bytes @ 0x1
   462  0021                     	ds	1
   463                           	global	USARTWriteString@str
   464  0022                     USARTWriteString@str:	; 1 bytes @ 0x2
   465                           	global	___awdiv@dividend
   466  0022                     ___awdiv@dividend:	; 2 bytes @ 0x2
   467                           	global	___awmod@dividend
   468  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   469  0022                     	ds	2
   470                           	global	??___awdiv
   471  0024                     ??___awdiv:	; 0 bytes @ 0x4
   472                           	global	??___awmod
   473  0024                     ??___awmod:	; 0 bytes @ 0x4
   474  0024                     	ds	1
   475                           	global	___awdiv@counter
   476  0025                     ___awdiv@counter:	; 1 bytes @ 0x5
   477                           	global	___awmod@counter
   478  0025                     ___awmod@counter:	; 1 bytes @ 0x5
   479  0025                     	ds	1
   480                           	global	___awdiv@sign
   481  0026                     ___awdiv@sign:	; 1 bytes @ 0x6
   482                           	global	___awmod@sign
   483  0026                     ___awmod@sign:	; 1 bytes @ 0x6
   484  0026                     	ds	1
   485                           	global	___awdiv@quotient
   486  0027                     ___awdiv@quotient:	; 2 bytes @ 0x7
   487  0027                     	ds	2
   488                           	global	?_USARTWriteInt
   489  0029                     ?_USARTWriteInt:	; 0 bytes @ 0x9
   490                           	global	USARTWriteInt@val
   491  0029                     USARTWriteInt@val:	; 2 bytes @ 0x9
   492  0029                     	ds	2
   493                           	global	USARTWriteInt@field_length
   494  002B                     USARTWriteInt@field_length:	; 2 bytes @ 0xB
   495  002B                     	ds	2
   496                           	global	??_USARTWriteInt
   497  002D                     ??_USARTWriteInt:	; 0 bytes @ 0xD
   498  002D                     	ds	2
   499                           	global	USARTWriteInt@str
   500  002F                     USARTWriteInt@str:	; 5 bytes @ 0xF
   501  002F                     	ds	5
   502                           	global	USARTWriteInt@j
   503  0034                     USARTWriteInt@j:	; 2 bytes @ 0x14
   504  0034                     	ds	2
   505                           	global	USARTWriteInt@i
   506  0036                     USARTWriteInt@i:	; 2 bytes @ 0x16
   507  0036                     	ds	2
   508                           	global	??_main
   509  0038                     ??_main:	; 0 bytes @ 0x18
   510  0038                     	ds	11
   511                           	global	main@tholdcount
   512  0043                     main@tholdcount:	; 1 bytes @ 0x23
   513  0043                     	ds	1
   514                           	global	main@k
   515  0044                     main@k:	; 1 bytes @ 0x24
   516  0044                     	ds	1
   517                           	global	main@j
   518  0045                     main@j:	; 1 bytes @ 0x25
   519  0045                     	ds	1
   520                           	global	main@t
   521  0046                     main@t:	; 1 bytes @ 0x26
   522  0046                     	ds	1
   523                           	global	main@i
   524  0047                     main@i:	; 1 bytes @ 0x27
   525  0047                     	ds	1
   526 ;;Data sizes: Strings 24, constant 0, data 0, bss 225, persistent 34 stack 0
   527 ;;Auto spaces:   Size  Autos    Used
   528 ;; COMMON          14     11      14
   529 ;; BANK0           80     40      80
   530 ;; BANK1           80      0      80
   531 ;; BANK2           80      0      72
   532 ;; BANK3           80      0      64
   533 ;; BANK4           80      0       0
   534 ;; BANK5           80      0       0
   535 ;; BANK6           16      0       0
   536                           
   537 ;;
   538 ;; Pointer list with targets:
   539                           
   540 ;; ?___awdiv	int  size(1) Largest target is 0
   541 ;;
   542 ;; ?___awmod	int  size(1) Largest target is 2
   543 ;;		 -> USARTWriteInt@val(BANK0[2]), 
   544 ;;
   545 ;; USARTWriteString@str	PTR const unsigned char  size(1) Largest target is 16
   546 ;;		 -> STR_2(CODE[16]), STR_1(CODE[8]), 
   547 ;;
   548                           
   549                           
   550 ;;
   551 ;; Critical Paths under _main in COMMON
   552 ;;
   553 ;;   None.
   554 ;;
   555 ;; Critical Paths under _isr in COMMON
   556 ;;
   557 ;;   None.
   558 ;;
   559 ;; Critical Paths under _main in BANK0
   560 ;;
   561 ;;   _main->_USARTWriteInt
   562 ;;   _USARTWriteInt->___awdiv
   563 ;;   _USARTWriteString->_USARTWriteChar
   564 ;;
   565 ;; Critical Paths under _isr in BANK0
   566 ;;
   567 ;;   None.
   568 ;;
   569 ;; Critical Paths under _main in BANK1
   570 ;;
   571 ;;   None.
   572 ;;
   573 ;; Critical Paths under _isr in BANK1
   574 ;;
   575 ;;   None.
   576 ;;
   577 ;; Critical Paths under _main in BANK2
   578 ;;
   579 ;;   None.
   580 ;;
   581 ;; Critical Paths under _isr in BANK2
   582 ;;
   583 ;;   None.
   584 ;;
   585 ;; Critical Paths under _main in BANK3
   586 ;;
   587 ;;   None.
   588 ;;
   589 ;; Critical Paths under _isr in BANK3
   590 ;;
   591 ;;   None.
   592 ;;
   593 ;; Critical Paths under _main in BANK4
   594 ;;
   595 ;;   None.
   596 ;;
   597 ;; Critical Paths under _isr in BANK4
   598 ;;
   599 ;;   None.
   600 ;;
   601 ;; Critical Paths under _main in BANK5
   602 ;;
   603 ;;   None.
   604 ;;
   605 ;; Critical Paths under _isr in BANK5
   606 ;;
   607 ;;   None.
   608 ;;
   609 ;; Critical Paths under _main in BANK6
   610 ;;
   611 ;;   None.
   612 ;;
   613 ;; Critical Paths under _isr in BANK6
   614 ;;
   615 ;;   None.
   616                           
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
   619 ;;
   620                           
   621 ;;
   622 ;;Call Graph Tables:
   623 ;;
   624 ;; ---------------------------------------------------------------------------------
   625 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   626 ;; ---------------------------------------------------------------------------------
   627 ;; (0) _main                                                16    16      0    2297
   628 ;;                                             24 BANK0     16    16      0
   629 ;;                        _capsensinit
   630 ;;                     _setscanchannel
   631 ;;                          _usartinit
   632 ;;                            _I2Cinit
   633 ;;                   _USARTWriteString
   634 ;;                      _USARTWriteInt
   635 ;;                     _USARTWriteChar
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (1) _USARTWriteInt                                       15    11      4    1028
   638 ;;                                              9 BANK0     15    11      4
   639 ;;                     _USARTWriteChar
   640 ;;                            ___awmod
   641 ;;                            ___awdiv
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (1) _USARTWriteString                                     2     2      0      67
   644 ;;                                              1 BANK0      2     2      0
   645 ;;                     _USARTWriteChar
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (2) ___awmod                                              7     3      4     296
   648 ;;                                              0 BANK0      7     3      4
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (2) ___awdiv                                              9     5      4     300
   651 ;;                                              0 BANK0      9     5      4
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (1) _I2Cinit                                              1     1      0       0
   654 ;;                                              0 BANK0      1     1      0
   655 ;; ---------------------------------------------------------------------------------
   656 ;; (1) _USARTWriteChar                                       1     1      0      22
   657 ;;                                              0 BANK0      1     1      0
   658 ;; ---------------------------------------------------------------------------------
   659 ;; (1) _usartinit                                            0     0      0       0
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (1) _capsensinit                                          1     1      0       0
   662 ;;                                              0 BANK0      1     1      0
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (1) _setscanchannel                                       0     0      0       0
   665 ;; ---------------------------------------------------------------------------------
   666 ;; Estimated maximum stack depth 2
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (3) _isr                                                 11    11      0     405
   671 ;;                                              0 COMMON    11    11      0
   672 ;;                   i1_setscanchannel
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (4) i1_setscanchannel                                     0     0      0       0
   675 ;; ---------------------------------------------------------------------------------
   676 ;; Estimated maximum stack depth 4
   677 ;; ---------------------------------------------------------------------------------
   678                           
   679 ;; Call Graph Graphs:
   680                           
   681 ;; _main (ROOT)
   682 ;;   _capsensinit
   683 ;;   _setscanchannel
   684 ;;   _usartinit
   685 ;;   _I2Cinit
   686 ;;   _USARTWriteString
   687 ;;     _USARTWriteChar
   688 ;;   _USARTWriteInt
   689 ;;     _USARTWriteChar
   690 ;;     ___awmod
   691 ;;     ___awdiv
   692 ;;   _USARTWriteChar
   693 ;;
   694 ;; _isr (ROOT)
   695 ;;   i1_setscanchannel
   696 ;;
   697                           
   698 ;; Address spaces:
   699                           
   700 ;;Name               Size   Autos  Total    Cost      Usage
   701 ;;BIGRAM             1F0      0       0       0        0.0%
   702 ;;EEDATA             100      0       0       0        0.0%
   703 ;;NULL                 0      0       0       0        0.0%
   704 ;;CODE                 0      0       0       0        0.0%
   705 ;;BITCOMMON            E      0       0       1        0.0%
   706 ;;BITSFR0              0      0       0       1        0.0%
   707 ;;SFR0                 0      0       0       1        0.0%
   708 ;;COMMON               E      B       E       2      100.0%
   709 ;;BITSFR1              0      0       0       2        0.0%
   710 ;;SFR1                 0      0       0       2        0.0%
   711 ;;BITSFR2              0      0       0       3        0.0%
   712 ;;SFR2                 0      0       0       3        0.0%
   713 ;;STACK                0      0       6       3        0.0%
   714 ;;BITSFR3              0      0       0       4        0.0%
   715 ;;SFR3                 0      0       0       4        0.0%
   716 ;;ABS                  0      0     136       4        0.0%
   717 ;;BITBANK0            50      0       0       5        0.0%
   718 ;;BITSFR4              0      0       0       5        0.0%
   719 ;;SFR4                 0      0       0       5        0.0%
   720 ;;BANK0               50     28      50       6      100.0%
   721 ;;BITSFR5              0      0       0       6        0.0%
   722 ;;SFR5                 0      0       0       6        0.0%
   723 ;;BITBANK1            50      0       0       7        0.0%
   724 ;;BITSFR6              0      0       0       7        0.0%
   725 ;;SFR6                 0      0       0       7        0.0%
   726 ;;BANK1               50      0      50       8      100.0%
   727 ;;BITSFR7              0      0       0       8        0.0%
   728 ;;SFR7                 0      0       0       8        0.0%
   729 ;;BITBANK2            50      0       0       9        0.0%
   730 ;;BITSFR8              0      0       0       9        0.0%
   731 ;;SFR8                 0      0       0       9        0.0%
   732 ;;BANK2               50      0      48      10       90.0%
   733 ;;BITSFR9              0      0       0      10        0.0%
   734 ;;SFR9                 0      0       0      10        0.0%
   735 ;;BITBANK3            50      0       0      11        0.0%
   736 ;;BITSFR10             0      0       0      11        0.0%
   737 ;;SFR10                0      0       0      11        0.0%
   738 ;;BANK3               50      0      40      12       80.0%
   739 ;;BITSFR11             0      0       0      12        0.0%
   740 ;;SFR11                0      0       0      12        0.0%
   741 ;;BITBANK4            50      0       0      13        0.0%
   742 ;;BITSFR12             0      0       0      13        0.0%
   743 ;;SFR12                0      0       0      13        0.0%
   744 ;;BANK4               50      0       0      14        0.0%
   745 ;;BITSFR13             0      0       0      14        0.0%
   746 ;;SFR13                0      0       0      14        0.0%
   747 ;;BITBANK5            50      0       0      15        0.0%
   748 ;;BITSFR14             0      0       0      15        0.0%
   749 ;;SFR14                0      0       0      15        0.0%
   750 ;;BANK5               50      0       0      16        0.0%
   751 ;;BITSFR15             0      0       0      16        0.0%
   752 ;;SFR15                0      0       0      16        0.0%
   753 ;;BITBANK6            10      0       0      17        0.0%
   754 ;;BITSFR16             0      0       0      17        0.0%
   755 ;;SFR16                0      0       0      17        0.0%
   756 ;;BANK6               10      0       0      18        0.0%
   757 ;;BITSFR17             0      0       0      18        0.0%
   758 ;;SFR17                0      0       0      18        0.0%
   759 ;;BITSFR18             0      0       0      19        0.0%
   760 ;;SFR18                0      0       0      19        0.0%
   761 ;;DATA                 0      0     13C      19        0.0%
   762 ;;BITSFR19             0      0       0      20        0.0%
   763 ;;SFR19                0      0       0      20        0.0%
   764 ;;BITSFR20             0      0       0      21        0.0%
   765 ;;SFR20                0      0       0      21        0.0%
   766 ;;BITSFR21             0      0       0      22        0.0%
   767 ;;SFR21                0      0       0      22        0.0%
   768 ;;BITSFR22             0      0       0      23        0.0%
   769 ;;SFR22                0      0       0      23        0.0%
   770 ;;BITSFR23             0      0       0      24        0.0%
   771 ;;SFR23                0      0       0      24        0.0%
   772 ;;BITSFR24             0      0       0      25        0.0%
   773 ;;SFR24                0      0       0      25        0.0%
   774 ;;BITSFR25             0      0       0      26        0.0%
   775 ;;SFR25                0      0       0      26        0.0%
   776 ;;BITSFR26             0      0       0      27        0.0%
   777 ;;SFR26                0      0       0      27        0.0%
   778 ;;BITSFR27             0      0       0      28        0.0%
   779 ;;SFR27                0      0       0      28        0.0%
   780 ;;BITSFR28             0      0       0      29        0.0%
   781 ;;SFR28                0      0       0      29        0.0%
   782 ;;BITSFR29             0      0       0      30        0.0%
   783 ;;SFR29                0      0       0      30        0.0%
   784 ;;BITSFR30             0      0       0      31        0.0%
   785 ;;SFR30                0      0       0      31        0.0%
   786 ;;BITSFR31             0      0       0      32        0.0%
   787 ;;SFR31                0      0       0      32        0.0%
   788                           
   789                           	global	_main
   790                           psect	maintext,global,class=CODE,delta=2
   791                           global __pmaintext
   792  0179                     __pmaintext:
   793                           
   794 ;; *************** function _main *****************
   795 ;; Defined at:
   796 ;;		line 200 in file "main.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  i               1   39[BANK0 ] unsigned char 
   801 ;;  t               1   38[BANK0 ] unsigned char 
   802 ;;  j               1   37[BANK0 ] unsigned char 
   803 ;;  k               1   36[BANK0 ] unsigned char 
   804 ;;  tholdcount      1   35[BANK0 ] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;		None               void
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 17F/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   814 ;;      Params:         0       0       0       0       0       0       0       0
   815 ;;      Locals:         0       5       0       0       0       0       0       0
   816 ;;      Temps:          0      11       0       0       0       0       0       0
   817 ;;      Totals:         0      16       0       0       0       0       0       0
   818 ;;Total ram usage:       16 bytes
   819 ;; Hardware stack levels required when called:    4
   820 ;; This function calls:
   821 ;;		_capsensinit
   822 ;;		_setscanchannel
   823 ;;		_usartinit
   824 ;;		_I2Cinit
   825 ;;		_USARTWriteString
   826 ;;		_USARTWriteInt
   827 ;;		_USARTWriteChar
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           psect	maintext
   833                           	file	"main.c"
   834                           	line	200
   835                           	global	__size_of_main
   836  03F1                     	__size_of_main	equ	__end_of_main-_main
   837                           	
   838  0179                     _main:	
   839                           	opt	stack 12
   840                           ; Regs used in _main: [allreg]
   841                           	line	201
   842                           	
   843  0179                     l5764:	
   844                           ;main.c: 201: UINT8 i=0,j=0,k,t;
   845  0179  0020               	movlb 0	; select bank0
   846  017A  01C7               	clrf	(main@i)
   847  017B  01C5               	clrf	(main@j)
   848                           	line	203
   849                           	
   850  017C                     l5766:	
   851                           ;main.c: 203: OSCCON = 0b01111000;
   852  017C  3078               	movlw	(078h)
   853  017D  0021               	movlb 1	; select bank1
   854  017E  0099               	movwf	(153)^080h	;volatile
   855                           	line	204
   856                           	
   857  017F                     l5768:	
   858                           ;main.c: 204: OSCTUNE = 0b00000000;
   859  017F  0198               	clrf	(152)^080h	;volatile
   860                           	line	205
   861                           	
   862  0180                     l5770:	
   863                           ;main.c: 205: SWDTEN = 0b01;
   864  0180  1417               	bsf	(1208/8)^080h,(1208)&7
   865                           	line	207
   866                           	
   867  0181                     l5772:	
   868                           ;main.c: 206: UINT8 tholdcount;
   869                           ;main.c: 207: ANSELA = 0;
   870  0181  0023               	movlb 3	; select bank3
   871  0182  018C               	clrf	(396)^0180h	;volatile
   872                           	line	208
   873                           	
   874  0183                     l5774:	
   875                           ;main.c: 208: ANSELB = 0;
   876  0183  018D               	clrf	(397)^0180h	;volatile
   877                           	line	209
   878                           	
   879  0184                     l5776:	
   880                           ;main.c: 209: TRISA = 0;
   881  0184  0021               	movlb 1	; select bank1
   882  0185  018C               	clrf	(140)^080h	;volatile
   883                           	line	210
   884                           	
   885  0186                     l5778:	
   886                           ;main.c: 210: TRISB = 0;
   887  0186  018D               	clrf	(141)^080h	;volatile
   888                           	line	211
   889                           	
   890  0187                     l5780:	
   891                           ;main.c: 211: TRISC = 0;
   892  0187  018E               	clrf	(142)^080h	;volatile
   893                           	line	212
   894                           	
   895  0188                     l5782:	
   896                           ;main.c: 212: WDTCONbits.WDTPS = 0b01010;
   897  0188  0817               	movf	(151)^080h,w	;volatile
   898  0189  39C1               	andlw	not (((1<<5)-1)<<1)
   899  018A  3814               	iorlw	(0Ah & ((1<<5)-1))<<1
   900  018B  0097               	movwf	(151)^080h	;volatile
   901                           	line	214
   902                           	
   903  018C                     l5784:	
   904                           ;main.c: 214: for ( j = 0 ; j < 8 ; j++ )
   905  018C  0020               	movlb 0	; select bank0
   906  018D  01C5               	clrf	(main@j)
   907                           	
   908  018E                     l5786:	
   909  018E  3008               	movlw	(08h)
   910  018F  0245               	subwf	(main@j),w
   911  0190  1C03               	skipc
   912  0191  2993               	goto	u3971
   913  0192  2994               	goto	u3970
   914  0193                     u3971:
   915  0193  2996               	goto	l5790
   916  0194                     u3970:
   917  0194  29ED               	goto	l1905
   918                           	
   919  0195                     l5788:	
   920  0195  29ED               	goto	l1905
   921                           	line	215
   922                           	
   923  0196                     l1904:	
   924                           	line	216
   925                           	
   926  0196                     l5790:	
   927                           ;main.c: 215: {
   928                           ;main.c: 216: debounc[j] = 0;
   929  0196  0845               	movf	(main@j),w
   930  0197  0709               	addwf	wreg,w
   931  0198  3EE0               	addlw	_debounc&0ffh
   932  0199  0086               	movwf	fsr1l
   933  019A  0187               	clrf fsr1h	
   934                           	
   935  019B  3000               	movlw	low(0)
   936  019C  3FC0               	movwi	[0]fsr1
   937  019D  3000               	movlw	high(0)
   938  019E  3FC1               	movwi	[1]fsr1
   939                           	line	217
   940                           ;main.c: 217: threshold[j] = 0;
   941  019F  0845               	movf	(main@j),w
   942  01A0  00B8               	movwf	(??_main+0)+0
   943  01A1  3001               	movlw	(02h)-1
   944  01A2                     u3985:
   945  01A2  35B8               	lslf	(??_main+0)+0,f
   946  01A3  3EFF               	addlw	-1
   947  01A4  1D03               	skipz
   948  01A5  29A2               	goto	u3985
   949  01A6  3538               	lslf	(??_main+0)+0,w
   950  01A7  3EA0               	addlw	_threshold&0ffh
   951  01A8  0086               	movwf	fsr1l
   952  01A9  3001               	movlw 1	; select bank3/4
   953  01AA  0087               	movwf fsr1h	
   954                           	
   955  01AB  3000               	movlw	0
   956  01AC  3FC0               	movwi	[0]fsr1
   957  01AD  3000               	movlw	0
   958  01AE  3FC1               	movwi	[1]fsr1
   959  01AF  3000               	movlw	0
   960  01B0  3FC2               	movwi	[2]fsr1
   961  01B1  3000               	movlw	0
   962  01B2  3FC3               	movwi	[3]fsr1
   963                           	line	218
   964                           ;main.c: 218: cur_read[j] = 0;
   965  01B3  0845               	movf	(main@j),w
   966  01B4  00B8               	movwf	(??_main+0)+0
   967  01B5  3001               	movlw	(02h)-1
   968  01B6                     u3995:
   969  01B6  35B8               	lslf	(??_main+0)+0,f
   970  01B7  3EFF               	addlw	-1
   971  01B8  1D03               	skipz
   972  01B9  29B6               	goto	u3995
   973  01BA  3538               	lslf	(??_main+0)+0,w
   974  01BB  3EC0               	addlw	_cur_read&0ffh
   975  01BC  0086               	movwf	fsr1l
   976  01BD  0187               	clrf fsr1h	
   977                           	
   978  01BE  3000               	movlw	0
   979  01BF  3FC0               	movwi	[0]fsr1
   980  01C0  3000               	movlw	0
   981  01C1  3FC1               	movwi	[1]fsr1
   982  01C2  3000               	movlw	0
   983  01C3  3FC2               	movwi	[2]fsr1
   984  01C4  3000               	movlw	0
   985  01C5  3FC3               	movwi	[3]fsr1
   986                           	line	219
   987                           ;main.c: 219: average[j] = 0;
   988  01C6  0845               	movf	(main@j),w
   989  01C7  00B8               	movwf	(??_main+0)+0
   990  01C8  3001               	movlw	(02h)-1
   991  01C9                     u4005:
   992  01C9  35B8               	lslf	(??_main+0)+0,f
   993  01CA  3EFF               	addlw	-1
   994  01CB  1D03               	skipz
   995  01CC  29C9               	goto	u4005
   996  01CD  3538               	lslf	(??_main+0)+0,w
   997  01CE  3EA0               	addlw	_average&0ffh
   998  01CF  0086               	movwf	fsr1l
   999  01D0  0187               	clrf fsr1h	
  1000                           	
  1001  01D1  3000               	movlw	0
  1002  01D2  3FC0               	movwi	[0]fsr1
  1003  01D3  3000               	movlw	0
  1004  01D4  3FC1               	movwi	[1]fsr1
  1005  01D5  3000               	movlw	0
  1006  01D6  3FC2               	movwi	[2]fsr1
  1007  01D7  3000               	movlw	0
  1008  01D8  3FC3               	movwi	[3]fsr1
  1009                           	line	220
  1010                           ;main.c: 220: keystat[j]= 0;keycnt[j]= 0;
  1011  01D9  0845               	movf	(main@j),w
  1012  01DA  3E58               	addlw	_keystat&0ffh
  1013  01DB  0086               	movwf	fsr1l
  1014  01DC  0187               	clrf fsr1h	
  1015                           	
  1016  01DD  0181               	clrf	indf1
  1017  01DE  0845               	movf	(main@j),w
  1018  01DF  3E50               	addlw	_keycnt&0ffh
  1019  01E0  0086               	movwf	fsr1l
  1020  01E1  0187               	clrf fsr1h	
  1021                           	
  1022  01E2  0181               	clrf	indf1
  1023                           	line	214
  1024                           	
  1025  01E3                     l5792:	
  1026  01E3  3001               	movlw	(01h)
  1027  01E4  00B8               	movwf	(??_main+0)+0
  1028  01E5  0838               	movf	(??_main+0)+0,w
  1029  01E6  07C5               	addwf	(main@j),f
  1030                           	
  1031  01E7                     l5794:	
  1032  01E7  3008               	movlw	(08h)
  1033  01E8  0245               	subwf	(main@j),w
  1034  01E9  1C03               	skipc
  1035  01EA  29EC               	goto	u4011
  1036  01EB  29ED               	goto	u4010
  1037  01EC                     u4011:
  1038  01EC  2996               	goto	l5790
  1039  01ED                     u4010:
  1040                           	
  1041  01ED                     l1905:	
  1042                           	line	222
  1043                           ;main.c: 221: }
  1044                           ;main.c: 222: TRISCbits.TRISC5 = 0;
  1045  01ED  0021               	movlb 1	; select bank1
  1046  01EE  128E               	bcf	(142)^080h,5	;volatile
  1047                           	line	223
  1048                           ;main.c: 223: LATCbits.LATC5 = 1;
  1049  01EF  0022               	movlb 2	; select bank2
  1050  01F0  168E               	bsf	(270)^0100h,5	;volatile
  1051                           	line	224
  1052                           	
  1053  01F1                     l5796:	
  1054                           ;main.c: 224: capsensinit();
  1055  01F1  3187  27BD  3181   	fcall	_capsensinit
  1056                           	line	225
  1057                           ;main.c: 225: setscanchannel();
  1058  01F4  3187  2711  3181   	fcall	_setscanchannel
  1059                           	line	226
  1060                           	
  1061  01F7                     l5798:	
  1062                           ;main.c: 226: channelno = 0;avgflag = 0;
  1063  01F7  01FB               	clrf	(_channelno)
  1064                           	
  1065  01F8                     l5800:	
  1066  01F8  0020               	movlb 0	; select bank0
  1067  01F9  01ED               	clrf	(_avgflag)
  1068                           	line	227
  1069                           	
  1070  01FA                     l5802:	
  1071                           ;main.c: 227: count = 0;
  1072  01FA  01FC               	clrf	(_count)
  1073                           	line	228
  1074                           ;main.c: 228: usartinit();
  1075  01FB  318F  278D  3181   	fcall	_usartinit
  1076                           	line	229
  1077                           ;main.c: 229: I2Cinit();
  1078  01FE  318F  27BA  3181   	fcall	_I2Cinit
  1079                           	line	230
  1080                           	
  1081  0201                     l5804:	
  1082                           ;main.c: 230: if(STATUSbits.nTO == 0){ USARTWriteString(" reset ");}
  1083  0201  0020               	movlb 0	; select bank0
  1084  0202  1A03               	btfsc	(3),4	;volatile
  1085  0203  2A05               	goto	u4021
  1086  0204  2A06               	goto	u4020
  1087  0205                     u4021:
  1088  0205  2A0B               	goto	l5808
  1089  0206                     u4020:
  1090                           	
  1091  0206                     l5806:	
  1092  0206  3011               	movlw	(STR_1|8000h)&0ffh
  1093  0207  318F  279F  3181   	fcall	_USARTWriteString
  1094  020A  2A0B               	goto	l5808
  1095                           	
  1096  020B                     l1906:	
  1097                           	line	233
  1098                           	
  1099  020B                     l5808:	
  1100                           ;main.c: 233: tholdcount=0;
  1101  020B  0020               	movlb 0	; select bank0
  1102  020C  01C3               	clrf	(main@tholdcount)
  1103                           	line	234
  1104                           	
  1105  020D                     l5810:	
  1106                           ;main.c: 234: max = 500; pos = 9;
  1107  020D  3000               	movlw	0
  1108  020E  00E8               	movwf	(_max+3)
  1109  020F  3000               	movlw	0
  1110  0210  00E7               	movwf	(_max+2)
  1111  0211  3001               	movlw	01h
  1112  0212  00E6               	movwf	(_max+1)
  1113  0213  30F4               	movlw	0F4h
  1114  0214  00E5               	movwf	(_max)
  1115                           
  1116                           	
  1117  0215                     l5812:	
  1118  0215  3009               	movlw	(09h)
  1119  0216  00B8               	movwf	(??_main+0)+0
  1120  0217  0838               	movf	(??_main+0)+0,w
  1121  0218  00EE               	movwf	(_pos)
  1122  0219  2A1A               	goto	l5814
  1123                           	line	242
  1124                           ;main.c: 242: while(1)
  1125                           	
  1126  021A                     l1907:	
  1127                           	line	244
  1128                           	
  1129  021A                     l5814:	
  1130                           # 244 "main.c"
  1131  021A  0064               clrwdt ;#
  1132                           psect	maintext
  1133                           	line	255
  1134                           	
  1135  021B                     l5816:	
  1136                           ;main.c: 255: if(avgflag)
  1137  021B  0020               	movlb 0	; select bank0
  1138  021C  086D               	movf	(_avgflag),w
  1139  021D  1D03               	skipz
  1140  021E  2A20               	goto	u4030
  1141  021F  2A1A               	goto	l5814
  1142  0220                     u4030:
  1143                           	line	257
  1144                           	
  1145  0220                     l5818:	
  1146                           ;main.c: 256: {
  1147                           ;main.c: 257: for( i = 0 ; i < 8 ; i++ )
  1148  0220  01C7               	clrf	(main@i)
  1149                           	
  1150  0221                     l5820:	
  1151  0221  3008               	movlw	(08h)
  1152  0222  0247               	subwf	(main@i),w
  1153  0223  1C03               	skipc
  1154  0224  2A26               	goto	u4041
  1155  0225  2A27               	goto	u4040
  1156  0226                     u4041:
  1157  0226  2A29               	goto	l5824
  1158  0227                     u4040:
  1159  0227  2D64               	goto	l1910
  1160                           	
  1161  0228                     l5822:	
  1162  0228  2D64               	goto	l1910
  1163                           	line	258
  1164                           	
  1165  0229                     l1909:	
  1166                           	line	259
  1167                           	
  1168  0229                     l5824:	
  1169                           ;main.c: 258: {
  1170                           ;main.c: 259: average[i] /= 8;
  1171  0229  0847               	movf	(main@i),w
  1172  022A  00B8               	movwf	(??_main+0)+0
  1173  022B  3001               	movlw	(02h)-1
  1174  022C                     u4055:
  1175  022C  35B8               	lslf	(??_main+0)+0,f
  1176  022D  3EFF               	addlw	-1
  1177  022E  1D03               	skipz
  1178  022F  2A2C               	goto	u4055
  1179  0230  3538               	lslf	(??_main+0)+0,w
  1180  0231  3EA0               	addlw	_average&0ffh
  1181  0232  0086               	movwf	fsr1l
  1182  0233  0187               	clrf fsr1h	
  1183                           	
  1184  0234  3003               	movlw	03h
  1185  0235                     u4065:
  1186  0235  3143               	addfsr	fsr1,3
  1187  0236  3681               	lsrf	indf1,f
  1188  0237  317F               	addfsr	fsr1,-1
  1189  0238  0C81               	rrf	indf1,f
  1190  0239  317F               	addfsr	fsr1,-1
  1191  023A  0C81               	rrf	indf1,f
  1192  023B  317F               	addfsr	fsr1,-1
  1193  023C  0C81               	rrf	indf1,f
  1194  023D  0B89               	decfsz	wreg,f
  1195  023E  2A35               	goto	u4065
  1196                           	line	264
  1197                           	
  1198  023F                     l5826:	
  1199                           ;main.c: 264: if(tholdflg == 0)
  1200  023F  08EF               	movf	(_tholdflg),f
  1201  0240  1D03               	skipz
  1202  0241  2A43               	goto	u4071
  1203  0242  2A44               	goto	u4070
  1204  0243                     u4071:
  1205  0243  2AC9               	goto	l5852
  1206  0244                     u4070:
  1207                           	line	266
  1208                           	
  1209  0244                     l5828:	
  1210                           ;main.c: 265: {
  1211                           ;main.c: 266: if(tholdcount == 8) threshold[i] = 0;
  1212  0244  0843               	movf	(main@tholdcount),w
  1213  0245  3A08               	xorlw	08h&0ffh
  1214  0246  1D03               	skipz
  1215  0247  2A49               	goto	u4081
  1216  0248  2A4A               	goto	u4080
  1217  0249                     u4081:
  1218  0249  2A5E               	goto	l1912
  1219  024A                     u4080:
  1220                           	
  1221  024A                     l5830:	
  1222  024A  0847               	movf	(main@i),w
  1223  024B  00B8               	movwf	(??_main+0)+0
  1224  024C  3001               	movlw	(02h)-1
  1225  024D                     u4095:
  1226  024D  35B8               	lslf	(??_main+0)+0,f
  1227  024E  3EFF               	addlw	-1
  1228  024F  1D03               	skipz
  1229  0250  2A4D               	goto	u4095
  1230  0251  3538               	lslf	(??_main+0)+0,w
  1231  0252  3EA0               	addlw	_threshold&0ffh
  1232  0253  0086               	movwf	fsr1l
  1233  0254  3001               	movlw 1	; select bank3/4
  1234  0255  0087               	movwf fsr1h	
  1235                           	
  1236  0256  3000               	movlw	0
  1237  0257  3FC0               	movwi	[0]fsr1
  1238  0258  3000               	movlw	0
  1239  0259  3FC1               	movwi	[1]fsr1
  1240  025A  3000               	movlw	0
  1241  025B  3FC2               	movwi	[2]fsr1
  1242  025C  3000               	movlw	0
  1243  025D  3FC3               	movwi	[3]fsr1
  1244                           	
  1245  025E                     l1912:	
  1246                           	line	267
  1247                           ;main.c: 267: threshold[i] += average[i];
  1248  025E  0847               	movf	(main@i),w
  1249  025F  00B8               	movwf	(??_main+0)+0
  1250  0260  3001               	movlw	(02h)-1
  1251  0261                     u4105:
  1252  0261  35B8               	lslf	(??_main+0)+0,f
  1253  0262  3EFF               	addlw	-1
  1254  0263  1D03               	skipz
  1255  0264  2A61               	goto	u4105
  1256  0265  3538               	lslf	(??_main+0)+0,w
  1257  0266  3EA0               	addlw	_average&0ffh
  1258  0267  0086               	movwf	fsr1l
  1259  0268  0187               	clrf fsr1h	
  1260                           	
  1261  0269  3F40               	moviw	[0]fsr1
  1262  026A  00B9               	movwf	((??_main+1)+0+0)
  1263  026B  3F41               	moviw	[1]fsr1
  1264  026C  00BA               	movwf	((??_main+1)+0+1)
  1265  026D  3F42               	moviw	[2]fsr1
  1266  026E  00BB               	movwf	((??_main+1)+0+2)
  1267  026F  3F43               	moviw	[3]fsr1
  1268  0270  00BC               	movwf	((??_main+1)+0+3)
  1269  0271  0847               	movf	(main@i),w
  1270  0272  00BD               	movwf	(??_main+5)+0
  1271  0273  3001               	movlw	(02h)-1
  1272  0274                     u4115:
  1273  0274  35BD               	lslf	(??_main+5)+0,f
  1274  0275  3EFF               	addlw	-1
  1275  0276  1D03               	skipz
  1276  0277  2A74               	goto	u4115
  1277  0278  353D               	lslf	(??_main+5)+0,w
  1278  0279  3EA0               	addlw	_threshold&0ffh
  1279  027A  0086               	movwf	fsr1l
  1280  027B  3001               	movlw 1	; select bank3/4
  1281  027C  0087               	movwf fsr1h	
  1282                           	
  1283  027D  0839               	movf	0+(??_main+1)+0,w
  1284  027E  0781               	addwf	indf1,f
  1285  027F  3141               	addfsr	fsr1,1
  1286  0280  083A               	movf	1+(??_main+1)+0,w
  1287  0281  3D81               	addwfc	indf1,f
  1288  0282  3141               	addfsr	fsr1,1
  1289  0283  083B               	movf	2+(??_main+1)+0,w
  1290  0284  3D81               	addwfc	indf1,f
  1291  0285  3141               	addfsr	fsr1,1
  1292  0286  083C               	movf	3+(??_main+1)+0,w
  1293  0287  3D81               	addwfc	indf1,f
  1294                           
  1295                           	line	268
  1296                           	
  1297  0288                     l5832:	
  1298                           ;main.c: 268: if ( i == 7 ) tholdcount++ ;
  1299  0288  0847               	movf	(main@i),w
  1300  0289  3A07               	xorlw	07h&0ffh
  1301  028A  1D03               	skipz
  1302  028B  2A8D               	goto	u4121
  1303  028C  2A8E               	goto	u4120
  1304  028D                     u4121:
  1305  028D  2A93               	goto	l5836
  1306  028E                     u4120:
  1307                           	
  1308  028E                     l5834:	
  1309  028E  3001               	movlw	(01h)
  1310  028F  00B8               	movwf	(??_main+0)+0
  1311  0290  0838               	movf	(??_main+0)+0,w
  1312  0291  07C3               	addwf	(main@tholdcount),f
  1313  0292  2A93               	goto	l5836
  1314                           	
  1315  0293                     l1913:	
  1316                           	line	269
  1317                           	
  1318  0293                     l5836:	
  1319                           ;main.c: 269: if( tholdcount == 16 )
  1320  0293  0843               	movf	(main@tholdcount),w
  1321  0294  3A10               	xorlw	010h&0ffh
  1322  0295  1D03               	skipz
  1323  0296  2A98               	goto	u4131
  1324  0297  2A99               	goto	u4130
  1325  0298                     u4131:
  1326  0298  2D5A               	goto	l5932
  1327  0299                     u4130:
  1328                           	line	271
  1329                           	
  1330  0299                     l5838:	
  1331                           ;main.c: 270: {
  1332                           ;main.c: 271: for ( j = 0 ; j < 8 ; j++ )
  1333  0299  01C5               	clrf	(main@j)
  1334                           	
  1335  029A                     l5840:	
  1336  029A  3008               	movlw	(08h)
  1337  029B  0245               	subwf	(main@j),w
  1338  029C  1C03               	skipc
  1339  029D  2A9F               	goto	u4141
  1340  029E  2AA0               	goto	u4140
  1341  029F                     u4141:
  1342  029F  2AA2               	goto	l5844
  1343  02A0                     u4140:
  1344  02A0  2AC4               	goto	l5850
  1345                           	
  1346  02A1                     l5842:	
  1347  02A1  2AC4               	goto	l5850
  1348                           	line	272
  1349                           	
  1350  02A2                     l1915:	
  1351                           	
  1352  02A2                     l5844:	
  1353                           ;main.c: 272: threshold[ j ] >>= 3 ;
  1354  02A2  0845               	movf	(main@j),w
  1355  02A3  00B8               	movwf	(??_main+0)+0
  1356  02A4  3001               	movlw	(02h)-1
  1357  02A5                     u4155:
  1358  02A5  35B8               	lslf	(??_main+0)+0,f
  1359  02A6  3EFF               	addlw	-1
  1360  02A7  1D03               	skipz
  1361  02A8  2AA5               	goto	u4155
  1362  02A9  3538               	lslf	(??_main+0)+0,w
  1363  02AA  3EA0               	addlw	_threshold&0ffh
  1364  02AB  0086               	movwf	fsr1l
  1365  02AC  3001               	movlw 1	; select bank3/4
  1366  02AD  0087               	movwf fsr1h	
  1367                           	
  1368  02AE  3003               	movlw	03h
  1369  02AF                     u4165:
  1370  02AF  3143               	addfsr	fsr1,3
  1371  02B0  3681               	lsrf	indf1,f
  1372  02B1  317F               	addfsr	fsr1,-1
  1373  02B2  0C81               	rrf	indf1,f
  1374  02B3  317F               	addfsr	fsr1,-1
  1375  02B4  0C81               	rrf	indf1,f
  1376  02B5  317F               	addfsr	fsr1,-1
  1377  02B6  0C81               	rrf	indf1,f
  1378  02B7  0B89               	decfsz	wreg,f
  1379  02B8  2AAF               	goto	u4165
  1380                           	line	271
  1381                           	
  1382  02B9                     l5846:	
  1383  02B9  3001               	movlw	(01h)
  1384  02BA  00B8               	movwf	(??_main+0)+0
  1385  02BB  0838               	movf	(??_main+0)+0,w
  1386  02BC  07C5               	addwf	(main@j),f
  1387                           	
  1388  02BD                     l5848:	
  1389  02BD  3008               	movlw	(08h)
  1390  02BE  0245               	subwf	(main@j),w
  1391  02BF  1C03               	skipc
  1392  02C0  2AC2               	goto	u4171
  1393  02C1  2AC3               	goto	u4170
  1394  02C2                     u4171:
  1395  02C2  2AA2               	goto	l5844
  1396  02C3                     u4170:
  1397  02C3  2AC4               	goto	l5850
  1398                           	
  1399  02C4                     l1916:	
  1400                           	line	273
  1401                           	
  1402  02C4                     l5850:	
  1403                           ;main.c: 273: tholdflg = 1;
  1404  02C4  01EF               	clrf	(_tholdflg)
  1405  02C5  1403               	bsf	status,0
  1406  02C6  0DEF               	rlf	(_tholdflg),f
  1407  02C7  2D5A               	goto	l5932
  1408                           	line	274
  1409                           	
  1410  02C8                     l1914:	
  1411                           	line	275
  1412                           ;main.c: 274: }
  1413                           ;main.c: 275: }
  1414  02C8  2D5A               	goto	l5932
  1415                           	line	276
  1416                           	
  1417  02C9                     l1911:	
  1418                           	line	278
  1419                           	
  1420  02C9                     l5852:	
  1421                           ;main.c: 276: else
  1422                           ;main.c: 277: {
  1423                           ;main.c: 278: olddiff[i] = curdiff[i];
  1424  02C9  0847               	movf	(main@i),w
  1425  02CA  00B8               	movwf	(??_main+0)+0
  1426  02CB  3001               	movlw	(02h)-1
  1427  02CC                     u4185:
  1428  02CC  35B8               	lslf	(??_main+0)+0,f
  1429  02CD  3EFF               	addlw	-1
  1430  02CE  1D03               	skipz
  1431  02CF  2ACC               	goto	u4185
  1432  02D0  3538               	lslf	(??_main+0)+0,w
  1433  02D1  3E20               	addlw	_curdiff&0ffh
  1434  02D2  0086               	movwf	fsr1l
  1435  02D3  3001               	movlw 1	; select bank2/3
  1436  02D4  0087               	movwf fsr1h	
  1437                           	
  1438  02D5  3F40               	moviw	[0]fsr1
  1439  02D6  00B9               	movwf	((??_main+1)+0+0)
  1440  02D7  3F41               	moviw	[1]fsr1
  1441  02D8  00BA               	movwf	((??_main+1)+0+1)
  1442  02D9  3F42               	moviw	[2]fsr1
  1443  02DA  00BB               	movwf	((??_main+1)+0+2)
  1444  02DB  3F43               	moviw	[3]fsr1
  1445  02DC  00BC               	movwf	((??_main+1)+0+3)
  1446  02DD  0847               	movf	(main@i),w
  1447  02DE  00BD               	movwf	(??_main+5)+0
  1448  02DF  3001               	movlw	(02h)-1
  1449  02E0                     u4195:
  1450  02E0  35BD               	lslf	(??_main+5)+0,f
  1451  02E1  3EFF               	addlw	-1
  1452  02E2  1D03               	skipz
  1453  02E3  2AE0               	goto	u4195
  1454  02E4  353D               	lslf	(??_main+5)+0,w
  1455  02E5  3E40               	addlw	_olddiff&0ffh
  1456  02E6  0086               	movwf	fsr1l
  1457  02E7  3001               	movlw 1	; select bank2/3
  1458  02E8  0087               	movwf fsr1h	
  1459                           	
  1460  02E9  0839               	movf	0+(??_main+1)+0,w
  1461  02EA  3FC0               	movwi	[0]fsr1
  1462  02EB  083A               	movf	1+(??_main+1)+0,w
  1463  02EC  3FC1               	movwi	[1]fsr1
  1464  02ED  083B               	movf	2+(??_main+1)+0,w
  1465  02EE  3FC2               	movwi	[2]fsr1
  1466  02EF  083C               	movf	3+(??_main+1)+0,w
  1467  02F0  3FC3               	movwi	[3]fsr1
  1468                           	line	279
  1469                           ;main.c: 279: curdiff[i] = threshold[i] - average[i];
  1470  02F1  0847               	movf	(main@i),w
  1471  02F2  00B8               	movwf	(??_main+0)+0
  1472  02F3  3001               	movlw	(02h)-1
  1473  02F4                     u4205:
  1474  02F4  35B8               	lslf	(??_main+0)+0,f
  1475  02F5  3EFF               	addlw	-1
  1476  02F6  1D03               	skipz
  1477  02F7  2AF4               	goto	u4205
  1478  02F8  3538               	lslf	(??_main+0)+0,w
  1479  02F9  3EA0               	addlw	_threshold&0ffh
  1480  02FA  0086               	movwf	fsr1l
  1481  02FB  3001               	movlw 1	; select bank3/4
  1482  02FC  0087               	movwf fsr1h	
  1483                           	
  1484  02FD  3F40               	moviw	[0]fsr1
  1485  02FE  00B9               	movwf	((??_main+1)+0+0)
  1486  02FF  3F41               	moviw	[1]fsr1
  1487  0300  00BA               	movwf	((??_main+1)+0+1)
  1488  0301  3F42               	moviw	[2]fsr1
  1489  0302  00BB               	movwf	((??_main+1)+0+2)
  1490  0303  3F43               	moviw	[3]fsr1
  1491  0304  00BC               	movwf	((??_main+1)+0+3)
  1492  0305  0847               	movf	(main@i),w
  1493  0306  00BD               	movwf	(??_main+5)+0
  1494  0307  3001               	movlw	(02h)-1
  1495  0308                     u4215:
  1496  0308  35BD               	lslf	(??_main+5)+0,f
  1497  0309  3EFF               	addlw	-1
  1498  030A  1D03               	skipz
  1499  030B  2B08               	goto	u4215
  1500  030C  353D               	lslf	(??_main+5)+0,w
  1501  030D  3EA0               	addlw	_average&0ffh
  1502  030E  0086               	movwf	fsr1l
  1503  030F  0187               	clrf fsr1h	
  1504                           	
  1505  0310  3F40               	moviw	[0]fsr1
  1506  0311  00BE               	movwf	((??_main+6)+0+0)
  1507  0312  3F41               	moviw	[1]fsr1
  1508  0313  00BF               	movwf	((??_main+6)+0+1)
  1509  0314  3F42               	moviw	[2]fsr1
  1510  0315  00C0               	movwf	((??_main+6)+0+2)
  1511  0316  3F43               	moviw	[3]fsr1
  1512  0317  00C1               	movwf	((??_main+6)+0+3)
  1513  0318  09BE               	comf	(??_main+6)+0,f
  1514  0319  09BF               	comf	(??_main+6)+1,f
  1515  031A  09C0               	comf	(??_main+6)+2,f
  1516  031B  09C1               	comf	(??_main+6)+3,f
  1517  031C  0ABE               	incf	(??_main+6)+0,f
  1518  031D  1903               	skipnz
  1519  031E  0ABF               	incf	(??_main+6)+1,f
  1520  031F  1903               	skipnz
  1521  0320  0AC0               	incf	(??_main+6)+2,f
  1522  0321  1903               	skipnz
  1523  0322  0AC1               	incf	(??_main+6)+3,f
  1524  0323  083E               	movf	0+(??_main+6)+0,w
  1525  0324  07B9               	addwf	(??_main+1)+0,f
  1526  0325  083F               	movf	1+(??_main+6)+0,w
  1527  0326  3DBA               	addwfc	(??_main+1)+1,f
  1528  0327  0840               	movf	2+(??_main+6)+0,w
  1529  0328  3DBB               	addwfc	(??_main+1)+2,f
  1530  0329  0841               	movf	3+(??_main+6)+0,w
  1531  032A  3DBC               	addwfc	(??_main+1)+3,f
  1532  032B  0847               	movf	(main@i),w
  1533  032C  00C2               	movwf	(??_main+10)+0
  1534  032D  3001               	movlw	(02h)-1
  1535  032E                     u4225:
  1536  032E  35C2               	lslf	(??_main+10)+0,f
  1537  032F  3EFF               	addlw	-1
  1538  0330  1D03               	skipz
  1539  0331  2B2E               	goto	u4225
  1540  0332  3542               	lslf	(??_main+10)+0,w
  1541  0333  3E20               	addlw	_curdiff&0ffh
  1542  0334  0086               	movwf	fsr1l
  1543  0335  3001               	movlw 1	; select bank2/3
  1544  0336  0087               	movwf fsr1h	
  1545                           	
  1546  0337  0839               	movf	0+(??_main+1)+0,w
  1547  0338  3FC0               	movwi	[0]fsr1
  1548  0339  083A               	movf	1+(??_main+1)+0,w
  1549  033A  3FC1               	movwi	[1]fsr1
  1550  033B  083B               	movf	2+(??_main+1)+0,w
  1551  033C  3FC2               	movwi	[2]fsr1
  1552  033D  083C               	movf	3+(??_main+1)+0,w
  1553  033E  3FC3               	movwi	[3]fsr1
  1554                           	line	280
  1555                           	
  1556  033F                     l5854:	
  1557                           ;main.c: 280: if ( curdiff[i] > olddiff[i] )
  1558  033F  0847               	movf	(main@i),w
  1559  0340  00B8               	movwf	(??_main+0)+0
  1560  0341  3001               	movlw	(02h)-1
  1561  0342                     u4235:
  1562  0342  35B8               	lslf	(??_main+0)+0,f
  1563  0343  3EFF               	addlw	-1
  1564  0344  1D03               	skipz
  1565  0345  2B42               	goto	u4235
  1566  0346  3538               	lslf	(??_main+0)+0,w
  1567  0347  3E20               	addlw	_curdiff&0ffh
  1568  0348  0086               	movwf	fsr1l
  1569  0349  3001               	movlw 1	; select bank2/3
  1570  034A  0087               	movwf fsr1h	
  1571                           	
  1572  034B  3F40               	moviw	[0]fsr1
  1573  034C  00B9               	movwf	((??_main+1)+0+0)
  1574  034D  3F41               	moviw	[1]fsr1
  1575  034E  00BA               	movwf	((??_main+1)+0+1)
  1576  034F  3F42               	moviw	[2]fsr1
  1577  0350  00BB               	movwf	((??_main+1)+0+2)
  1578  0351  3F43               	moviw	[3]fsr1
  1579  0352  00BC               	movwf	((??_main+1)+0+3)
  1580  0353  0847               	movf	(main@i),w
  1581  0354  00BD               	movwf	(??_main+5)+0
  1582  0355  3001               	movlw	(02h)-1
  1583  0356                     u4245:
  1584  0356  35BD               	lslf	(??_main+5)+0,f
  1585  0357  3EFF               	addlw	-1
  1586  0358  1D03               	skipz
  1587  0359  2B56               	goto	u4245
  1588  035A  353D               	lslf	(??_main+5)+0,w
  1589  035B  3E40               	addlw	_olddiff&0ffh
  1590  035C  0086               	movwf	fsr1l
  1591  035D  3001               	movlw 1	; select bank2/3
  1592  035E  0087               	movwf fsr1h	
  1593                           	
  1594  035F  3F40               	moviw	[0]fsr1
  1595  0360  00BE               	movwf	((??_main+6)+0+0)
  1596  0361  3F41               	moviw	[1]fsr1
  1597  0362  00BF               	movwf	((??_main+6)+0+1)
  1598  0363  3F42               	moviw	[2]fsr1
  1599  0364  00C0               	movwf	((??_main+6)+0+2)
  1600  0365  3F43               	moviw	[3]fsr1
  1601  0366  00C1               	movwf	((??_main+6)+0+3)
  1602  0367  0841               	movf	3+(??_main+6)+0,w
  1603  0368  3A80               	xorlw	80h
  1604  0369  00FF               	movwf	btemp+1
  1605  036A  083C               	movf	3+(??_main+1)+0,w
  1606  036B  3A80               	xorlw	80h
  1607  036C  027F               	subwf	btemp+1,w
  1608                           	
  1609  036D  1D03               	skipz
  1610  036E  2B79               	goto	u4253
  1611  036F  083B               	movf	2+(??_main+1)+0,w
  1612  0370  0240               	subwf	2+(??_main+6)+0,w
  1613  0371  1D03               	skipz
  1614  0372  2B79               	goto	u4253
  1615  0373  083A               	movf	1+(??_main+1)+0,w
  1616  0374  023F               	subwf	1+(??_main+6)+0,w
  1617  0375  1D03               	skipz
  1618  0376  2B79               	goto	u4253
  1619  0377  0839               	movf	0+(??_main+1)+0,w
  1620  0378  023E               	subwf	0+(??_main+6)+0,w
  1621  0379                     u4253:
  1622  0379  1803               	skipnc
  1623  037A  2B7C               	goto	u4251
  1624  037B  2B7D               	goto	u4250
  1625  037C                     u4251:
  1626  037C  2BCD               	goto	l5858
  1627  037D                     u4250:
  1628                           	line	281
  1629                           	
  1630  037D                     l5856:	
  1631                           ;main.c: 281: diff[i]= curdiff[i] - olddiff[i];
  1632  037D  0847               	movf	(main@i),w
  1633  037E  00B8               	movwf	(??_main+0)+0
  1634  037F  3001               	movlw	(02h)-1
  1635  0380                     u4265:
  1636  0380  35B8               	lslf	(??_main+0)+0,f
  1637  0381  3EFF               	addlw	-1
  1638  0382  1D03               	skipz
  1639  0383  2B80               	goto	u4265
  1640  0384  3538               	lslf	(??_main+0)+0,w
  1641  0385  3E20               	addlw	_curdiff&0ffh
  1642  0386  0086               	movwf	fsr1l
  1643  0387  3001               	movlw 1	; select bank2/3
  1644  0388  0087               	movwf fsr1h	
  1645                           	
  1646  0389  3F40               	moviw	[0]fsr1
  1647  038A  00B9               	movwf	((??_main+1)+0+0)
  1648  038B  3F41               	moviw	[1]fsr1
  1649  038C  00BA               	movwf	((??_main+1)+0+1)
  1650  038D  3F42               	moviw	[2]fsr1
  1651  038E  00BB               	movwf	((??_main+1)+0+2)
  1652  038F  3F43               	moviw	[3]fsr1
  1653  0390  00BC               	movwf	((??_main+1)+0+3)
  1654  0391  0847               	movf	(main@i),w
  1655  0392  00BD               	movwf	(??_main+5)+0
  1656  0393  3001               	movlw	(02h)-1
  1657  0394                     u4275:
  1658  0394  35BD               	lslf	(??_main+5)+0,f
  1659  0395  3EFF               	addlw	-1
  1660  0396  1D03               	skipz
  1661  0397  2B94               	goto	u4275
  1662  0398  353D               	lslf	(??_main+5)+0,w
  1663  0399  3E40               	addlw	_olddiff&0ffh
  1664  039A  0086               	movwf	fsr1l
  1665  039B  3001               	movlw 1	; select bank2/3
  1666  039C  0087               	movwf fsr1h	
  1667                           	
  1668  039D  3F40               	moviw	[0]fsr1
  1669  039E  00BE               	movwf	((??_main+6)+0+0)
  1670  039F  3F41               	moviw	[1]fsr1
  1671  03A0  00BF               	movwf	((??_main+6)+0+1)
  1672  03A1  3F42               	moviw	[2]fsr1
  1673  03A2  00C0               	movwf	((??_main+6)+0+2)
  1674  03A3  3F43               	moviw	[3]fsr1
  1675  03A4  00C1               	movwf	((??_main+6)+0+3)
  1676  03A5  09BE               	comf	(??_main+6)+0,f
  1677  03A6  09BF               	comf	(??_main+6)+1,f
  1678  03A7  09C0               	comf	(??_main+6)+2,f
  1679  03A8  09C1               	comf	(??_main+6)+3,f
  1680  03A9  0ABE               	incf	(??_main+6)+0,f
  1681  03AA  1903               	skipnz
  1682  03AB  0ABF               	incf	(??_main+6)+1,f
  1683  03AC  1903               	skipnz
  1684  03AD  0AC0               	incf	(??_main+6)+2,f
  1685  03AE  1903               	skipnz
  1686  03AF  0AC1               	incf	(??_main+6)+3,f
  1687  03B0  083E               	movf	0+(??_main+6)+0,w
  1688  03B1  07B9               	addwf	(??_main+1)+0,f
  1689  03B2  083F               	movf	1+(??_main+6)+0,w
  1690  03B3  3DBA               	addwfc	(??_main+1)+1,f
  1691  03B4  0840               	movf	2+(??_main+6)+0,w
  1692  03B5  3DBB               	addwfc	(??_main+1)+2,f
  1693  03B6  0841               	movf	3+(??_main+6)+0,w
  1694  03B7  3DBC               	addwfc	(??_main+1)+3,f
  1695  03B8  0847               	movf	(main@i),w
  1696  03B9  00C2               	movwf	(??_main+10)+0
  1697  03BA  3001               	movlw	(02h)-1
  1698  03BB                     u4285:
  1699  03BB  35C2               	lslf	(??_main+10)+0,f
  1700  03BC  3EFF               	addlw	-1
  1701  03BD  1D03               	skipz
  1702  03BE  2BBB               	goto	u4285
  1703  03BF  3542               	lslf	(??_main+10)+0,w
  1704  03C0  3EC0               	addlw	_diff&0ffh
  1705  03C1  0086               	movwf	fsr1l
  1706  03C2  3001               	movlw 1	; select bank3/4
  1707  03C3  0087               	movwf fsr1h	
  1708                           	
  1709  03C4  0839               	movf	0+(??_main+1)+0,w
  1710  03C5  3FC0               	movwi	[0]fsr1
  1711  03C6  083A               	movf	1+(??_main+1)+0,w
  1712  03C7  3FC1               	movwi	[1]fsr1
  1713  03C8  083B               	movf	2+(??_main+1)+0,w
  1714  03C9  3FC2               	movwi	[2]fsr1
  1715  03CA  083C               	movf	3+(??_main+1)+0,w
  1716  03CB  3FC3               	movwi	[3]fsr1
  1717  03CC  2C1D               	goto	l5860
  1718                           	line	282
  1719                           	
  1720  03CD                     l1918:	
  1721                           	line	283
  1722                           	
  1723  03CD                     l5858:	
  1724                           ;main.c: 282: else
  1725                           ;main.c: 283: diff[i]= olddiff[i]- curdiff[i];
  1726  03CD  0847               	movf	(main@i),w
  1727  03CE  00B8               	movwf	(??_main+0)+0
  1728  03CF  3001               	movlw	(02h)-1
  1729  03D0                     u4295:
  1730  03D0  35B8               	lslf	(??_main+0)+0,f
  1731  03D1  3EFF               	addlw	-1
  1732  03D2  1D03               	skipz
  1733  03D3  2BD0               	goto	u4295
  1734  03D4  3538               	lslf	(??_main+0)+0,w
  1735  03D5  3E40               	addlw	_olddiff&0ffh
  1736  03D6  0086               	movwf	fsr1l
  1737  03D7  3001               	movlw 1	; select bank2/3
  1738  03D8  0087               	movwf fsr1h	
  1739                           	
  1740  03D9  3F40               	moviw	[0]fsr1
  1741  03DA  00B9               	movwf	((??_main+1)+0+0)
  1742  03DB  3F41               	moviw	[1]fsr1
  1743  03DC  00BA               	movwf	((??_main+1)+0+1)
  1744  03DD  3F42               	moviw	[2]fsr1
  1745  03DE  00BB               	movwf	((??_main+1)+0+2)
  1746  03DF  3F43               	moviw	[3]fsr1
  1747  03E0  00BC               	movwf	((??_main+1)+0+3)
  1748  03E1  0847               	movf	(main@i),w
  1749  03E2  00BD               	movwf	(??_main+5)+0
  1750  03E3  3001               	movlw	(02h)-1
  1751  03E4                     u4305:
  1752  03E4  35BD               	lslf	(??_main+5)+0,f
  1753  03E5  3EFF               	addlw	-1
  1754  03E6  1D03               	skipz
  1755  03E7  2BE4               	goto	u4305
  1756  03E8  353D               	lslf	(??_main+5)+0,w
  1757  03E9  3E20               	addlw	_curdiff&0ffh
  1758  03EA  0086               	movwf	fsr1l
  1759  03EB  3001               	movlw 1	; select bank2/3
  1760  03EC  0087               	movwf fsr1h	
  1761                           	
  1762  03ED  3F40               	moviw	[0]fsr1
  1763  03EE  00BE               	movwf	((??_main+6)+0+0)
  1764  03EF  3F41               	moviw	[1]fsr1
  1765  03F0  00BF               	movwf	((??_main+6)+0+1)
  1766  03F1  3F42               	moviw	[2]fsr1
  1767  03F2  00C0               	movwf	((??_main+6)+0+2)
  1768  03F3  3F43               	moviw	[3]fsr1
  1769  03F4  00C1               	movwf	((??_main+6)+0+3)
  1770  03F5  09BE               	comf	(??_main+6)+0,f
  1771  03F6  09BF               	comf	(??_main+6)+1,f
  1772  03F7  09C0               	comf	(??_main+6)+2,f
  1773  03F8  09C1               	comf	(??_main+6)+3,f
  1774  03F9  0ABE               	incf	(??_main+6)+0,f
  1775  03FA  1903               	skipnz
  1776  03FB  0ABF               	incf	(??_main+6)+1,f
  1777  03FC  1903               	skipnz
  1778  03FD  0AC0               	incf	(??_main+6)+2,f
  1779  03FE  1903               	skipnz
  1780  03FF  0AC1               	incf	(??_main+6)+3,f
  1781  0400  083E               	movf	0+(??_main+6)+0,w
  1782  0401  07B9               	addwf	(??_main+1)+0,f
  1783  0402  083F               	movf	1+(??_main+6)+0,w
  1784  0403  3DBA               	addwfc	(??_main+1)+1,f
  1785  0404  0840               	movf	2+(??_main+6)+0,w
  1786  0405  3DBB               	addwfc	(??_main+1)+2,f
  1787  0406  0841               	movf	3+(??_main+6)+0,w
  1788  0407  3DBC               	addwfc	(??_main+1)+3,f
  1789  0408  0847               	movf	(main@i),w
  1790  0409  00C2               	movwf	(??_main+10)+0
  1791  040A  3001               	movlw	(02h)-1
  1792  040B                     u4315:
  1793  040B  35C2               	lslf	(??_main+10)+0,f
  1794  040C  3EFF               	addlw	-1
  1795  040D  1D03               	skipz
  1796  040E  2C0B               	goto	u4315
  1797  040F  3542               	lslf	(??_main+10)+0,w
  1798  0410  3EC0               	addlw	_diff&0ffh
  1799  0411  0086               	movwf	fsr1l
  1800  0412  3001               	movlw 1	; select bank3/4
  1801  0413  0087               	movwf fsr1h	
  1802                           	
  1803  0414  0839               	movf	0+(??_main+1)+0,w
  1804  0415  3FC0               	movwi	[0]fsr1
  1805  0416  083A               	movf	1+(??_main+1)+0,w
  1806  0417  3FC1               	movwi	[1]fsr1
  1807  0418  083B               	movf	2+(??_main+1)+0,w
  1808  0419  3FC2               	movwi	[2]fsr1
  1809  041A  083C               	movf	3+(??_main+1)+0,w
  1810  041B  3FC3               	movwi	[3]fsr1
  1811  041C  2C1D               	goto	l5860
  1812                           	
  1813  041D                     l1919:	
  1814                           	line	284
  1815                           	
  1816  041D                     l5860:	
  1817                           ;main.c: 284: if( diff[i] > max ) { max = diff[i]; pos = i; }
  1818  041D  0847               	movf	(main@i),w
  1819  041E  00B8               	movwf	(??_main+0)+0
  1820  041F  3001               	movlw	(02h)-1
  1821  0420                     u4325:
  1822  0420  35B8               	lslf	(??_main+0)+0,f
  1823  0421  3EFF               	addlw	-1
  1824  0422  1D03               	skipz
  1825  0423  2C20               	goto	u4325
  1826  0424  3538               	lslf	(??_main+0)+0,w
  1827  0425  3EC0               	addlw	_diff&0ffh
  1828  0426  0086               	movwf	fsr1l
  1829  0427  3001               	movlw 1	; select bank3/4
  1830  0428  0087               	movwf fsr1h	
  1831                           	
  1832  0429  3F40               	moviw	[0]fsr1
  1833  042A  00B9               	movwf	((??_main+1)+0+0)
  1834  042B  3F41               	moviw	[1]fsr1
  1835  042C  00BA               	movwf	((??_main+1)+0+1)
  1836  042D  3F42               	moviw	[2]fsr1
  1837  042E  00BB               	movwf	((??_main+1)+0+2)
  1838  042F  3F43               	moviw	[3]fsr1
  1839  0430  00BC               	movwf	((??_main+1)+0+3)
  1840  0431  0868               	movf	(_max+3),w
  1841  0432  3A80               	xorlw	80h
  1842  0433  00FF               	movwf	btemp+1
  1843  0434  083C               	movf	3+(??_main+1)+0,w
  1844  0435  3A80               	xorlw	80h
  1845  0436  027F               	subwf	btemp+1,w
  1846                           	
  1847  0437  1D03               	skipz
  1848  0438  2C43               	goto	u4333
  1849  0439  083B               	movf	2+(??_main+1)+0,w
  1850  043A  0267               	subwf	(_max+2),w
  1851  043B  1D03               	skipz
  1852  043C  2C43               	goto	u4333
  1853  043D  083A               	movf	1+(??_main+1)+0,w
  1854  043E  0266               	subwf	(_max+1),w
  1855  043F  1D03               	skipz
  1856  0440  2C43               	goto	u4333
  1857  0441  0839               	movf	0+(??_main+1)+0,w
  1858  0442  0265               	subwf	(_max),w
  1859  0443                     u4333:
  1860  0443  1803               	skipnc
  1861  0444  2C46               	goto	u4331
  1862  0445  2C47               	goto	u4330
  1863  0446                     u4331:
  1864  0446  2C60               	goto	l5866
  1865  0447                     u4330:
  1866                           	
  1867  0447                     l5862:	
  1868  0447  0847               	movf	(main@i),w
  1869  0448  00B8               	movwf	(??_main+0)+0
  1870  0449  3001               	movlw	(02h)-1
  1871  044A                     u4345:
  1872  044A  35B8               	lslf	(??_main+0)+0,f
  1873  044B  3EFF               	addlw	-1
  1874  044C  1D03               	skipz
  1875  044D  2C4A               	goto	u4345
  1876  044E  3538               	lslf	(??_main+0)+0,w
  1877  044F  3EC0               	addlw	_diff&0ffh
  1878  0450  0086               	movwf	fsr1l
  1879  0451  3001               	movlw 1	; select bank3/4
  1880  0452  0087               	movwf fsr1h	
  1881                           	
  1882  0453  3F40               	moviw	[0]fsr1
  1883  0454  00E5               	movwf	(_max)
  1884  0455  3F41               	moviw	[1]fsr1
  1885  0456  00E6               	movwf	(_max+1)
  1886  0457  3F42               	moviw	[2]fsr1
  1887  0458  00E7               	movwf	(_max+2)
  1888  0459  3F43               	moviw	[3]fsr1
  1889  045A  00E8               	movwf	(_max+3)
  1890                           	
  1891  045B                     l5864:	
  1892  045B  0847               	movf	(main@i),w
  1893  045C  00B8               	movwf	(??_main+0)+0
  1894  045D  0838               	movf	(??_main+0)+0,w
  1895  045E  00EE               	movwf	(_pos)
  1896  045F  2C60               	goto	l5866
  1897                           	
  1898  0460                     l1920:	
  1899                           	line	289
  1900                           	
  1901  0460                     l5866:	
  1902                           ;main.c: 289: if(i == 7)
  1903  0460  0847               	movf	(main@i),w
  1904  0461  3A07               	xorlw	07h&0ffh
  1905  0462  1D03               	skipz
  1906  0463  2C65               	goto	u4351
  1907  0464  2C66               	goto	u4350
  1908  0465                     u4351:
  1909  0465  2D5A               	goto	l5932
  1910  0466                     u4350:
  1911                           	line	296
  1912                           	
  1913  0466                     l5868:	
  1914                           ;main.c: 290: {
  1915                           ;main.c: 296: for(t = 0; t < 8 ; t++)
  1916  0466  01C6               	clrf	(main@t)
  1917                           	
  1918  0467                     l5870:	
  1919  0467  3008               	movlw	(08h)
  1920  0468  0246               	subwf	(main@t),w
  1921  0469  1C03               	skipc
  1922  046A  2C6C               	goto	u4361
  1923  046B  2C6D               	goto	u4360
  1924  046C                     u4361:
  1925  046C  2C6F               	goto	l5874
  1926  046D                     u4360:
  1927  046D  2D0A               	goto	l5908
  1928                           	
  1929  046E                     l5872:	
  1930  046E  2D0A               	goto	l5908
  1931                           	line	297
  1932                           	
  1933  046F                     l1922:	
  1934                           	line	298
  1935                           	
  1936  046F                     l5874:	
  1937                           ;main.c: 297: {
  1938                           ;main.c: 298: if(t != pos) {if(keycnt[t])keycnt[t]--;keystat[t] =0;}
  1939  046F  0846               	movf	(main@t),w
  1940  0470  066E               	xorwf	(_pos),w
  1941  0471  1903               	skipnz
  1942  0472  2C74               	goto	u4371
  1943  0473  2C75               	goto	u4370
  1944  0474                     u4371:
  1945  0474  2C8B               	goto	l5880
  1946  0475                     u4370:
  1947                           	
  1948  0475                     l5876:	
  1949  0475  0846               	movf	(main@t),w
  1950  0476  3E50               	addlw	_keycnt&0ffh
  1951  0477  0086               	movwf	fsr1l
  1952  0478  0187               	clrf fsr1h	
  1953                           	
  1954  0479  0801               	movf	indf1,w
  1955  047A  3A00               	xorlw	0&0ffh
  1956  047B  1903               	skipnz
  1957  047C  2C7E               	goto	u4381
  1958  047D  2C7F               	goto	u4380
  1959  047E                     u4381:
  1960  047E  2C85               	goto	l1925
  1961  047F                     u4380:
  1962                           	
  1963  047F                     l5878:	
  1964  047F  0846               	movf	(main@t),w
  1965  0480  3E50               	addlw	_keycnt&0ffh
  1966  0481  0086               	movwf	fsr1l
  1967  0482  0187               	clrf fsr1h	
  1968                           	
  1969  0483  3001               	movlw	low(01h)
  1970  0484  0281               	subwf	indf1,f
  1971                           	
  1972  0485                     l1925:	
  1973  0485  0846               	movf	(main@t),w
  1974  0486  3E58               	addlw	_keystat&0ffh
  1975  0487  0086               	movwf	fsr1l
  1976  0488  0187               	clrf fsr1h	
  1977                           	
  1978  0489  0181               	clrf	indf1
  1979  048A  2CEC               	goto	l5902
  1980                           	line	299
  1981                           	
  1982  048B                     l1924:	
  1983                           	
  1984  048B                     l5880:	
  1985                           ;main.c: 299: else if( max > 600 )
  1986  048B  0868               	movf	(_max+3),w
  1987  048C  3A80               	xorlw	80h
  1988  048D  00FF               	movwf	btemp+1
  1989  048E  3000               	movlw	0
  1990  048F  3A80               	xorlw	80h
  1991  0490  027F               	subwf	btemp+1,w
  1992                           	
  1993  0491  1D03               	skipz
  1994  0492  2C9D               	goto	u4393
  1995  0493  3000               	movlw	0
  1996  0494  0267               	subwf	(_max+2),w
  1997  0495  1D03               	skipz
  1998  0496  2C9D               	goto	u4393
  1999  0497  3002               	movlw	02h
  2000  0498  0266               	subwf	(_max+1),w
  2001  0499  1D03               	skipz
  2002  049A  2C9D               	goto	u4393
  2003  049B  3059               	movlw	059h
  2004  049C  0265               	subwf	(_max),w
  2005  049D                     u4393:
  2006  049D  1C03               	skipc
  2007  049E  2CA0               	goto	u4391
  2008  049F  2CA1               	goto	u4390
  2009  04A0                     u4391:
  2010  04A0  2CD5               	goto	l5898
  2011  04A1                     u4390:
  2012                           	line	301
  2013                           	
  2014  04A1                     l5882:	
  2015                           ;main.c: 300: {
  2016                           ;main.c: 301: keycnt[t]++;
  2017  04A1  3001               	movlw	(01h)
  2018  04A2  00B8               	movwf	(??_main+0)+0
  2019  04A3  0846               	movf	(main@t),w
  2020  04A4  3E50               	addlw	_keycnt&0ffh
  2021  04A5  0086               	movwf	fsr1l
  2022  04A6  0187               	clrf fsr1h	
  2023                           	
  2024  04A7  0838               	movf	(??_main+0)+0,w
  2025  04A8  0781               	addwf	indf1,f
  2026                           	line	302
  2027                           ;main.c: 302: if( keycnt[t] > 7 )
  2028  04A9  0846               	movf	(main@t),w
  2029  04AA  3E50               	addlw	_keycnt&0ffh
  2030  04AB  0086               	movwf	fsr1l
  2031  04AC  0187               	clrf fsr1h	
  2032                           	
  2033  04AD  3008               	movlw	(08h)
  2034  04AE  0201               	subwf	indf1,w
  2035  04AF  1C03               	skipc
  2036  04B0  2CB2               	goto	u4401
  2037  04B1  2CB3               	goto	u4400
  2038  04B2                     u4401:
  2039  04B2  2CEC               	goto	l5902
  2040  04B3                     u4400:
  2041                           	line	304
  2042                           	
  2043  04B3                     l5884:	
  2044                           ;main.c: 303: {
  2045                           ;main.c: 304: for(k = 0 ; k < 8 ; k++) keycnt[k] = 0;
  2046  04B3  01C4               	clrf	(main@k)
  2047                           	
  2048  04B4                     l5886:	
  2049  04B4  3008               	movlw	(08h)
  2050  04B5  0244               	subwf	(main@k),w
  2051  04B6  1C03               	skipc
  2052  04B7  2CB9               	goto	u4411
  2053  04B8  2CBA               	goto	u4410
  2054  04B9                     u4411:
  2055  04B9  2CBC               	goto	l5890
  2056  04BA                     u4410:
  2057  04BA  2CCC               	goto	l5896
  2058                           	
  2059  04BB                     l5888:	
  2060  04BB  2CCC               	goto	l5896
  2061                           	
  2062  04BC                     l1929:	
  2063                           	
  2064  04BC                     l5890:	
  2065  04BC  0844               	movf	(main@k),w
  2066  04BD  3E50               	addlw	_keycnt&0ffh
  2067  04BE  0086               	movwf	fsr1l
  2068  04BF  0187               	clrf fsr1h	
  2069                           	
  2070  04C0  0181               	clrf	indf1
  2071                           	
  2072  04C1                     l5892:	
  2073  04C1  3001               	movlw	(01h)
  2074  04C2  00B8               	movwf	(??_main+0)+0
  2075  04C3  0838               	movf	(??_main+0)+0,w
  2076  04C4  07C4               	addwf	(main@k),f
  2077                           	
  2078  04C5                     l5894:	
  2079  04C5  3008               	movlw	(08h)
  2080  04C6  0244               	subwf	(main@k),w
  2081  04C7  1C03               	skipc
  2082  04C8  2CCA               	goto	u4421
  2083  04C9  2CCB               	goto	u4420
  2084  04CA                     u4421:
  2085  04CA  2CBC               	goto	l5890
  2086  04CB                     u4420:
  2087  04CB  2CCC               	goto	l5896
  2088                           	
  2089  04CC                     l1930:	
  2090                           	line	305
  2091                           	
  2092  04CC                     l5896:	
  2093                           ;main.c: 305: keystat[t] = 1;
  2094  04CC  0846               	movf	(main@t),w
  2095  04CD  3E58               	addlw	_keystat&0ffh
  2096  04CE  0086               	movwf	fsr1l
  2097  04CF  0187               	clrf fsr1h	
  2098                           	
  2099  04D0  0181               	clrf	indf1
  2100  04D1  1403               	bsf	status,0
  2101  04D2  0D81               	rlf	indf1,f
  2102  04D3  2CEC               	goto	l5902
  2103                           	line	306
  2104                           	
  2105  04D4                     l1928:	
  2106                           	line	307
  2107                           ;main.c: 306: }
  2108                           ;main.c: 307: }
  2109  04D4  2CEC               	goto	l5902
  2110                           	line	308
  2111                           	
  2112  04D5                     l1927:	
  2113                           	
  2114  04D5                     l5898:	
  2115                           ;main.c: 308: else{ if(keycnt[t])keycnt[t]-- ; keystat[t] = 0;}
  2116  04D5  0846               	movf	(main@t),w
  2117  04D6  3E50               	addlw	_keycnt&0ffh
  2118  04D7  0086               	movwf	fsr1l
  2119  04D8  0187               	clrf fsr1h	
  2120                           	
  2121  04D9  0801               	movf	indf1,w
  2122  04DA  3A00               	xorlw	0&0ffh
  2123  04DB  1903               	skipnz
  2124  04DC  2CDE               	goto	u4431
  2125  04DD  2CDF               	goto	u4430
  2126  04DE                     u4431:
  2127  04DE  2CE5               	goto	l1932
  2128  04DF                     u4430:
  2129                           	
  2130  04DF                     l5900:	
  2131  04DF  0846               	movf	(main@t),w
  2132  04E0  3E50               	addlw	_keycnt&0ffh
  2133  04E1  0086               	movwf	fsr1l
  2134  04E2  0187               	clrf fsr1h	
  2135                           	
  2136  04E3  3001               	movlw	low(01h)
  2137  04E4  0281               	subwf	indf1,f
  2138                           	
  2139  04E5                     l1932:	
  2140  04E5  0846               	movf	(main@t),w
  2141  04E6  3E58               	addlw	_keystat&0ffh
  2142  04E7  0086               	movwf	fsr1l
  2143  04E8  0187               	clrf fsr1h	
  2144                           	
  2145  04E9  0181               	clrf	indf1
  2146  04EA  2CEC               	goto	l5902
  2147                           	
  2148  04EB                     l1931:	
  2149  04EB  2CEC               	goto	l5902
  2150                           	
  2151  04EC                     l1926:	
  2152                           	line	309
  2153                           	
  2154  04EC                     l5902:	
  2155                           ;main.c: 309: USARTWriteInt(keycnt[t],1);
  2156  04EC  0846               	movf	(main@t),w
  2157  04ED  3E50               	addlw	_keycnt&0ffh
  2158  04EE  0086               	movwf	fsr1l
  2159  04EF  0187               	clrf fsr1h	
  2160                           	
  2161  04F0  0801               	movf	indf1,w
  2162  04F1  00B8               	movwf	(??_main+0)+0
  2163  04F2  01B9               	clrf	(??_main+0)+0+1
  2164  04F3  0838               	movf	0+(??_main+0)+0,w
  2165  04F4  00A9               	movwf	(?_USARTWriteInt)
  2166  04F5  0839               	movf	1+(??_main+0)+0,w
  2167  04F6  00AA               	movwf	(?_USARTWriteInt+1)
  2168  04F7  3001               	movlw	low(01h)
  2169  04F8  00AB               	movwf	0+(?_USARTWriteInt)+02h
  2170  04F9  3000               	movlw	high(01h)
  2171  04FA  00AC               	movwf	(0+(?_USARTWriteInt)+02h)+1
  2172  04FB  3185  256A  3181   	fcall	_USARTWriteInt
  2173                           	line	296
  2174                           	
  2175  04FE                     l5904:	
  2176  04FE  3001               	movlw	(01h)
  2177  04FF  0020               	movlb 0	; select bank0
  2178  0500  00B8               	movwf	(??_main+0)+0
  2179  0501  0838               	movf	(??_main+0)+0,w
  2180  0502  07C6               	addwf	(main@t),f
  2181                           	
  2182  0503                     l5906:	
  2183  0503  3008               	movlw	(08h)
  2184  0504  0246               	subwf	(main@t),w
  2185  0505  1C03               	skipc
  2186  0506  2D08               	goto	u4441
  2187  0507  2D09               	goto	u4440
  2188  0508                     u4441:
  2189  0508  2C6F               	goto	l5874
  2190  0509                     u4440:
  2191  0509  2D0A               	goto	l5908
  2192                           	
  2193  050A                     l1923:	
  2194                           	line	312
  2195                           	
  2196  050A                     l5908:	
  2197                           ;main.c: 310: }
  2198                           ;main.c: 312: if( pos != 9 && debounc[pos] == 0 )
  2199  050A  086E               	movf	(_pos),w
  2200  050B  3A09               	xorlw	09h&0ffh
  2201  050C  1903               	skipnz
  2202  050D  2D0F               	goto	u4451
  2203  050E  2D10               	goto	u4450
  2204  050F                     u4451:
  2205  050F  2D34               	goto	l5922
  2206  0510                     u4450:
  2207                           	
  2208  0510                     l5910:	
  2209  0510  086E               	movf	(_pos),w
  2210  0511  0709               	addwf	wreg,w
  2211  0512  3EE0               	addlw	_debounc&0ffh
  2212  0513  0086               	movwf	fsr1l
  2213  0514  0187               	clrf fsr1h	
  2214                           	
  2215  0515  0016               	moviw	fsr1++
  2216  0516  0401               	iorwf	indf1,w
  2217  0517  1D03               	skipz
  2218  0518  2D1A               	goto	u4461
  2219  0519  2D1B               	goto	u4460
  2220  051A                     u4461:
  2221  051A  2D34               	goto	l5922
  2222  051B                     u4460:
  2223                           	line	314
  2224                           	
  2225  051B                     l5912:	
  2226                           ;main.c: 313: {
  2227                           ;main.c: 314: debounc[pos] = 400;
  2228  051B  086E               	movf	(_pos),w
  2229  051C  0709               	addwf	wreg,w
  2230  051D  3EE0               	addlw	_debounc&0ffh
  2231  051E  0086               	movwf	fsr1l
  2232  051F  0187               	clrf fsr1h	
  2233                           	
  2234  0520  3090               	movlw	low(0190h)
  2235  0521  3FC0               	movwi	[0]fsr1
  2236  0522  3001               	movlw	high(0190h)
  2237  0523  3FC1               	movwi	[1]fsr1
  2238                           	line	315
  2239                           	
  2240  0524                     l5914:	
  2241                           ;main.c: 315: USARTWriteChar('\n');
  2242  0524  300A               	movlw	(0Ah)
  2243  0525  3187  27F1  3181   	fcall	_USARTWriteChar
  2244                           	line	316
  2245                           	
  2246  0528                     l5916:	
  2247                           ;main.c: 316: USARTWriteString("Key Detected = ");
  2248  0528  3001               	movlw	(STR_2|8000h)&0ffh
  2249  0529  318F  279F  3181   	fcall	_USARTWriteString
  2250                           	line	317
  2251                           	
  2252  052C                     l5918:	
  2253                           ;main.c: 317: i2c_tx_buff[ 0 ] = pos;
  2254  052C  0020               	movlb 0	; select bank0
  2255  052D  086E               	movf	(_pos),w
  2256  052E  00B8               	movwf	(??_main+0)+0
  2257  052F  0838               	movf	(??_main+0)+0,w
  2258  0530  00C8               	movwf	(_i2c_tx_buff)
  2259                           	line	318
  2260                           	
  2261  0531                     l5920:	
  2262                           ;main.c: 318: LATCbits.LATC5 = 0;
  2263  0531  0022               	movlb 2	; select bank2
  2264  0532  128E               	bcf	(270)^0100h,5	;volatile
  2265  0533  2D34               	goto	l5922
  2266                           	line	319
  2267                           	
  2268  0534                     l1933:	
  2269                           	line	320
  2270                           	
  2271  0534                     l5922:	
  2272                           ;main.c: 319: }
  2273                           ;main.c: 320: USARTWriteInt(pos,2);
  2274  0534  0020               	movlb 0	; select bank0
  2275  0535  086E               	movf	(_pos),w
  2276  0536  00B8               	movwf	(??_main+0)+0
  2277  0537  01B9               	clrf	(??_main+0)+0+1
  2278  0538  0838               	movf	0+(??_main+0)+0,w
  2279  0539  00A9               	movwf	(?_USARTWriteInt)
  2280  053A  0839               	movf	1+(??_main+0)+0,w
  2281  053B  00AA               	movwf	(?_USARTWriteInt+1)
  2282  053C  3002               	movlw	low(02h)
  2283  053D  00AB               	movwf	0+(?_USARTWriteInt)+02h
  2284  053E  3000               	movlw	high(02h)
  2285  053F  00AC               	movwf	(0+(?_USARTWriteInt)+02h)+1
  2286  0540  3185  256A  3181   	fcall	_USARTWriteInt
  2287                           	line	322
  2288                           	
  2289  0543                     l5924:	
  2290                           ;main.c: 322: USARTWriteChar('\n');USARTWriteChar('\r');
  2291  0543  300A               	movlw	(0Ah)
  2292  0544  3187  27F1  3181   	fcall	_USARTWriteChar
  2293                           	
  2294  0547                     l5926:	
  2295  0547  300D               	movlw	(0Dh)
  2296  0548  3187  27F1  3181   	fcall	_USARTWriteChar
  2297                           	line	324
  2298                           	
  2299  054B                     l5928:	
  2300                           ;main.c: 324: max = 500; pos = 9;
  2301  054B  3000               	movlw	0
  2302  054C  0020               	movlb 0	; select bank0
  2303  054D  00E8               	movwf	(_max+3)
  2304  054E  3000               	movlw	0
  2305  054F  00E7               	movwf	(_max+2)
  2306  0550  3001               	movlw	01h
  2307  0551  00E6               	movwf	(_max+1)
  2308  0552  30F4               	movlw	0F4h
  2309  0553  00E5               	movwf	(_max)
  2310                           
  2311                           	
  2312  0554                     l5930:	
  2313  0554  3009               	movlw	(09h)
  2314  0555  00B8               	movwf	(??_main+0)+0
  2315  0556  0838               	movf	(??_main+0)+0,w
  2316  0557  00EE               	movwf	(_pos)
  2317  0558  2D5A               	goto	l5932
  2318                           	line	326
  2319                           	
  2320  0559                     l1921:	
  2321  0559  2D5A               	goto	l5932
  2322                           	line	341
  2323                           	
  2324  055A                     l1917:	
  2325                           	line	257
  2326                           	
  2327  055A                     l5932:	
  2328  055A  3001               	movlw	(01h)
  2329  055B  00B8               	movwf	(??_main+0)+0
  2330  055C  0838               	movf	(??_main+0)+0,w
  2331  055D  07C7               	addwf	(main@i),f
  2332                           	
  2333  055E                     l5934:	
  2334  055E  3008               	movlw	(08h)
  2335  055F  0247               	subwf	(main@i),w
  2336  0560  1C03               	skipc
  2337  0561  2D63               	goto	u4471
  2338  0562  2D64               	goto	u4470
  2339  0563                     u4471:
  2340  0563  2A29               	goto	l5824
  2341  0564                     u4470:
  2342                           	
  2343  0564                     l1910:	
  2344                           	line	345
  2345                           ;main.c: 326: }
  2346                           ;main.c: 341: }
  2347                           ;main.c: 343: }
  2348                           ;main.c: 345: avgflag = 0 ;
  2349  0564  01ED               	clrf	(_avgflag)
  2350  0565  2A1A               	goto	l5814
  2351                           	line	346
  2352                           	
  2353  0566                     l1908:	
  2354  0566  2A1A               	goto	l5814
  2355                           	line	349
  2356                           	
  2357  0567                     l1934:	
  2358                           	line	242
  2359  0567  2A1A               	goto	l5814
  2360                           	
  2361  0568                     l1935:	
  2362                           	line	352
  2363                           	
  2364  0568                     l1936:	
  2365                           	global	start
  2366  0568  3181  2976         	ljmp	start
  2367                           	opt stack 0
  2368                           GLOBAL	__end_of_main
  2369  056A                     	__end_of_main:
  2370 ;; =============== function _main ends ============
  2371                           
  2372                           	signat	_main,88
  2373                           	global	_USARTWriteInt
  2374                           psect	text335,local,class=CODE,delta=2
  2375                           global __ptext335
  2376  056A                     __ptext335:
  2377                           
  2378 ;; *************** function _USARTWriteInt *****************
  2379 ;; Defined at:
  2380 ;;		line 143 in file "main.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  val             2    9[BANK0 ] int 
  2383 ;;  field_length    2   11[BANK0 ] int 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  str             5   15[BANK0 ] unsigned char [5]
  2386 ;;  i               2   22[BANK0 ] int 
  2387 ;;  j               2   20[BANK0 ] int 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;		None               void
  2390 ;; Registers used:
  2391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2397 ;;      Params:         0       4       0       0       0       0       0       0
  2398 ;;      Locals:         0       9       0       0       0       0       0       0
  2399 ;;      Temps:          0       2       0       0       0       0       0       0
  2400 ;;      Totals:         0      15       0       0       0       0       0       0
  2401 ;;Total ram usage:       15 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    3
  2404 ;; This function calls:
  2405 ;;		_USARTWriteChar
  2406 ;;		___awmod
  2407 ;;		___awdiv
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           psect	text335
  2413                           	file	"main.c"
  2414                           	line	143
  2415                           	global	__size_of_USARTWriteInt
  2416  00D9                     	__size_of_USARTWriteInt	equ	__end_of_USARTWriteInt-_USARTWriteInt
  2417                           	
  2418  056A                     _USARTWriteInt:	
  2419                           	opt	stack 12
  2420                           ; Regs used in _USARTWriteInt: [allreg]
  2421                           	line	144
  2422                           	
  2423  056A                     l5714:	
  2424                           ;main.c: 144: char str[5]={0,0,0,0,0};
  2425  056A  3060               	movlw	low(USARTWriteInt@F3022)
  2426  056B  0086               	movwf	fsr1l
  2427  056C  3000               	movlw	high(USARTWriteInt@F3022)
  2428  056D  0087               	movwf	fsr1h
  2429  056E  302F               	movlw	low(USARTWriteInt@str)
  2430  056F  0084               	movwf	fsr0l
  2431  0570  3000               	movlw	high(USARTWriteInt@str)
  2432  0571  0085               	movwf	fsr0h
  2433  0572  3005               	movlw	5
  2434  0573  00FF               	movwf	btemp+1
  2435  0574                     u3880:
  2436  0574  0016               	moviw	fsr1++
  2437  0575  001A               	movwi	fsr0++
  2438  0576  0BFF               	decfsz	btemp+1,f
  2439  0577  2D74               	goto	u3880
  2440                           	line	145
  2441                           	
  2442  0578                     l5716:	
  2443                           ;main.c: 145: int i=4,j=0;
  2444  0578  3004               	movlw	low(04h)
  2445  0579  0020               	movlb 0	; select bank0
  2446  057A  00B6               	movwf	(USARTWriteInt@i)
  2447  057B  3000               	movlw	high(04h)
  2448  057C  00B7               	movwf	((USARTWriteInt@i))+1
  2449                           	
  2450  057D                     l5718:	
  2451  057D  01B4               	clrf	(USARTWriteInt@j)
  2452  057E  01B5               	clrf	(USARTWriteInt@j+1)
  2453                           	line	147
  2454                           	
  2455  057F                     l5720:	
  2456                           ;main.c: 147: if(val<0)
  2457  057F  1FAA               	btfss	(USARTWriteInt@val+1),7
  2458  0580  2D82               	goto	u3891
  2459  0581  2D83               	goto	u3890
  2460  0582                     u3891:
  2461  0582  2D8E               	goto	l5726
  2462  0583                     u3890:
  2463                           	line	149
  2464                           	
  2465  0583                     l5722:	
  2466                           ;main.c: 148: {
  2467                           ;main.c: 149: USARTWriteChar('-');
  2468  0583  302D               	movlw	(02Dh)
  2469  0584  3187  27F1  3185   	fcall	_USARTWriteChar
  2470                           	line	150
  2471                           	
  2472  0587                     l5724:	
  2473                           ;main.c: 150: val=val*-1;
  2474  0587  0020               	movlb 0	; select bank0
  2475  0588  09A9               	comf	(USARTWriteInt@val),f
  2476  0589  09AA               	comf	(USARTWriteInt@val+1),f
  2477  058A  0AA9               	incf	(USARTWriteInt@val),f
  2478  058B  1903               	skipnz
  2479  058C  0AAA               	incf	(USARTWriteInt@val+1),f
  2480                           	line	151
  2481                           ;main.c: 151: }
  2482  058D  2D93               	goto	l5728
  2483                           	line	152
  2484                           	
  2485  058E                     l1885:	
  2486                           	line	154
  2487                           	
  2488  058E                     l5726:	
  2489                           ;main.c: 152: else
  2490                           ;main.c: 153: {
  2491                           ;main.c: 154: USARTWriteChar(' ');
  2492  058E  3020               	movlw	(020h)
  2493  058F  3187  27F1  3185   	fcall	_USARTWriteChar
  2494  0592  2D93               	goto	l5728
  2495                           	line	155
  2496                           	
  2497  0593                     l1886:	
  2498                           	line	157
  2499                           	
  2500  0593                     l5728:	
  2501                           ;main.c: 155: }
  2502                           ;main.c: 157: if(val==0 && field_length<1)
  2503  0593  0020               	movlb 0	; select bank0
  2504  0594  082A               	movf	((USARTWriteInt@val+1)),w
  2505  0595  0429               	iorwf	((USARTWriteInt@val)),w
  2506  0596  1D03               	skipz
  2507  0597  2D99               	goto	u3901
  2508  0598  2D9A               	goto	u3900
  2509  0599                     u3901:
  2510  0599  2DDE               	goto	l5742
  2511  059A                     u3900:
  2512                           	
  2513  059A                     l5730:	
  2514  059A  082C               	movf	(USARTWriteInt@field_length+1),w
  2515  059B  3A80               	xorlw	80h
  2516  059C  00FF               	movwf	btemp+1
  2517  059D  3080               	movlw	(high(01h))^80h
  2518  059E  027F               	subwf	btemp+1,w
  2519  059F  1D03               	skipz
  2520  05A0  2DA3               	goto	u3915
  2521  05A1  3001               	movlw	low(01h)
  2522  05A2  022B               	subwf	(USARTWriteInt@field_length),w
  2523  05A3                     u3915:
  2524                           
  2525  05A3  1803               	skipnc
  2526  05A4  2DA6               	goto	u3911
  2527  05A5  2DA7               	goto	u3910
  2528  05A6                     u3911:
  2529  05A6  2DDE               	goto	l5742
  2530  05A7                     u3910:
  2531                           	line	159
  2532                           	
  2533  05A7                     l5732:	
  2534                           ;main.c: 158: {
  2535                           ;main.c: 159: USARTWriteChar('0');
  2536  05A7  3030               	movlw	(030h)
  2537  05A8  3187  27F1  3185   	fcall	_USARTWriteChar
  2538  05AB  2E42               	goto	l1888
  2539                           	line	160
  2540                           	
  2541  05AC                     l5734:	
  2542                           ;main.c: 160: return;
  2543  05AC  2E42               	goto	l1888
  2544                           	line	161
  2545                           	
  2546  05AD                     l1887:	
  2547                           	line	162
  2548                           ;main.c: 161: }
  2549                           ;main.c: 162: while(val)
  2550  05AD  2DDE               	goto	l5742
  2551                           	
  2552  05AE                     l1890:	
  2553                           	line	164
  2554                           	
  2555  05AE                     l5736:	
  2556                           ;main.c: 163: {
  2557                           ;main.c: 164: str[i]=val%10;
  2558  05AE  300A               	movlw	low(0Ah)
  2559  05AF  0020               	movlb 0	; select bank0
  2560  05B0  00A0               	movwf	(?___awmod)
  2561  05B1  3000               	movlw	high(0Ah)
  2562  05B2  00A1               	movwf	((?___awmod))+1
  2563  05B3  082A               	movf	(USARTWriteInt@val+1),w
  2564  05B4  01A3               	clrf	1+(?___awmod)+02h
  2565  05B5  07A3               	addwf	1+(?___awmod)+02h
  2566  05B6  0829               	movf	(USARTWriteInt@val),w
  2567  05B7  01A2               	clrf	0+(?___awmod)+02h
  2568  05B8  07A2               	addwf	0+(?___awmod)+02h
  2569                           
  2570  05B9  3186  26B0  3185   	fcall	___awmod
  2571  05BC  0020               	movlb 0	; select bank0
  2572  05BD  0820               	movf	(0+(?___awmod)),w
  2573  05BE  00AD               	movwf	(??_USARTWriteInt+0)+0
  2574  05BF  0836               	movf	(USARTWriteInt@i),w
  2575  05C0  3E2F               	addlw	USARTWriteInt@str&0ffh
  2576  05C1  0086               	movwf	fsr1l
  2577  05C2  0187               	clrf fsr1h	
  2578                           	
  2579  05C3  082D               	movf	(??_USARTWriteInt+0)+0,w
  2580  05C4  0081               	movwf	indf1
  2581                           	line	165
  2582                           	
  2583  05C5                     l5738:	
  2584                           ;main.c: 165: val=val/10;
  2585  05C5  300A               	movlw	low(0Ah)
  2586  05C6  00A0               	movwf	(?___awdiv)
  2587  05C7  3000               	movlw	high(0Ah)
  2588  05C8  00A1               	movwf	((?___awdiv))+1
  2589  05C9  082A               	movf	(USARTWriteInt@val+1),w
  2590  05CA  01A3               	clrf	1+(?___awdiv)+02h
  2591  05CB  07A3               	addwf	1+(?___awdiv)+02h
  2592  05CC  0829               	movf	(USARTWriteInt@val),w
  2593  05CD  01A2               	clrf	0+(?___awdiv)+02h
  2594  05CE  07A2               	addwf	0+(?___awdiv)+02h
  2595                           
  2596  05CF  3186  2643  3185   	fcall	___awdiv
  2597  05D2  0020               	movlb 0	; select bank0
  2598  05D3  0821               	movf	(1+(?___awdiv)),w
  2599  05D4  01AA               	clrf	(USARTWriteInt@val+1)
  2600  05D5  07AA               	addwf	(USARTWriteInt@val+1)
  2601  05D6  0820               	movf	(0+(?___awdiv)),w
  2602  05D7  01A9               	clrf	(USARTWriteInt@val)
  2603  05D8  07A9               	addwf	(USARTWriteInt@val)
  2604                           
  2605                           	line	166
  2606                           	
  2607  05D9                     l5740:	
  2608                           ;main.c: 166: i--;
  2609  05D9  30FF               	movlw	low(-1)
  2610  05DA  07B6               	addwf	(USARTWriteInt@i),f
  2611  05DB  30FF               	movlw	high(-1)
  2612  05DC  3DB7               	addwfc	(USARTWriteInt@i+1),f
  2613  05DD  2DDE               	goto	l5742
  2614                           	line	167
  2615                           	
  2616  05DE                     l1889:	
  2617                           	line	162
  2618                           	
  2619  05DE                     l5742:	
  2620  05DE  0020               	movlb 0	; select bank0
  2621  05DF  082A               	movf	((USARTWriteInt@val+1)),w
  2622  05E0  0429               	iorwf	((USARTWriteInt@val)),w
  2623  05E1  1D03               	skipz
  2624  05E2  2DE4               	goto	u3921
  2625  05E3  2DE5               	goto	u3920
  2626  05E4                     u3921:
  2627  05E4  2DAE               	goto	l5736
  2628  05E5                     u3920:
  2629  05E5  2DE6               	goto	l5744
  2630                           	
  2631  05E6                     l1891:	
  2632                           	line	169
  2633                           	
  2634  05E6                     l5744:	
  2635                           ;main.c: 167: }
  2636                           ;main.c: 169: if(field_length==-1)
  2637  05E6  30FF               	movlw	high(-1)
  2638  05E7  062C               	xorwf	(USARTWriteInt@field_length+1),w
  2639  05E8  1D03               	skipz
  2640  05E9  2DEC               	goto	u3935
  2641  05EA  30FF               	movlw	low(-1)
  2642  05EB  062B               	xorwf	(USARTWriteInt@field_length),w
  2643  05EC                     u3935:
  2644                           
  2645  05EC  1D03               	skipz
  2646  05ED  2DEF               	goto	u3931
  2647  05EE  2DF0               	goto	u3930
  2648  05EF                     u3931:
  2649  05EF  2E03               	goto	l5752
  2650  05F0                     u3930:
  2651  05F0  2DF7               	goto	l5750
  2652                           	line	170
  2653                           	
  2654  05F1                     l5746:	
  2655                           ;main.c: 170: while(str[j]==0) j++;
  2656  05F1  2DF7               	goto	l5750
  2657                           	
  2658  05F2                     l1894:	
  2659                           	
  2660  05F2                     l5748:	
  2661  05F2  3001               	movlw	low(01h)
  2662  05F3  07B4               	addwf	(USARTWriteInt@j),f
  2663  05F4  3000               	movlw	high(01h)
  2664  05F5  3DB5               	addwfc	(USARTWriteInt@j+1),f
  2665  05F6  2DF7               	goto	l5750
  2666                           	
  2667  05F7                     l1893:	
  2668                           	
  2669  05F7                     l5750:	
  2670  05F7  0834               	movf	(USARTWriteInt@j),w
  2671  05F8  3E2F               	addlw	USARTWriteInt@str&0ffh
  2672  05F9  0086               	movwf	fsr1l
  2673  05FA  0187               	clrf fsr1h	
  2674                           	
  2675  05FB  0801               	movf	indf1,w
  2676  05FC  3A00               	xorlw	0&0ffh
  2677  05FD  1903               	skipnz
  2678  05FE  2E00               	goto	u3941
  2679  05FF  2E01               	goto	u3940
  2680  0600                     u3941:
  2681  0600  2DF2               	goto	l5748
  2682  0601                     u3940:
  2683  0601  2E10               	goto	l1896
  2684                           	
  2685  0602                     l1895:	
  2686  0602  2E10               	goto	l1896
  2687                           	line	171
  2688                           	
  2689  0603                     l1892:	
  2690                           	line	172
  2691                           	
  2692  0603                     l5752:	
  2693                           ;main.c: 171: else
  2694                           ;main.c: 172: j=5-field_length;
  2695  0603  092B               	comf	(USARTWriteInt@field_length),w
  2696  0604  00AD               	movwf	(??_USARTWriteInt+0)+0
  2697  0605  092C               	comf	(USARTWriteInt@field_length+1),w
  2698  0606  00AE               	movwf	((??_USARTWriteInt+0)+0+1)
  2699  0607  0AAD               	incf	(??_USARTWriteInt+0)+0,f
  2700  0608  1903               	skipnz
  2701  0609  0AAE               	incf	((??_USARTWriteInt+0)+0+1),f
  2702  060A  082D               	movf	0+(??_USARTWriteInt+0)+0,w
  2703  060B  3E05               	addlw	low(05h)
  2704  060C  00B4               	movwf	(USARTWriteInt@j)
  2705  060D  3000               	movlw	high(05h)
  2706  060E  3D2E               	addwfc	1+(??_USARTWriteInt+0)+0,w
  2707  060F  00B5               	movwf	1+(USARTWriteInt@j)
  2708                           	
  2709  0610                     l1896:	
  2710                           	line	174
  2711                           ;main.c: 174: for(i=j;i<5;i++)
  2712  0610  0835               	movf	(USARTWriteInt@j+1),w
  2713  0611  01B7               	clrf	(USARTWriteInt@i+1)
  2714  0612  07B7               	addwf	(USARTWriteInt@i+1)
  2715  0613  0834               	movf	(USARTWriteInt@j),w
  2716  0614  01B6               	clrf	(USARTWriteInt@i)
  2717  0615  07B6               	addwf	(USARTWriteInt@i)
  2718                           
  2719                           	
  2720  0616                     l5754:	
  2721  0616  0837               	movf	(USARTWriteInt@i+1),w
  2722  0617  3A80               	xorlw	80h
  2723  0618  00FF               	movwf	btemp+1
  2724  0619  3080               	movlw	(high(05h))^80h
  2725  061A  027F               	subwf	btemp+1,w
  2726  061B  1D03               	skipz
  2727  061C  2E1F               	goto	u3955
  2728  061D  3005               	movlw	low(05h)
  2729  061E  0236               	subwf	(USARTWriteInt@i),w
  2730  061F                     u3955:
  2731                           
  2732  061F  1C03               	skipc
  2733  0620  2E22               	goto	u3951
  2734  0621  2E23               	goto	u3950
  2735  0622                     u3951:
  2736  0622  2E25               	goto	l5758
  2737  0623                     u3950:
  2738  0623  2E42               	goto	l1888
  2739                           	
  2740  0624                     l5756:	
  2741  0624  2E42               	goto	l1888
  2742                           	line	175
  2743                           	
  2744  0625                     l1897:	
  2745                           	line	176
  2746                           	
  2747  0625                     l5758:	
  2748                           ;main.c: 175: {
  2749                           ;main.c: 176: USARTWriteChar('0'+str[i]);
  2750  0625  0020               	movlb 0	; select bank0
  2751  0626  0836               	movf	(USARTWriteInt@i),w
  2752  0627  3E2F               	addlw	USARTWriteInt@str&0ffh
  2753  0628  0086               	movwf	fsr1l
  2754  0629  0187               	clrf fsr1h	
  2755                           	
  2756  062A  0801               	movf	indf1,w
  2757  062B  3E30               	addlw	030h
  2758  062C  3187  27F1  3185   	fcall	_USARTWriteChar
  2759                           	line	174
  2760                           	
  2761  062F                     l5760:	
  2762  062F  3001               	movlw	low(01h)
  2763  0630  0020               	movlb 0	; select bank0
  2764  0631  07B6               	addwf	(USARTWriteInt@i),f
  2765  0632  3000               	movlw	high(01h)
  2766  0633  3DB7               	addwfc	(USARTWriteInt@i+1),f
  2767                           	
  2768  0634                     l5762:	
  2769  0634  0837               	movf	(USARTWriteInt@i+1),w
  2770  0635  3A80               	xorlw	80h
  2771  0636  00FF               	movwf	btemp+1
  2772  0637  3080               	movlw	(high(05h))^80h
  2773  0638  027F               	subwf	btemp+1,w
  2774  0639  1D03               	skipz
  2775  063A  2E3D               	goto	u3965
  2776  063B  3005               	movlw	low(05h)
  2777  063C  0236               	subwf	(USARTWriteInt@i),w
  2778  063D                     u3965:
  2779                           
  2780  063D  1C03               	skipc
  2781  063E  2E40               	goto	u3961
  2782  063F  2E41               	goto	u3960
  2783  0640                     u3961:
  2784  0640  2E25               	goto	l5758
  2785  0641                     u3960:
  2786  0641  2E42               	goto	l1888
  2787                           	
  2788  0642                     l1898:	
  2789                           	line	178
  2790                           	
  2791  0642                     l1888:	
  2792  0642  0008               	return
  2793                           	opt stack 0
  2794                           GLOBAL	__end_of_USARTWriteInt
  2795  0643                     	__end_of_USARTWriteInt:
  2796 ;; =============== function _USARTWriteInt ends ============
  2797                           
  2798                           	signat	_USARTWriteInt,8312
  2799                           	global	_USARTWriteString
  2800                           psect	text336,local,class=CODE,delta=2
  2801                           global __ptext336
  2802  0F9F                     __ptext336:
  2803                           
  2804 ;; *************** function _USARTWriteString *****************
  2805 ;; Defined at:
  2806 ;;		line 134 in file "main.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  str             1    wreg     PTR const unsigned char 
  2809 ;;		 -> STR_2(16), STR_1(8), 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  str             1    2[BANK0 ] PTR const unsigned char 
  2812 ;;		 -> STR_2(16), STR_1(8), 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;		None               void
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2822 ;;      Params:         0       0       0       0       0       0       0       0
  2823 ;;      Locals:         0       1       0       0       0       0       0       0
  2824 ;;      Temps:          0       1       0       0       0       0       0       0
  2825 ;;      Totals:         0       2       0       0       0       0       0       0
  2826 ;;Total ram usage:        2 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    3
  2829 ;; This function calls:
  2830 ;;		_USARTWriteChar
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           psect	text336
  2836                           	file	"main.c"
  2837                           	line	134
  2838                           	global	__size_of_USARTWriteString
  2839  001B                     	__size_of_USARTWriteString	equ	__end_of_USARTWriteString-_USARTWriteString
  2840                           	
  2841  0F9F                     _USARTWriteString:	
  2842                           	opt	stack 12
  2843                           ; Regs used in _USARTWriteString: [wreg+status,2+status,0+pclath+cstack]
  2844                           ;USARTWriteString@str stored from wreg
  2845  0F9F  0020               	movlb 0	; select bank0
  2846  0FA0  00A2               	movwf	(USARTWriteString@str)
  2847                           	line	135
  2848                           	
  2849  0FA1                     l5706:	
  2850                           ;main.c: 135: while(*str!='\0')
  2851  0FA1  2FAF               	goto	l5712
  2852                           	
  2853  0FA2                     l1878:	
  2854                           	line	137
  2855                           	
  2856  0FA2                     l5708:	
  2857                           ;main.c: 136: {
  2858                           ;main.c: 137: USARTWriteChar(*str);
  2859  0FA2  0822               	movf	(USARTWriteString@str),w
  2860  0FA3  3188               	movlp	high __stringtab
  2861  0FA4  000A               	callw
  2862  0FA5  318F               	pagesel	$
  2863  0FA6  3187  27F1  318F   	fcall	_USARTWriteChar
  2864                           	line	138
  2865                           	
  2866  0FA9                     l5710:	
  2867                           ;main.c: 138: str++;
  2868  0FA9  3001               	movlw	(01h)
  2869  0FAA  0020               	movlb 0	; select bank0
  2870  0FAB  00A1               	movwf	(??_USARTWriteString+0)+0
  2871  0FAC  0821               	movf	(??_USARTWriteString+0)+0,w
  2872  0FAD  07A2               	addwf	(USARTWriteString@str),f
  2873  0FAE  2FAF               	goto	l5712
  2874                           	line	139
  2875                           	
  2876  0FAF                     l1877:	
  2877                           	line	135
  2878                           	
  2879  0FAF                     l5712:	
  2880  0FAF  0822               	movf	(USARTWriteString@str),w
  2881  0FB0  3188               	movlp	high __stringtab
  2882  0FB1  000A               	callw
  2883  0FB2  318F               	pagesel	$
  2884  0FB3  3800               	iorlw	0
  2885  0FB4  1D03               	skipz
  2886  0FB5  2FB7               	goto	u3871
  2887  0FB6  2FB8               	goto	u3870
  2888  0FB7                     u3871:
  2889  0FB7  2FA2               	goto	l5708
  2890  0FB8                     u3870:
  2891  0FB8  2FB9               	goto	l1880
  2892                           	
  2893  0FB9                     l1879:	
  2894                           	line	140
  2895                           	
  2896  0FB9                     l1880:	
  2897  0FB9  0008               	return
  2898                           	opt stack 0
  2899                           GLOBAL	__end_of_USARTWriteString
  2900  0FBA                     	__end_of_USARTWriteString:
  2901 ;; =============== function _USARTWriteString ends ============
  2902                           
  2903                           	signat	_USARTWriteString,4216
  2904                           	global	___awmod
  2905                           psect	text337,local,class=CODE,delta=2
  2906                           global __ptext337
  2907  06B0                     __ptext337:
  2908                           
  2909 ;; *************** function ___awmod *****************
  2910 ;; Defined at:
  2911 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  divisor         2    0[BANK0 ] int 
  2914 ;;  dividend        2    2[BANK0 ] int 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  sign            1    6[BANK0 ] unsigned char 
  2917 ;;  counter         1    5[BANK0 ] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2    0[BANK0 ] int 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2927 ;;      Params:         0       4       0       0       0       0       0       0
  2928 ;;      Locals:         0       2       0       0       0       0       0       0
  2929 ;;      Temps:          0       1       0       0       0       0       0       0
  2930 ;;      Totals:         0       7       0       0       0       0       0       0
  2931 ;;Total ram usage:        7 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    2
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_USARTWriteInt
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           psect	text337
  2941                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  2942                           	line	5
  2943                           	global	__size_of___awmod
  2944  0061                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  2945                           	
  2946  06B0                     ___awmod:	
  2947                           	opt	stack 12
  2948                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2949                           	line	8
  2950                           	
  2951  06B0                     l5640:	
  2952  06B0  0020               	movlb 0	; select bank0
  2953  06B1  01A6               	clrf	(___awmod@sign)
  2954                           	line	9
  2955  06B2  1FA3               	btfss	(___awmod@dividend+1),7
  2956  06B3  2EB5               	goto	u3701
  2957  06B4  2EB6               	goto	u3700
  2958  06B5                     u3701:
  2959  06B5  2EBF               	goto	l5644
  2960  06B6                     u3700:
  2961                           	line	10
  2962                           	
  2963  06B6                     l5642:	
  2964  06B6  09A2               	comf	(___awmod@dividend),f
  2965  06B7  09A3               	comf	(___awmod@dividend+1),f
  2966  06B8  0AA2               	incf	(___awmod@dividend),f
  2967  06B9  1903               	skipnz
  2968  06BA  0AA3               	incf	(___awmod@dividend+1),f
  2969                           	line	11
  2970  06BB  01A6               	clrf	(___awmod@sign)
  2971  06BC  1403               	bsf	status,0
  2972  06BD  0DA6               	rlf	(___awmod@sign),f
  2973  06BE  2EBF               	goto	l5644
  2974                           	line	12
  2975                           	
  2976  06BF                     l3840:	
  2977                           	line	13
  2978                           	
  2979  06BF                     l5644:	
  2980  06BF  1FA1               	btfss	(___awmod@divisor+1),7
  2981  06C0  2EC2               	goto	u3711
  2982  06C1  2EC3               	goto	u3710
  2983  06C2                     u3711:
  2984  06C2  2EC9               	goto	l5648
  2985  06C3                     u3710:
  2986                           	line	14
  2987                           	
  2988  06C3                     l5646:	
  2989  06C3  09A0               	comf	(___awmod@divisor),f
  2990  06C4  09A1               	comf	(___awmod@divisor+1),f
  2991  06C5  0AA0               	incf	(___awmod@divisor),f
  2992  06C6  1903               	skipnz
  2993  06C7  0AA1               	incf	(___awmod@divisor+1),f
  2994  06C8  2EC9               	goto	l5648
  2995                           	
  2996  06C9                     l3841:	
  2997                           	line	15
  2998                           	
  2999  06C9                     l5648:	
  3000  06C9  0821               	movf	(___awmod@divisor+1),w
  3001  06CA  0420               	iorwf	(___awmod@divisor),w
  3002  06CB  1903               	skipnz
  3003  06CC  2ECE               	goto	u3721
  3004  06CD  2ECF               	goto	u3720
  3005  06CE                     u3721:
  3006  06CE  2EFF               	goto	l5666
  3007  06CF                     u3720:
  3008                           	line	16
  3009                           	
  3010  06CF                     l5650:	
  3011  06CF  01A5               	clrf	(___awmod@counter)
  3012  06D0  1403               	bsf	status,0
  3013  06D1  0DA5               	rlf	(___awmod@counter),f
  3014                           	line	17
  3015  06D2  2EDD               	goto	l5656
  3016                           	
  3017  06D3                     l3844:	
  3018                           	line	18
  3019                           	
  3020  06D3                     l5652:	
  3021  06D3  3001               	movlw	01h
  3022                           	
  3023  06D4                     u3735:
  3024  06D4  35A0               	lslf	(___awmod@divisor),f
  3025  06D5  0DA1               	rlf	(___awmod@divisor+1),f
  3026  06D6  0B89               	decfsz	wreg,f
  3027  06D7  2ED4               	goto	u3735
  3028                           	line	19
  3029                           	
  3030  06D8                     l5654:	
  3031  06D8  3001               	movlw	(01h)
  3032  06D9  00A4               	movwf	(??___awmod+0)+0
  3033  06DA  0824               	movf	(??___awmod+0)+0,w
  3034  06DB  07A5               	addwf	(___awmod@counter),f
  3035  06DC  2EDD               	goto	l5656
  3036                           	line	20
  3037                           	
  3038  06DD                     l3843:	
  3039                           	line	17
  3040                           	
  3041  06DD                     l5656:	
  3042  06DD  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  3043  06DE  2EE0               	goto	u3741
  3044  06DF  2EE1               	goto	u3740
  3045  06E0                     u3741:
  3046  06E0  2ED3               	goto	l5652
  3047  06E1                     u3740:
  3048  06E1  2EE3               	goto	l5658
  3049                           	
  3050  06E2                     l3845:	
  3051  06E2  2EE3               	goto	l5658
  3052                           	line	21
  3053                           	
  3054  06E3                     l3846:	
  3055                           	line	22
  3056                           	
  3057  06E3                     l5658:	
  3058  06E3  0821               	movf	(___awmod@divisor+1),w
  3059  06E4  0223               	subwf	(___awmod@dividend+1),w
  3060  06E5  1D03               	skipz
  3061  06E6  2EE9               	goto	u3755
  3062  06E7  0820               	movf	(___awmod@divisor),w
  3063  06E8  0222               	subwf	(___awmod@dividend),w
  3064  06E9                     u3755:
  3065  06E9  1C03               	skipc
  3066  06EA  2EEC               	goto	u3751
  3067  06EB  2EED               	goto	u3750
  3068  06EC                     u3751:
  3069  06EC  2EF2               	goto	l5662
  3070  06ED                     u3750:
  3071                           	line	23
  3072                           	
  3073  06ED                     l5660:	
  3074  06ED  0820               	movf	(___awmod@divisor),w
  3075  06EE  02A2               	subwf	(___awmod@dividend),f
  3076  06EF  0821               	movf	(___awmod@divisor+1),w
  3077  06F0  3BA3               	subwfb	(___awmod@dividend+1),f
  3078  06F1  2EF2               	goto	l5662
  3079                           	
  3080  06F2                     l3847:	
  3081                           	line	24
  3082                           	
  3083  06F2                     l5662:	
  3084  06F2  3001               	movlw	01h
  3085                           	
  3086  06F3                     u3765:
  3087  06F3  36A1               	lsrf	(___awmod@divisor+1),f
  3088  06F4  0CA0               	rrf	(___awmod@divisor),f
  3089  06F5  0B89               	decfsz	wreg,f
  3090  06F6  2EF3               	goto	u3765
  3091                           	line	25
  3092                           	
  3093  06F7                     l5664:	
  3094  06F7  3001               	movlw	low(01h)
  3095  06F8  02A5               	subwf	(___awmod@counter),f
  3096  06F9  1D03               	btfss	status,2
  3097  06FA  2EFC               	goto	u3771
  3098  06FB  2EFD               	goto	u3770
  3099  06FC                     u3771:
  3100  06FC  2EE3               	goto	l5658
  3101  06FD                     u3770:
  3102  06FD  2EFF               	goto	l5666
  3103                           	
  3104  06FE                     l3848:	
  3105  06FE  2EFF               	goto	l5666
  3106                           	line	26
  3107                           	
  3108  06FF                     l3842:	
  3109                           	line	27
  3110                           	
  3111  06FF                     l5666:	
  3112  06FF  0826               	movf	(___awmod@sign),w
  3113  0700  1D03               	skipz
  3114  0701  2F03               	goto	u3780
  3115  0702  2F09               	goto	l5670
  3116  0703                     u3780:
  3117                           	line	28
  3118                           	
  3119  0703                     l5668:	
  3120  0703  09A2               	comf	(___awmod@dividend),f
  3121  0704  09A3               	comf	(___awmod@dividend+1),f
  3122  0705  0AA2               	incf	(___awmod@dividend),f
  3123  0706  1903               	skipnz
  3124  0707  0AA3               	incf	(___awmod@dividend+1),f
  3125  0708  2F09               	goto	l5670
  3126                           	
  3127  0709                     l3849:	
  3128                           	line	29
  3129                           	
  3130  0709                     l5670:	
  3131  0709  0823               	movf	(___awmod@dividend+1),w
  3132  070A  01A1               	clrf	(?___awmod+1)
  3133  070B  07A1               	addwf	(?___awmod+1)
  3134  070C  0822               	movf	(___awmod@dividend),w
  3135  070D  01A0               	clrf	(?___awmod)
  3136  070E  07A0               	addwf	(?___awmod)
  3137                           
  3138  070F  2F10               	goto	l3850
  3139                           	
  3140  0710                     l5672:	
  3141                           	line	30
  3142                           	
  3143  0710                     l3850:	
  3144  0710  0008               	return
  3145                           	opt stack 0
  3146                           GLOBAL	__end_of___awmod
  3147  0711                     	__end_of___awmod:
  3148 ;; =============== function ___awmod ends ============
  3149                           
  3150                           	signat	___awmod,8314
  3151                           	global	___awdiv
  3152                           psect	text338,local,class=CODE,delta=2
  3153                           global __ptext338
  3154  0643                     __ptext338:
  3155                           
  3156 ;; *************** function ___awdiv *****************
  3157 ;; Defined at:
  3158 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  divisor         2    0[BANK0 ] int 
  3161 ;;  dividend        2    2[BANK0 ] int 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  quotient        2    7[BANK0 ] int 
  3164 ;;  sign            1    6[BANK0 ] unsigned char 
  3165 ;;  counter         1    5[BANK0 ] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2    0[BANK0 ] int 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3175 ;;      Params:         0       4       0       0       0       0       0       0
  3176 ;;      Locals:         0       4       0       0       0       0       0       0
  3177 ;;      Temps:          0       1       0       0       0       0       0       0
  3178 ;;      Totals:         0       9       0       0       0       0       0       0
  3179 ;;Total ram usage:        9 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    2
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_USARTWriteInt
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           psect	text338
  3189                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3190                           	line	5
  3191                           	global	__size_of___awdiv
  3192  006D                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3193                           	
  3194  0643                     ___awdiv:	
  3195                           	opt	stack 12
  3196                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3197                           	line	9
  3198                           	
  3199  0643                     l5600:	
  3200  0643  0020               	movlb 0	; select bank0
  3201  0644  01A6               	clrf	(___awdiv@sign)
  3202                           	line	10
  3203  0645  1FA1               	btfss	(___awdiv@divisor+1),7
  3204  0646  2E48               	goto	u3601
  3205  0647  2E49               	goto	u3600
  3206  0648                     u3601:
  3207  0648  2E52               	goto	l5604
  3208  0649                     u3600:
  3209                           	line	11
  3210                           	
  3211  0649                     l5602:	
  3212  0649  09A0               	comf	(___awdiv@divisor),f
  3213  064A  09A1               	comf	(___awdiv@divisor+1),f
  3214  064B  0AA0               	incf	(___awdiv@divisor),f
  3215  064C  1903               	skipnz
  3216  064D  0AA1               	incf	(___awdiv@divisor+1),f
  3217                           	line	12
  3218  064E  01A6               	clrf	(___awdiv@sign)
  3219  064F  1403               	bsf	status,0
  3220  0650  0DA6               	rlf	(___awdiv@sign),f
  3221  0651  2E52               	goto	l5604
  3222                           	line	13
  3223                           	
  3224  0652                     l3772:	
  3225                           	line	14
  3226                           	
  3227  0652                     l5604:	
  3228  0652  1FA3               	btfss	(___awdiv@dividend+1),7
  3229  0653  2E55               	goto	u3611
  3230  0654  2E56               	goto	u3610
  3231  0655                     u3611:
  3232  0655  2E60               	goto	l5610
  3233  0656                     u3610:
  3234                           	line	15
  3235                           	
  3236  0656                     l5606:	
  3237  0656  09A2               	comf	(___awdiv@dividend),f
  3238  0657  09A3               	comf	(___awdiv@dividend+1),f
  3239  0658  0AA2               	incf	(___awdiv@dividend),f
  3240  0659  1903               	skipnz
  3241  065A  0AA3               	incf	(___awdiv@dividend+1),f
  3242                           	line	16
  3243                           	
  3244  065B                     l5608:	
  3245  065B  3001               	movlw	(01h)
  3246  065C  00A4               	movwf	(??___awdiv+0)+0
  3247  065D  0824               	movf	(??___awdiv+0)+0,w
  3248  065E  06A6               	xorwf	(___awdiv@sign),f
  3249  065F  2E60               	goto	l5610
  3250                           	line	17
  3251                           	
  3252  0660                     l3773:	
  3253                           	line	18
  3254                           	
  3255  0660                     l5610:	
  3256  0660  01A7               	clrf	(___awdiv@quotient)
  3257  0661  01A8               	clrf	(___awdiv@quotient+1)
  3258                           	line	19
  3259                           	
  3260  0662                     l5612:	
  3261  0662  0821               	movf	(___awdiv@divisor+1),w
  3262  0663  0420               	iorwf	(___awdiv@divisor),w
  3263  0664  1903               	skipnz
  3264  0665  2E67               	goto	u3621
  3265  0666  2E68               	goto	u3620
  3266  0667                     u3621:
  3267  0667  2E9E               	goto	l5632
  3268  0668                     u3620:
  3269                           	line	20
  3270                           	
  3271  0668                     l5614:	
  3272  0668  01A5               	clrf	(___awdiv@counter)
  3273  0669  1403               	bsf	status,0
  3274  066A  0DA5               	rlf	(___awdiv@counter),f
  3275                           	line	21
  3276  066B  2E76               	goto	l5620
  3277                           	
  3278  066C                     l3776:	
  3279                           	line	22
  3280                           	
  3281  066C                     l5616:	
  3282  066C  3001               	movlw	01h
  3283                           	
  3284  066D                     u3635:
  3285  066D  35A0               	lslf	(___awdiv@divisor),f
  3286  066E  0DA1               	rlf	(___awdiv@divisor+1),f
  3287  066F  0B89               	decfsz	wreg,f
  3288  0670  2E6D               	goto	u3635
  3289                           	line	23
  3290                           	
  3291  0671                     l5618:	
  3292  0671  3001               	movlw	(01h)
  3293  0672  00A4               	movwf	(??___awdiv+0)+0
  3294  0673  0824               	movf	(??___awdiv+0)+0,w
  3295  0674  07A5               	addwf	(___awdiv@counter),f
  3296  0675  2E76               	goto	l5620
  3297                           	line	24
  3298                           	
  3299  0676                     l3775:	
  3300                           	line	21
  3301                           	
  3302  0676                     l5620:	
  3303  0676  1FA1               	btfss	(___awdiv@divisor+1),(15)&7
  3304  0677  2E79               	goto	u3641
  3305  0678  2E7A               	goto	u3640
  3306  0679                     u3641:
  3307  0679  2E6C               	goto	l5616
  3308  067A                     u3640:
  3309  067A  2E7C               	goto	l5622
  3310                           	
  3311  067B                     l3777:	
  3312  067B  2E7C               	goto	l5622
  3313                           	line	25
  3314                           	
  3315  067C                     l3778:	
  3316                           	line	26
  3317                           	
  3318  067C                     l5622:	
  3319  067C  3001               	movlw	01h
  3320                           	
  3321  067D                     u3655:
  3322  067D  35A7               	lslf	(___awdiv@quotient),f
  3323  067E  0DA8               	rlf	(___awdiv@quotient+1),f
  3324  067F  0B89               	decfsz	wreg,f
  3325  0680  2E7D               	goto	u3655
  3326                           	line	27
  3327  0681  0821               	movf	(___awdiv@divisor+1),w
  3328  0682  0223               	subwf	(___awdiv@dividend+1),w
  3329  0683  1D03               	skipz
  3330  0684  2E87               	goto	u3665
  3331  0685  0820               	movf	(___awdiv@divisor),w
  3332  0686  0222               	subwf	(___awdiv@dividend),w
  3333  0687                     u3665:
  3334  0687  1C03               	skipc
  3335  0688  2E8A               	goto	u3661
  3336  0689  2E8B               	goto	u3660
  3337  068A                     u3661:
  3338  068A  2E91               	goto	l5628
  3339  068B                     u3660:
  3340                           	line	28
  3341                           	
  3342  068B                     l5624:	
  3343  068B  0820               	movf	(___awdiv@divisor),w
  3344  068C  02A2               	subwf	(___awdiv@dividend),f
  3345  068D  0821               	movf	(___awdiv@divisor+1),w
  3346  068E  3BA3               	subwfb	(___awdiv@dividend+1),f
  3347                           	line	29
  3348                           	
  3349  068F                     l5626:	
  3350  068F  1427               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3351  0690  2E91               	goto	l5628
  3352                           	line	30
  3353                           	
  3354  0691                     l3779:	
  3355                           	line	31
  3356                           	
  3357  0691                     l5628:	
  3358  0691  3001               	movlw	01h
  3359                           	
  3360  0692                     u3675:
  3361  0692  36A1               	lsrf	(___awdiv@divisor+1),f
  3362  0693  0CA0               	rrf	(___awdiv@divisor),f
  3363  0694  0B89               	decfsz	wreg,f
  3364  0695  2E92               	goto	u3675
  3365                           	line	32
  3366                           	
  3367  0696                     l5630:	
  3368  0696  3001               	movlw	low(01h)
  3369  0697  02A5               	subwf	(___awdiv@counter),f
  3370  0698  1D03               	btfss	status,2
  3371  0699  2E9B               	goto	u3681
  3372  069A  2E9C               	goto	u3680
  3373  069B                     u3681:
  3374  069B  2E7C               	goto	l5622
  3375  069C                     u3680:
  3376  069C  2E9E               	goto	l5632
  3377                           	
  3378  069D                     l3780:	
  3379  069D  2E9E               	goto	l5632
  3380                           	line	33
  3381                           	
  3382  069E                     l3774:	
  3383                           	line	34
  3384                           	
  3385  069E                     l5632:	
  3386  069E  0826               	movf	(___awdiv@sign),w
  3387  069F  1D03               	skipz
  3388  06A0  2EA2               	goto	u3690
  3389  06A1  2EA8               	goto	l5636
  3390  06A2                     u3690:
  3391                           	line	35
  3392                           	
  3393  06A2                     l5634:	
  3394  06A2  09A7               	comf	(___awdiv@quotient),f
  3395  06A3  09A8               	comf	(___awdiv@quotient+1),f
  3396  06A4  0AA7               	incf	(___awdiv@quotient),f
  3397  06A5  1903               	skipnz
  3398  06A6  0AA8               	incf	(___awdiv@quotient+1),f
  3399  06A7  2EA8               	goto	l5636
  3400                           	
  3401  06A8                     l3781:	
  3402                           	line	36
  3403                           	
  3404  06A8                     l5636:	
  3405  06A8  0828               	movf	(___awdiv@quotient+1),w
  3406  06A9  01A1               	clrf	(?___awdiv+1)
  3407  06AA  07A1               	addwf	(?___awdiv+1)
  3408  06AB  0827               	movf	(___awdiv@quotient),w
  3409  06AC  01A0               	clrf	(?___awdiv)
  3410  06AD  07A0               	addwf	(?___awdiv)
  3411                           
  3412  06AE  2EAF               	goto	l3782
  3413                           	
  3414  06AF                     l5638:	
  3415                           	line	37
  3416                           	
  3417  06AF                     l3782:	
  3418  06AF  0008               	return
  3419                           	opt stack 0
  3420                           GLOBAL	__end_of___awdiv
  3421  06B0                     	__end_of___awdiv:
  3422 ;; =============== function ___awdiv ends ============
  3423                           
  3424                           	signat	___awdiv,8314
  3425                           	global	_I2Cinit
  3426                           psect	text339,local,class=CODE,delta=2
  3427                           global __ptext339
  3428  0FBA                     __ptext339:
  3429                           
  3430 ;; *************** function _I2Cinit *****************
  3431 ;; Defined at:
  3432 ;;		line 181 in file "main.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3446 ;;      Params:         0       0       0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0
  3448 ;;      Temps:          0       1       0       0       0       0       0       0
  3449 ;;      Totals:         0       1       0       0       0       0       0       0
  3450 ;;Total ram usage:        1 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    2
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           psect	text339
  3460                           	file	"main.c"
  3461                           	line	181
  3462                           	global	__size_of_I2Cinit
  3463  0021                     	__size_of_I2Cinit	equ	__end_of_I2Cinit-_I2Cinit
  3464                           	
  3465  0FBA                     _I2Cinit:	
  3466                           	opt	stack 13
  3467                           ; Regs used in _I2Cinit: [wreg+status,2+status,0]
  3468                           	line	182
  3469                           	
  3470  0FBA                     l5472:	
  3471                           ;main.c: 182: TRISCbits.TRISC3 = 1;
  3472  0FBA  0021               	movlb 1	; select bank1
  3473  0FBB  158E               	bsf	(142)^080h,3	;volatile
  3474                           	line	183
  3475                           ;main.c: 183: TRISCbits.TRISC4 = 1;
  3476  0FBC  160E               	bsf	(142)^080h,4	;volatile
  3477                           	line	185
  3478                           	
  3479  0FBD                     l5474:	
  3480                           ;main.c: 185: SSPSTAT |= 0xc0;
  3481  0FBD  30C0               	movlw	(0C0h)
  3482  0FBE  0020               	movlb 0	; select bank0
  3483  0FBF  00A0               	movwf	(??_I2Cinit+0)+0
  3484  0FC0  0820               	movf	(??_I2Cinit+0)+0,w
  3485  0FC1  0024               	movlb 4	; select bank4
  3486  0FC2  0494               	iorwf	(532)^0200h,f	;volatile
  3487                           	line	186
  3488                           ;main.c: 186: SSPCON1 |= 0x36;
  3489  0FC3  3036               	movlw	(036h)
  3490  0FC4  0020               	movlb 0	; select bank0
  3491  0FC5  00A0               	movwf	(??_I2Cinit+0)+0
  3492  0FC6  0820               	movf	(??_I2Cinit+0)+0,w
  3493  0FC7  0024               	movlb 4	; select bank4
  3494  0FC8  0495               	iorwf	(533)^0200h,f	;volatile
  3495                           	line	187
  3496                           	
  3497  0FC9                     l5476:	
  3498                           ;main.c: 187: SSPCON2 |= 0x80;
  3499  0FC9  1796               	bsf	(534)^0200h+(7/8),(7)&7	;volatile
  3500                           	line	188
  3501                           ;main.c: 188: SSPCON3 |= 0x38;
  3502  0FCA  3038               	movlw	(038h)
  3503  0FCB  0020               	movlb 0	; select bank0
  3504  0FCC  00A0               	movwf	(??_I2Cinit+0)+0
  3505  0FCD  0820               	movf	(??_I2Cinit+0)+0,w
  3506  0FCE  0024               	movlb 4	; select bank4
  3507  0FCF  0497               	iorwf	(535)^0200h,f	;volatile
  3508                           	line	189
  3509                           	
  3510  0FD0                     l5478:	
  3511                           ;main.c: 189: SSPMSK = 0xfe;
  3512  0FD0  30FE               	movlw	(0FEh)
  3513  0FD1  0093               	movwf	(531)^0200h	;volatile
  3514                           	line	190
  3515                           	
  3516  0FD2                     l5480:	
  3517                           ;main.c: 190: SSPADD = 0x0e;
  3518  0FD2  300E               	movlw	(0Eh)
  3519  0FD3  0092               	movwf	(530)^0200h	;volatile
  3520                           	line	192
  3521                           	
  3522  0FD4                     l5482:	
  3523                           ;main.c: 192: SSPCON1bits.SSPEN = 1;
  3524  0FD4  1695               	bsf	(533)^0200h,5	;volatile
  3525                           	line	193
  3526                           	
  3527  0FD5                     l5484:	
  3528                           ;main.c: 193: SSPIF = 0;
  3529  0FD5  0020               	movlb 0	; select bank0
  3530  0FD6  1191               	bcf	(139/8),(139)&7
  3531                           	line	194
  3532                           	
  3533  0FD7                     l5486:	
  3534                           ;main.c: 194: SSPIE = 1;
  3535  0FD7  0021               	movlb 1	; select bank1
  3536  0FD8  1591               	bsf	(1163/8)^080h,(1163)&7
  3537                           	line	195
  3538                           	
  3539  0FD9                     l5488:	
  3540                           ;main.c: 195: PEIE = 1;
  3541  0FD9  170B               	bsf	(94/8),(94)&7
  3542                           	line	197
  3543                           	
  3544  0FDA                     l1901:	
  3545  0FDA  0008               	return
  3546                           	opt stack 0
  3547                           GLOBAL	__end_of_I2Cinit
  3548  0FDB                     	__end_of_I2Cinit:
  3549 ;; =============== function _I2Cinit ends ============
  3550                           
  3551                           	signat	_I2Cinit,88
  3552                           	global	_USARTWriteChar
  3553                           psect	text340,local,class=CODE,delta=2
  3554                           global __ptext340
  3555  07F1                     __ptext340:
  3556                           
  3557 ;; *************** function _USARTWriteChar *****************
  3558 ;; Defined at:
  3559 ;;		line 127 in file "main.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  ch              1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  ch              1    0[BANK0 ] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;		None               void
  3566 ;; Registers used:
  3567 ;;		wreg
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3573 ;;      Params:         0       0       0       0       0       0       0       0
  3574 ;;      Locals:         0       1       0       0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0
  3576 ;;      Totals:         0       1       0       0       0       0       0       0
  3577 ;;Total ram usage:        1 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_USARTWriteString
  3584 ;;		_USARTWriteInt
  3585 ;;		_main
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           psect	text340
  3589                           	file	"main.c"
  3590                           	line	127
  3591                           	global	__size_of_USARTWriteChar
  3592  000E                     	__size_of_USARTWriteChar	equ	__end_of_USARTWriteChar-_USARTWriteChar
  3593                           	
  3594  07F1                     _USARTWriteChar:	
  3595                           	opt	stack 13
  3596                           ; Regs used in _USARTWriteChar: [wreg]
  3597                           ;USARTWriteChar@ch stored from wreg
  3598  07F1  0020               	movlb 0	; select bank0
  3599  07F2  00A0               	movwf	(USARTWriteChar@ch)
  3600                           	line	129
  3601                           	
  3602  07F3                     l5468:	
  3603                           ;main.c: 129: while(!TXSTAbits.TRMT);
  3604  07F3  2FF4               	goto	l1871
  3605                           	
  3606  07F4                     l1872:	
  3607                           	
  3608  07F4                     l1871:	
  3609  07F4  0023               	movlb 3	; select bank3
  3610  07F5  1C9E               	btfss	(414)^0180h,1	;volatile
  3611  07F6  2FF8               	goto	u3341
  3612  07F7  2FF9               	goto	u3340
  3613  07F8                     u3341:
  3614  07F8  2FF4               	goto	l1871
  3615  07F9                     u3340:
  3616  07F9  2FFA               	goto	l5470
  3617                           	
  3618  07FA                     l1873:	
  3619                           	line	130
  3620                           	
  3621  07FA                     l5470:	
  3622                           ;main.c: 130: TXREG=ch;
  3623  07FA  0020               	movlb 0	; select bank0
  3624  07FB  0820               	movf	(USARTWriteChar@ch),w
  3625  07FC  0023               	movlb 3	; select bank3
  3626  07FD  009A               	movwf	(410)^0180h	;volatile
  3627                           	line	131
  3628                           	
  3629  07FE                     l1874:	
  3630  07FE  0008               	return
  3631                           	opt stack 0
  3632                           GLOBAL	__end_of_USARTWriteChar
  3633  07FF                     	__end_of_USARTWriteChar:
  3634 ;; =============== function _USARTWriteChar ends ============
  3635                           
  3636                           	signat	_USARTWriteChar,4216
  3637                           	global	_usartinit
  3638                           psect	text341,local,class=CODE,delta=2
  3639                           global __ptext341
  3640  0F8D                     __ptext341:
  3641                           
  3642 ;; *************** function _usartinit *****************
  3643 ;; Defined at:
  3644 ;;		line 90 in file "main.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;		None               void
  3651 ;; Registers used:
  3652 ;;		wreg, status,2
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3658 ;;      Params:         0       0       0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    2
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           psect	text341
  3672                           	file	"main.c"
  3673                           	line	90
  3674                           	global	__size_of_usartinit
  3675  0012                     	__size_of_usartinit	equ	__end_of_usartinit-_usartinit
  3676                           	
  3677  0F8D                     _usartinit:	
  3678                           	opt	stack 13
  3679                           ; Regs used in _usartinit: [wreg+status,2]
  3680                           	line	91
  3681                           	
  3682  0F8D                     l5458:	
  3683                           ;main.c: 91: TRISCbits.TRISC6 = 0;
  3684  0F8D  0021               	movlb 1	; select bank1
  3685  0F8E  130E               	bcf	(142)^080h,6	;volatile
  3686                           	line	92
  3687                           ;main.c: 92: TRISCbits.TRISC7 = 1;
  3688  0F8F  178E               	bsf	(142)^080h,7	;volatile
  3689                           	line	94
  3690                           ;main.c: 94: TXSTAbits.BRGH=0;
  3691  0F90  0023               	movlb 3	; select bank3
  3692  0F91  111E               	bcf	(414)^0180h,2	;volatile
  3693                           	line	95
  3694                           ;main.c: 95: TXSTAbits.TX9=0;
  3695  0F92  131E               	bcf	(414)^0180h,6	;volatile
  3696                           	line	96
  3697                           ;main.c: 96: TXSTAbits.TXEN = 1;
  3698  0F93  169E               	bsf	(414)^0180h,5	;volatile
  3699                           	line	99
  3700                           ;main.c: 99: RCSTAbits.SPEN=1;
  3701  0F94  179D               	bsf	(413)^0180h,7	;volatile
  3702                           	line	100
  3703                           ;main.c: 100: RCSTAbits.RX9=0;
  3704  0F95  131D               	bcf	(413)^0180h,6	;volatile
  3705                           	line	101
  3706                           ;main.c: 101: RCSTAbits.CREN=1;
  3707  0F96  161D               	bsf	(413)^0180h,4	;volatile
  3708                           	line	117
  3709                           	
  3710  0F97                     l5460:	
  3711                           ;main.c: 117: SPBRGL=25;
  3712  0F97  3019               	movlw	(019h)
  3713  0F98  009B               	movwf	(411)^0180h	;volatile
  3714                           	line	118
  3715                           	
  3716  0F99                     l5462:	
  3717                           ;main.c: 118: SPBRGH=0;
  3718  0F99  019C               	clrf	(412)^0180h	;volatile
  3719                           	line	120
  3720                           	
  3721  0F9A                     l5464:	
  3722                           ;main.c: 120: PIR1bits.RCIF=0;
  3723  0F9A  0020               	movlb 0	; select bank0
  3724  0F9B  1291               	bcf	(17),5	;volatile
  3725                           	line	121
  3726                           	
  3727  0F9C                     l5466:	
  3728                           ;main.c: 121: PIE1bits.RCIE=0;
  3729  0F9C  0021               	movlb 1	; select bank1
  3730  0F9D  1291               	bcf	(145)^080h,5	;volatile
  3731                           	line	124
  3732                           	
  3733  0F9E                     l1868:	
  3734  0F9E  0008               	return
  3735                           	opt stack 0
  3736                           GLOBAL	__end_of_usartinit
  3737  0F9F                     	__end_of_usartinit:
  3738 ;; =============== function _usartinit ends ============
  3739                           
  3740                           	signat	_usartinit,88
  3741                           	global	_capsensinit
  3742                           psect	text342,local,class=CODE,delta=2
  3743                           global __ptext342
  3744  07BD                     __ptext342:
  3745                           
  3746 ;; *************** function _capsensinit *****************
  3747 ;; Defined at:
  3748 ;;		line 58 in file "main.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;		None               void
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3762 ;;      Params:         0       0       0       0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0
  3764 ;;      Temps:          0       1       0       0       0       0       0       0
  3765 ;;      Totals:         0       1       0       0       0       0       0       0
  3766 ;;Total ram usage:        1 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    2
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           psect	text342
  3776                           	file	"main.c"
  3777                           	line	58
  3778                           	global	__size_of_capsensinit
  3779  0034                     	__size_of_capsensinit	equ	__end_of_capsensinit-_capsensinit
  3780                           	
  3781  07BD                     _capsensinit:	
  3782                           	opt	stack 13
  3783                           ; Regs used in _capsensinit: [wreg+status,2+status,0]
  3784                           	line	59
  3785                           	
  3786  07BD                     l5430:	
  3787                           ;main.c: 59: LATB = 0;
  3788  07BD  0022               	movlb 2	; select bank2
  3789  07BE  018D               	clrf	(269)^0100h	;volatile
  3790                           	line	60
  3791                           	
  3792  07BF                     l5432:	
  3793                           ;main.c: 60: TRISB |= 0b00111111;
  3794  07BF  303F               	movlw	(03Fh)
  3795  07C0  0020               	movlb 0	; select bank0
  3796  07C1  00A0               	movwf	(??_capsensinit+0)+0
  3797  07C2  0820               	movf	(??_capsensinit+0)+0,w
  3798  07C3  0021               	movlb 1	; select bank1
  3799  07C4  048D               	iorwf	(141)^080h,f	;volatile
  3800                           	line	61
  3801                           	
  3802  07C5                     l5434:	
  3803                           ;main.c: 61: ANSELB |= 0b00111111;
  3804  07C5  303F               	movlw	(03Fh)
  3805  07C6  0020               	movlb 0	; select bank0
  3806  07C7  00A0               	movwf	(??_capsensinit+0)+0
  3807  07C8  0820               	movf	(??_capsensinit+0)+0,w
  3808  07C9  0023               	movlb 3	; select bank3
  3809  07CA  048D               	iorwf	(397)^0180h,f	;volatile
  3810                           	line	63
  3811                           	
  3812  07CB                     l5436:	
  3813                           ;main.c: 63: TRISA |= 0b00110000;
  3814  07CB  3030               	movlw	(030h)
  3815  07CC  0020               	movlb 0	; select bank0
  3816  07CD  00A0               	movwf	(??_capsensinit+0)+0
  3817  07CE  0820               	movf	(??_capsensinit+0)+0,w
  3818  07CF  0021               	movlb 1	; select bank1
  3819  07D0  048C               	iorwf	(140)^080h,f	;volatile
  3820                           	line	64
  3821                           	
  3822  07D1                     l5438:	
  3823                           ;main.c: 64: ANSELA |= 0b00110000;
  3824  07D1  3030               	movlw	(030h)
  3825  07D2  0020               	movlb 0	; select bank0
  3826  07D3  00A0               	movwf	(??_capsensinit+0)+0
  3827  07D4  0820               	movf	(??_capsensinit+0)+0,w
  3828  07D5  0023               	movlb 3	; select bank3
  3829  07D6  048C               	iorwf	(396)^0180h,f	;volatile
  3830                           	line	68
  3831                           ;main.c: 68: ADCON0 = 0;
  3832  07D7  0021               	movlb 1	; select bank1
  3833  07D8  019D               	clrf	(157)^080h	;volatile
  3834                           	line	69
  3835                           ;main.c: 69: ADCON1 = 0;
  3836  07D9  019E               	clrf	(158)^080h	;volatile
  3837                           	line	70
  3838                           	
  3839  07DA                     l5440:	
  3840                           ;main.c: 70: CPSCON0 = 0b10001101;
  3841  07DA  308D               	movlw	(08Dh)
  3842  07DB  0020               	movlb 0	; select bank0
  3843  07DC  009E               	movwf	(30)	;volatile
  3844                           	line	71
  3845                           	
  3846  07DD                     l5442:	
  3847                           ;main.c: 71: CPSCON1 = 0;
  3848  07DD  019F               	clrf	(31)	;volatile
  3849                           	line	76
  3850                           ;main.c: 76: OPTION_REG = 0b11101000;
  3851  07DE  30E8               	movlw	(0E8h)
  3852  07DF  0021               	movlb 1	; select bank1
  3853  07E0  0095               	movwf	(149)^080h	;volatile
  3854                           	line	77
  3855                           	
  3856  07E1                     l5444:	
  3857                           ;main.c: 77: TMR0IF = 0;
  3858  07E1  110B               	bcf	(90/8),(90)&7
  3859                           	line	78
  3860                           	
  3861  07E2                     l5446:	
  3862                           ;main.c: 78: TMR0IE = 1;
  3863  07E2  168B               	bsf	(93/8),(93)&7
  3864                           	line	79
  3865                           ;main.c: 79: T1CON = 0b01000001;
  3866  07E3  3041               	movlw	(041h)
  3867  07E4  0020               	movlb 0	; select bank0
  3868  07E5  0098               	movwf	(24)	;volatile
  3869                           	line	80
  3870                           	
  3871  07E6                     l5448:	
  3872                           ;main.c: 80: TMR1IF =0;
  3873  07E6  1011               	bcf	(136/8),(136)&7
  3874                           	line	81
  3875                           	
  3876  07E7                     l5450:	
  3877                           ;main.c: 81: TMR1IE =1;
  3878  07E7  0021               	movlb 1	; select bank1
  3879  07E8  1411               	bsf	(1160/8)^080h,(1160)&7
  3880                           	line	82
  3881                           ;main.c: 82: T1GCON = 0xE1;
  3882  07E9  30E1               	movlw	(0E1h)
  3883  07EA  0020               	movlb 0	; select bank0
  3884  07EB  0099               	movwf	(25)	;volatile
  3885                           	line	83
  3886                           	
  3887  07EC                     l5452:	
  3888                           ;main.c: 83: TMR1GIF = 0;
  3889  07EC  1391               	bcf	(143/8),(143)&7
  3890                           	line	84
  3891                           	
  3892  07ED                     l5454:	
  3893                           ;main.c: 84: TMR1GIE = 1;
  3894  07ED  0021               	movlb 1	; select bank1
  3895  07EE  1791               	bsf	(1167/8)^080h,(1167)&7
  3896                           	line	85
  3897                           	
  3898  07EF                     l5456:	
  3899                           ;main.c: 85: GIE = 1;
  3900  07EF  178B               	bsf	(95/8),(95)&7
  3901                           	line	86
  3902                           	
  3903  07F0                     l1865:	
  3904  07F0  0008               	return
  3905                           	opt stack 0
  3906                           GLOBAL	__end_of_capsensinit
  3907  07F1                     	__end_of_capsensinit:
  3908 ;; =============== function _capsensinit ends ============
  3909                           
  3910                           	signat	_capsensinit,88
  3911                           	global	_setscanchannel
  3912                           psect	text343,local,class=CODE,delta=2
  3913                           global __ptext343
  3914  0711                     __ptext343:
  3915                           
  3916 ;; *************** function _setscanchannel *****************
  3917 ;; Defined at:
  3918 ;;		line 46 in file "main.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3932 ;;      Params:         0       0       0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    2
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           psect	text343
  3946                           	file	"main.c"
  3947                           	line	46
  3948                           	global	__size_of_setscanchannel
  3949  0056                     	__size_of_setscanchannel	equ	__end_of_setscanchannel-_setscanchannel
  3950                           	
  3951  0711                     _setscanchannel:	
  3952                           	opt	stack 13
  3953                           ; Regs used in _setscanchannel: [wreg+status,2+status,0]
  3954                           	line	47
  3955                           	
  3956  0711                     l5398:	
  3957                           ;main.c: 47: if(channelno==0){CPSCON1 = 0b00000000;}
  3958  0711  08FB               	movf	(_channelno),f
  3959  0712  1D03               	skipz
  3960  0713  2F15               	goto	u3261
  3961  0714  2F16               	goto	u3260
  3962  0715                     u3261:
  3963  0715  2F19               	goto	l5402
  3964  0716                     u3260:
  3965                           	
  3966  0716                     l5400:	
  3967  0716  0020               	movlb 0	; select bank0
  3968  0717  019F               	clrf	(31)	;volatile
  3969  0718  2F66               	goto	l1862
  3970                           	line	48
  3971                           	
  3972  0719                     l1847:	
  3973                           	
  3974  0719                     l5402:	
  3975                           ;main.c: 48: else if(channelno==1){CPSCON1 = 0b00000001;}
  3976  0719  087B               	movf	(_channelno),w
  3977  071A  3A01               	xorlw	01h&0ffh
  3978  071B  1D03               	skipz
  3979  071C  2F1E               	goto	u3271
  3980  071D  2F1F               	goto	u3270
  3981  071E                     u3271:
  3982  071E  2F23               	goto	l5406
  3983  071F                     u3270:
  3984                           	
  3985  071F                     l5404:	
  3986  071F  3001               	movlw	(01h)
  3987  0720  0020               	movlb 0	; select bank0
  3988  0721  009F               	movwf	(31)	;volatile
  3989  0722  2F66               	goto	l1862
  3990                           	line	49
  3991                           	
  3992  0723                     l1849:	
  3993                           	
  3994  0723                     l5406:	
  3995                           ;main.c: 49: else if(channelno==2){CPSCON1 = 0b00000010;}
  3996  0723  087B               	movf	(_channelno),w
  3997  0724  3A02               	xorlw	02h&0ffh
  3998  0725  1D03               	skipz
  3999  0726  2F28               	goto	u3281
  4000  0727  2F29               	goto	u3280
  4001  0728                     u3281:
  4002  0728  2F2D               	goto	l5410
  4003  0729                     u3280:
  4004                           	
  4005  0729                     l5408:	
  4006  0729  3002               	movlw	(02h)
  4007  072A  0020               	movlb 0	; select bank0
  4008  072B  009F               	movwf	(31)	;volatile
  4009  072C  2F66               	goto	l1862
  4010                           	line	50
  4011                           	
  4012  072D                     l1851:	
  4013                           	
  4014  072D                     l5410:	
  4015                           ;main.c: 50: else if(channelno==3){CPSCON1 = 0b00000011;}
  4016  072D  087B               	movf	(_channelno),w
  4017  072E  3A03               	xorlw	03h&0ffh
  4018  072F  1D03               	skipz
  4019  0730  2F32               	goto	u3291
  4020  0731  2F33               	goto	u3290
  4021  0732                     u3291:
  4022  0732  2F37               	goto	l5414
  4023  0733                     u3290:
  4024                           	
  4025  0733                     l5412:	
  4026  0733  3003               	movlw	(03h)
  4027  0734  0020               	movlb 0	; select bank0
  4028  0735  009F               	movwf	(31)	;volatile
  4029  0736  2F66               	goto	l1862
  4030                           	line	51
  4031                           	
  4032  0737                     l1853:	
  4033                           	
  4034  0737                     l5414:	
  4035                           ;main.c: 51: else if(channelno==4){CPSCON1 = 0b00000100;}
  4036  0737  087B               	movf	(_channelno),w
  4037  0738  3A04               	xorlw	04h&0ffh
  4038  0739  1D03               	skipz
  4039  073A  2F3C               	goto	u3301
  4040  073B  2F3D               	goto	u3300
  4041  073C                     u3301:
  4042  073C  2F41               	goto	l5418
  4043  073D                     u3300:
  4044                           	
  4045  073D                     l5416:	
  4046  073D  3004               	movlw	(04h)
  4047  073E  0020               	movlb 0	; select bank0
  4048  073F  009F               	movwf	(31)	;volatile
  4049  0740  2F66               	goto	l1862
  4050                           	line	52
  4051                           	
  4052  0741                     l1855:	
  4053                           	
  4054  0741                     l5418:	
  4055                           ;main.c: 52: else if(channelno==5){CPSCON1 = 0b00000101;}
  4056  0741  087B               	movf	(_channelno),w
  4057  0742  3A05               	xorlw	05h&0ffh
  4058  0743  1D03               	skipz
  4059  0744  2F46               	goto	u3311
  4060  0745  2F47               	goto	u3310
  4061  0746                     u3311:
  4062  0746  2F4B               	goto	l5422
  4063  0747                     u3310:
  4064                           	
  4065  0747                     l5420:	
  4066  0747  3005               	movlw	(05h)
  4067  0748  0020               	movlb 0	; select bank0
  4068  0749  009F               	movwf	(31)	;volatile
  4069  074A  2F66               	goto	l1862
  4070                           	line	53
  4071                           	
  4072  074B                     l1857:	
  4073                           	
  4074  074B                     l5422:	
  4075                           ;main.c: 53: else if(channelno==6){CPSCON1 = 0b00000110;}
  4076  074B  087B               	movf	(_channelno),w
  4077  074C  3A06               	xorlw	06h&0ffh
  4078  074D  1D03               	skipz
  4079  074E  2F50               	goto	u3321
  4080  074F  2F51               	goto	u3320
  4081  0750                     u3321:
  4082  0750  2F55               	goto	l5426
  4083  0751                     u3320:
  4084                           	
  4085  0751                     l5424:	
  4086  0751  3006               	movlw	(06h)
  4087  0752  0020               	movlb 0	; select bank0
  4088  0753  009F               	movwf	(31)	;volatile
  4089  0754  2F66               	goto	l1862
  4090                           	line	54
  4091                           	
  4092  0755                     l1859:	
  4093                           	
  4094  0755                     l5426:	
  4095                           ;main.c: 54: else if(channelno==7){CPSCON1 = 0b00000111;}
  4096  0755  087B               	movf	(_channelno),w
  4097  0756  3A07               	xorlw	07h&0ffh
  4098  0757  1D03               	skipz
  4099  0758  2F5A               	goto	u3331
  4100  0759  2F5B               	goto	u3330
  4101  075A                     u3331:
  4102  075A  2F66               	goto	l1862
  4103  075B                     u3330:
  4104                           	
  4105  075B                     l5428:	
  4106  075B  3007               	movlw	(07h)
  4107  075C  0020               	movlb 0	; select bank0
  4108  075D  009F               	movwf	(31)	;volatile
  4109  075E  2F66               	goto	l1862
  4110                           	
  4111  075F                     l1861:	
  4112  075F  2F66               	goto	l1862
  4113                           	line	55
  4114                           	
  4115  0760                     l1860:	
  4116  0760  2F66               	goto	l1862
  4117                           	
  4118  0761                     l1858:	
  4119  0761  2F66               	goto	l1862
  4120                           	
  4121  0762                     l1856:	
  4122  0762  2F66               	goto	l1862
  4123                           	
  4124  0763                     l1854:	
  4125  0763  2F66               	goto	l1862
  4126                           	
  4127  0764                     l1852:	
  4128  0764  2F66               	goto	l1862
  4129                           	
  4130  0765                     l1850:	
  4131  0765  2F66               	goto	l1862
  4132                           	
  4133  0766                     l1848:	
  4134                           	
  4135  0766                     l1862:	
  4136  0766  0008               	return
  4137                           	opt stack 0
  4138                           GLOBAL	__end_of_setscanchannel
  4139  0767                     	__end_of_setscanchannel:
  4140 ;; =============== function _setscanchannel ends ============
  4141                           
  4142                           	signat	_setscanchannel,88
  4143                           	global	_isr
  4144                           psect	intentry,class=CODE,delta=2
  4145                           global __pintentry
  4146  0004                     __pintentry:
  4147                           
  4148 ;; *************** function _isr *****************
  4149 ;; Defined at:
  4150 ;;		line 357 in file "main.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  no              1   10[COMMON] unsigned char 
  4155 ;;  j               1    9[COMMON] unsigned char 
  4156 ;;  buff_idx        1    8[COMMON] unsigned char 
  4157 ;;  sspstat         1    7[COMMON] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;		None               void
  4160 ;; Registers used:
  4161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4167 ;;      Params:         0       0       0       0       0       0       0       0
  4168 ;;      Locals:         4       0       0       0       0       0       0       0
  4169 ;;      Temps:          7       0       0       0       0       0       0       0
  4170 ;;      Totals:        11       0       0       0       0       0       0       0
  4171 ;;Total ram usage:       11 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    1
  4174 ;; This function calls:
  4175 ;;		i1_setscanchannel
  4176 ;; This function is called by:
  4177 ;;		Interrupt level 1
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           psect	intentry
  4181                           	file	"main.c"
  4182                           	line	357
  4183                           	global	__size_of_isr
  4184  0172                     	__size_of_isr	equ	__end_of_isr-_isr
  4185                           	
  4186  0004                     _isr:	
  4187                           	opt	stack 12
  4188                           ; Regs used in _isr: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  4189                           psect	intentry
  4190  0004  3180               	pagesel	$
  4191  0005  0020               	movlb 0	; select bank0
  4192  0006  087F               	movf	btemp+1,w
  4193  0007  00F6               	movwf	(??_isr+6)
  4194                           	line	361
  4195                           	
  4196  0008                     i1l5490:	
  4197                           ;main.c: 358: UINT8 j;
  4198                           ;main.c: 359: UINT8 sspstat, buff_idx,no;
  4199                           ;main.c: 361: for(no = 0 ; no < 8 ;no++)
  4200  0008  01FA               	clrf	(isr@no)
  4201                           	
  4202  0009                     i1l5492:	
  4203  0009  3008               	movlw	(08h)
  4204  000A  027A               	subwf	(isr@no),w
  4205  000B  1C03               	skipc
  4206  000C  280E               	goto	u335_21
  4207  000D  280F               	goto	u335_20
  4208  000E                     u335_21:
  4209  000E  2811               	goto	i1l5496
  4210  000F                     u335_20:
  4211  000F  283F               	goto	i1l1940
  4212                           	
  4213  0010                     i1l5494:	
  4214  0010  283F               	goto	i1l1940
  4215                           	line	362
  4216                           	
  4217  0011                     i1l1939:	
  4218                           	line	363
  4219                           	
  4220  0011                     i1l5496:	
  4221                           ;main.c: 362: {
  4222                           ;main.c: 363: if(debounc[no])
  4223  0011  087A               	movf	(isr@no),w
  4224  0012  0709               	addwf	wreg,w
  4225  0013  3EE0               	addlw	_debounc&0ffh
  4226  0014  0086               	movwf	fsr1l
  4227  0015  0187               	clrf fsr1h	
  4228                           	
  4229  0016  0016               	moviw	fsr1++
  4230  0017  0401               	iorwf	indf1,w
  4231  0018  1903               	skipnz
  4232  0019  281B               	goto	u336_21
  4233  001A  281C               	goto	u336_20
  4234  001B                     u336_21:
  4235  001B  2835               	goto	i1l5500
  4236  001C                     u336_20:
  4237                           	line	364
  4238                           	
  4239  001C                     i1l5498:	
  4240                           ;main.c: 364: debounc[no]= debounc[no]-1;
  4241  001C  087A               	movf	(isr@no),w
  4242  001D  0709               	addwf	wreg,w
  4243  001E  3EE0               	addlw	_debounc&0ffh
  4244  001F  0086               	movwf	fsr1l
  4245  0020  0187               	clrf fsr1h	
  4246                           	
  4247  0021  3F40               	moviw	[0]fsr1
  4248  0022  00F0               	movwf	(??_isr+0)+0
  4249  0023  3F41               	moviw	[1]fsr1
  4250  0024  00F1               	movwf	(??_isr+0)+0+1
  4251  0025  0870               	movf	0+(??_isr+0)+0,w
  4252  0026  3EFF               	addlw	low(0FFFFh)
  4253  0027  00F2               	movwf	(??_isr+2)+0
  4254  0028  30FF               	movlw	high(0FFFFh)
  4255  0029  3D71               	addwfc	1+(??_isr+0)+0,w
  4256  002A  00F3               	movwf	1+(??_isr+2)+0
  4257  002B  087A               	movf	(isr@no),w
  4258  002C  0709               	addwf	wreg,w
  4259  002D  3EE0               	addlw	_debounc&0ffh
  4260  002E  0086               	movwf	fsr1l
  4261  002F  0187               	clrf fsr1h	
  4262                           	
  4263  0030  0872               	movf	0+(??_isr+2)+0,w
  4264  0031  3FC0               	movwi	[0]fsr1
  4265  0032  0873               	movf	1+(??_isr+2)+0,w
  4266  0033  3FC1               	movwi	[1]fsr1
  4267  0034  2835               	goto	i1l5500
  4268                           	
  4269  0035                     i1l1941:	
  4270                           	line	361
  4271                           	
  4272  0035                     i1l5500:	
  4273  0035  3001               	movlw	(01h)
  4274  0036  00F0               	movwf	(??_isr+0)+0
  4275  0037  0870               	movf	(??_isr+0)+0,w
  4276  0038  07FA               	addwf	(isr@no),f
  4277                           	
  4278  0039                     i1l5502:	
  4279  0039  3008               	movlw	(08h)
  4280  003A  027A               	subwf	(isr@no),w
  4281  003B  1C03               	skipc
  4282  003C  283E               	goto	u337_21
  4283  003D  283F               	goto	u337_20
  4284  003E                     u337_21:
  4285  003E  2811               	goto	i1l5496
  4286  003F                     u337_20:
  4287                           	
  4288  003F                     i1l1940:	
  4289                           	line	366
  4290                           ;main.c: 365: }
  4291                           ;main.c: 366: if (TMR0IE && TMR0IF)
  4292  003F  1E8B               	btfss	(93/8),(93)&7
  4293  0040  2842               	goto	u338_21
  4294  0041  2843               	goto	u338_20
  4295  0042                     u338_21:
  4296  0042  2848               	goto	i1l1942
  4297  0043                     u338_20:
  4298                           	
  4299  0043                     i1l5504:	
  4300  0043  1D0B               	btfss	(90/8),(90)&7
  4301  0044  2846               	goto	u339_21
  4302  0045  2847               	goto	u339_20
  4303  0046                     u339_21:
  4304  0046  2848               	goto	i1l1942
  4305  0047                     u339_20:
  4306                           	line	367
  4307                           	
  4308  0047                     i1l5506:	
  4309                           ;main.c: 367: TMR0IF = 0;
  4310  0047  110B               	bcf	(90/8),(90)&7
  4311                           	
  4312  0048                     i1l1942:	
  4313                           	line	369
  4314                           ;main.c: 369: if (TMR1GIF && TMR1GIE)
  4315  0048  1F91               	btfss	(143/8),(143)&7
  4316  0049  284B               	goto	u340_21
  4317  004A  284C               	goto	u340_20
  4318  004B                     u340_21:
  4319  004B  2904               	goto	i1l5556
  4320  004C                     u340_20:
  4321                           	
  4322  004C                     i1l5508:	
  4323  004C  0021               	movlb 1	; select bank1
  4324  004D  1F91               	btfss	(1167/8)^080h,(1167)&7
  4325  004E  2850               	goto	u341_21
  4326  004F  2851               	goto	u341_20
  4327  0050                     u341_21:
  4328  0050  2904               	goto	i1l5556
  4329  0051                     u341_20:
  4330                           	line	371
  4331                           	
  4332  0051                     i1l5510:	
  4333                           ;main.c: 370: {
  4334                           ;main.c: 371: TMR1GIF = 0;
  4335  0051  0020               	movlb 0	; select bank0
  4336  0052  1391               	bcf	(143/8),(143)&7
  4337                           	line	372
  4338                           	
  4339  0053                     i1l5512:	
  4340                           ;main.c: 372: TMR0 = 0;
  4341  0053  0195               	clrf	(21)	;volatile
  4342                           	line	373
  4343                           	
  4344  0054                     i1l5514:	
  4345                           ;main.c: 373: TMR1ON = 0;
  4346  0054  1018               	bcf	(192/8),(192)&7
  4347                           	line	374
  4348                           	
  4349  0055                     i1l5516:	
  4350                           ;main.c: 374: raw_reading = TMR1L + (unsigned int)(TMR1H << 8);
  4351  0055  0817               	movf	(23),w	;volatile
  4352  0056  00F0               	movwf	(??_isr+0)+0
  4353  0057  01F1               	clrf	(??_isr+0)+0+1
  4354  0058  0870               	movf	(??_isr+0)+0,w
  4355  0059  00F1               	movwf	(??_isr+0)+1
  4356  005A  01F0               	clrf	(??_isr+0)+0
  4357  005B  0816               	movf	(22),w	;volatile
  4358  005C  0770               	addwf	0+(??_isr+0)+0,w
  4359  005D  00E9               	movwf	(_raw_reading)
  4360  005E  0871               	movf	1+(??_isr+0)+0,w
  4361  005F  1803               	skipnc
  4362  0060  0A71               	incf	1+(??_isr+0)+0,w
  4363  0061  00EA               	movwf	((_raw_reading))+1
  4364  0062  01EB               	clrf	2+(_raw_reading)
  4365  0063  01EC               	clrf	3+(_raw_reading)
  4366                           	line	376
  4367                           	
  4368  0064                     i1l5518:	
  4369                           ;main.c: 376: cur_read[channelno] = cur_read[channelno] + raw_reading;
  4370  0064  0869               	movf	(_raw_reading),w
  4371  0065  00F0               	movwf	(??_isr+0)+0
  4372  0066  086A               	movf	(_raw_reading+1),w
  4373  0067  00F1               	movwf	((??_isr+0)+0+1)
  4374  0068  086B               	movf	(_raw_reading+2),w
  4375  0069  00F2               	movwf	((??_isr+0)+0+2)
  4376  006A  086C               	movf	(_raw_reading+3),w
  4377  006B  00F3               	movwf	((??_isr+0)+0+3)
  4378  006C  087B               	movf	(_channelno),w
  4379  006D  00F4               	movwf	(??_isr+4)+0
  4380  006E  3001               	movlw	(02h)-1
  4381  006F                     u342_25:
  4382  006F  35F4               	lslf	(??_isr+4)+0,f
  4383  0070  3EFF               	addlw	-1
  4384  0071  1D03               	skipz
  4385  0072  286F               	goto	u342_25
  4386  0073  3574               	lslf	(??_isr+4)+0,w
  4387  0074  3EC0               	addlw	_cur_read&0ffh
  4388  0075  0086               	movwf	fsr1l
  4389  0076  0187               	clrf fsr1h	
  4390                           	
  4391  0077  3F40               	moviw	[0]fsr1
  4392  0078  07F0               	addwf	(??_isr+0)+0,f
  4393  0079  3F41               	moviw	[1]fsr1
  4394  007A  3DF1               	addwfc	(??_isr+0)+1,f
  4395  007B  3F42               	moviw	[2]fsr1
  4396  007C  3DF2               	addwfc	(??_isr+0)+2,f
  4397  007D  3F43               	moviw	[3]fsr1
  4398  007E  3DF3               	addwfc	(??_isr+0)+3,f
  4399                           
  4400  007F  087B               	movf	(_channelno),w
  4401  0080  00F5               	movwf	(??_isr+5)+0
  4402  0081  3001               	movlw	(02h)-1
  4403  0082                     u343_25:
  4404  0082  35F5               	lslf	(??_isr+5)+0,f
  4405  0083  3EFF               	addlw	-1
  4406  0084  1D03               	skipz
  4407  0085  2882               	goto	u343_25
  4408  0086  3575               	lslf	(??_isr+5)+0,w
  4409  0087  3EC0               	addlw	_cur_read&0ffh
  4410  0088  0086               	movwf	fsr1l
  4411  0089  0187               	clrf fsr1h	
  4412                           	
  4413  008A  0870               	movf	0+(??_isr+0)+0,w
  4414  008B  3FC0               	movwi	[0]fsr1
  4415  008C  0871               	movf	1+(??_isr+0)+0,w
  4416  008D  3FC1               	movwi	[1]fsr1
  4417  008E  0872               	movf	2+(??_isr+0)+0,w
  4418  008F  3FC2               	movwi	[2]fsr1
  4419  0090  0873               	movf	3+(??_isr+0)+0,w
  4420  0091  3FC3               	movwi	[3]fsr1
  4421                           	line	377
  4422                           	
  4423  0092                     i1l5520:	
  4424                           ;main.c: 377: channelno++;
  4425  0092  3001               	movlw	(01h)
  4426  0093  00F0               	movwf	(??_isr+0)+0
  4427  0094  0870               	movf	(??_isr+0)+0,w
  4428  0095  07FB               	addwf	(_channelno),f
  4429                           	line	379
  4430                           	
  4431  0096                     i1l5522:	
  4432                           ;main.c: 379: if ( channelno == 8 ) { channelno = 0; count++; }
  4433  0096  087B               	movf	(_channelno),w
  4434  0097  3A08               	xorlw	08h&0ffh
  4435  0098  1D03               	skipz
  4436  0099  289B               	goto	u344_21
  4437  009A  289C               	goto	u344_20
  4438  009B                     u344_21:
  4439  009B  28A2               	goto	i1l5528
  4440  009C                     u344_20:
  4441                           	
  4442  009C                     i1l5524:	
  4443  009C  01FB               	clrf	(_channelno)
  4444                           	
  4445  009D                     i1l5526:	
  4446  009D  3001               	movlw	(01h)
  4447  009E  00F0               	movwf	(??_isr+0)+0
  4448  009F  0870               	movf	(??_isr+0)+0,w
  4449  00A0  07FC               	addwf	(_count),f
  4450  00A1  28A2               	goto	i1l5528
  4451                           	
  4452  00A2                     i1l1944:	
  4453                           	line	380
  4454                           	
  4455  00A2                     i1l5528:	
  4456                           ;main.c: 380: setscanchannel();
  4457  00A2  3187  2767  3180   	fcall	i1_setscanchannel
  4458                           	line	381
  4459                           	
  4460  00A5                     i1l5530:	
  4461                           ;main.c: 381: TMR1L = 0x00;
  4462  00A5  0020               	movlb 0	; select bank0
  4463  00A6  0196               	clrf	(22)	;volatile
  4464                           	line	382
  4465                           	
  4466  00A7                     i1l5532:	
  4467                           ;main.c: 382: TMR1H = 0x00;
  4468  00A7  0197               	clrf	(23)	;volatile
  4469                           	line	383
  4470                           	
  4471  00A8                     i1l5534:	
  4472                           ;main.c: 383: TMR1ON = 1;
  4473  00A8  1418               	bsf	(192/8),(192)&7
  4474                           	line	385
  4475                           	
  4476  00A9                     i1l5536:	
  4477                           ;main.c: 385: TMR0 = 0;
  4478  00A9  0195               	clrf	(21)	;volatile
  4479                           	line	386
  4480                           	
  4481  00AA                     i1l5538:	
  4482                           ;main.c: 386: T1GGO = 1;
  4483  00AA  1599               	bsf	(203/8),(203)&7
  4484                           	line	387
  4485                           	
  4486  00AB                     i1l5540:	
  4487                           ;main.c: 387: if (count == 8)
  4488  00AB  087C               	movf	(_count),w
  4489  00AC  3A08               	xorlw	08h&0ffh
  4490  00AD  1D03               	skipz
  4491  00AE  28B0               	goto	u345_21
  4492  00AF  28B1               	goto	u345_20
  4493  00B0                     u345_21:
  4494  00B0  2904               	goto	i1l5556
  4495  00B1                     u345_20:
  4496                           	line	389
  4497                           	
  4498  00B1                     i1l5542:	
  4499                           ;main.c: 388: {
  4500                           ;main.c: 389: count = 0;
  4501  00B1  01FC               	clrf	(_count)
  4502                           	line	390
  4503                           ;main.c: 390: for(j = 0 ; j < 8; j ++)
  4504  00B2  01F9               	clrf	(isr@j)
  4505                           	
  4506  00B3                     i1l5544:	
  4507  00B3  3008               	movlw	(08h)
  4508  00B4  0279               	subwf	(isr@j),w
  4509  00B5  1C03               	skipc
  4510  00B6  28B8               	goto	u346_21
  4511  00B7  28B9               	goto	u346_20
  4512  00B8                     u346_21:
  4513  00B8  28BB               	goto	i1l5548
  4514  00B9                     u346_20:
  4515  00B9  28FF               	goto	i1l5554
  4516                           	
  4517  00BA                     i1l5546:	
  4518  00BA  28FF               	goto	i1l5554
  4519                           	line	391
  4520                           	
  4521  00BB                     i1l1946:	
  4522                           	line	392
  4523                           	
  4524  00BB                     i1l5548:	
  4525                           ;main.c: 391: {
  4526                           ;main.c: 392: average[j] = cur_read[j] ;
  4527  00BB  0879               	movf	(isr@j),w
  4528  00BC  00F0               	movwf	(??_isr+0)+0
  4529  00BD  3001               	movlw	(02h)-1
  4530  00BE                     u347_25:
  4531  00BE  35F0               	lslf	(??_isr+0)+0,f
  4532  00BF  3EFF               	addlw	-1
  4533  00C0  1D03               	skipz
  4534  00C1  28BE               	goto	u347_25
  4535  00C2  3570               	lslf	(??_isr+0)+0,w
  4536  00C3  3EC0               	addlw	_cur_read&0ffh
  4537  00C4  0086               	movwf	fsr1l
  4538  00C5  0187               	clrf fsr1h	
  4539                           	
  4540  00C6  3F40               	moviw	[0]fsr1
  4541  00C7  00F1               	movwf	((??_isr+1)+0+0)
  4542  00C8  3F41               	moviw	[1]fsr1
  4543  00C9  00F2               	movwf	((??_isr+1)+0+1)
  4544  00CA  3F42               	moviw	[2]fsr1
  4545  00CB  00F3               	movwf	((??_isr+1)+0+2)
  4546  00CC  3F43               	moviw	[3]fsr1
  4547  00CD  00F4               	movwf	((??_isr+1)+0+3)
  4548  00CE  0879               	movf	(isr@j),w
  4549  00CF  00F5               	movwf	(??_isr+5)+0
  4550  00D0  3001               	movlw	(02h)-1
  4551  00D1                     u348_25:
  4552  00D1  35F5               	lslf	(??_isr+5)+0,f
  4553  00D2  3EFF               	addlw	-1
  4554  00D3  1D03               	skipz
  4555  00D4  28D1               	goto	u348_25
  4556  00D5  3575               	lslf	(??_isr+5)+0,w
  4557  00D6  3EA0               	addlw	_average&0ffh
  4558  00D7  0086               	movwf	fsr1l
  4559  00D8  0187               	clrf fsr1h	
  4560                           	
  4561  00D9  0871               	movf	0+(??_isr+1)+0,w
  4562  00DA  3FC0               	movwi	[0]fsr1
  4563  00DB  0872               	movf	1+(??_isr+1)+0,w
  4564  00DC  3FC1               	movwi	[1]fsr1
  4565  00DD  0873               	movf	2+(??_isr+1)+0,w
  4566  00DE  3FC2               	movwi	[2]fsr1
  4567  00DF  0874               	movf	3+(??_isr+1)+0,w
  4568  00E0  3FC3               	movwi	[3]fsr1
  4569                           	line	393
  4570                           ;main.c: 393: cur_read[j] = 0;
  4571  00E1  0879               	movf	(isr@j),w
  4572  00E2  00F0               	movwf	(??_isr+0)+0
  4573  00E3  3001               	movlw	(02h)-1
  4574  00E4                     u349_25:
  4575  00E4  35F0               	lslf	(??_isr+0)+0,f
  4576  00E5  3EFF               	addlw	-1
  4577  00E6  1D03               	skipz
  4578  00E7  28E4               	goto	u349_25
  4579  00E8  3570               	lslf	(??_isr+0)+0,w
  4580  00E9  3EC0               	addlw	_cur_read&0ffh
  4581  00EA  0086               	movwf	fsr1l
  4582  00EB  0187               	clrf fsr1h	
  4583                           	
  4584  00EC  3000               	movlw	0
  4585  00ED  3FC0               	movwi	[0]fsr1
  4586  00EE  3000               	movlw	0
  4587  00EF  3FC1               	movwi	[1]fsr1
  4588  00F0  3000               	movlw	0
  4589  00F1  3FC2               	movwi	[2]fsr1
  4590  00F2  3000               	movlw	0
  4591  00F3  3FC3               	movwi	[3]fsr1
  4592                           	line	390
  4593                           	
  4594  00F4                     i1l5550:	
  4595  00F4  3001               	movlw	(01h)
  4596  00F5  00F0               	movwf	(??_isr+0)+0
  4597  00F6  0870               	movf	(??_isr+0)+0,w
  4598  00F7  07F9               	addwf	(isr@j),f
  4599                           	
  4600  00F8                     i1l5552:	
  4601  00F8  3008               	movlw	(08h)
  4602  00F9  0279               	subwf	(isr@j),w
  4603  00FA  1C03               	skipc
  4604  00FB  28FD               	goto	u350_21
  4605  00FC  28FE               	goto	u350_20
  4606  00FD                     u350_21:
  4607  00FD  28BB               	goto	i1l5548
  4608  00FE                     u350_20:
  4609  00FE  28FF               	goto	i1l5554
  4610                           	
  4611  00FF                     i1l1947:	
  4612                           	line	395
  4613                           	
  4614  00FF                     i1l5554:	
  4615                           ;main.c: 394: }
  4616                           ;main.c: 395: avgflag = 1;
  4617  00FF  01ED               	clrf	(_avgflag)
  4618  0100  1403               	bsf	status,0
  4619  0101  0DED               	rlf	(_avgflag),f
  4620  0102  2904               	goto	i1l5556
  4621                           	line	396
  4622                           	
  4623  0103                     i1l1945:	
  4624  0103  2904               	goto	i1l5556
  4625                           	line	397
  4626                           	
  4627  0104                     i1l1943:	
  4628                           	line	399
  4629                           	
  4630  0104                     i1l5556:	
  4631                           ;main.c: 396: }
  4632                           ;main.c: 397: }
  4633                           ;main.c: 399: if (SSPIF && SSPIE)
  4634  0104  0020               	movlb 0	; select bank0
  4635  0105  1D91               	btfss	(139/8),(139)&7
  4636  0106  2908               	goto	u351_21
  4637  0107  2909               	goto	u351_20
  4638  0108                     u351_21:
  4639  0108  2972               	goto	i1l1959
  4640  0109                     u351_20:
  4641                           	
  4642  0109                     i1l5558:	
  4643  0109  0021               	movlb 1	; select bank1
  4644  010A  1D91               	btfss	(1163/8)^080h,(1163)&7
  4645  010B  290D               	goto	u352_21
  4646  010C  290E               	goto	u352_20
  4647  010D                     u352_21:
  4648  010D  2972               	goto	i1l1959
  4649  010E                     u352_20:
  4650                           	line	401
  4651                           	
  4652  010E                     i1l5560:	
  4653                           ;main.c: 400: {
  4654                           ;main.c: 401: SSPIF = 0;
  4655  010E  0020               	movlb 0	; select bank0
  4656  010F  1191               	bcf	(139/8),(139)&7
  4657                           	line	402
  4658                           	
  4659  0110                     i1l5562:	
  4660                           ;main.c: 402: sspstat = SSPSTAT & 0b00100101;
  4661  0110  0024               	movlb 4	; select bank4
  4662  0111  0814               	movf	(532)^0200h,w
  4663  0112  3925               	andlw	025h
  4664  0113  00F0               	movwf	(??_isr+0)+0
  4665  0114  0870               	movf	(??_isr+0)+0,w
  4666  0115  00F7               	movwf	(isr@sspstat)
  4667                           	line	403
  4668                           	
  4669  0116                     i1l5564:	
  4670                           ;main.c: 403: if (sspstat == 0b00000001)
  4671  0116  0877               	movf	(isr@sspstat),w
  4672  0117  3A01               	xorlw	01h&0ffh
  4673  0118  1D03               	skipz
  4674  0119  291B               	goto	u353_21
  4675  011A  291C               	goto	u353_20
  4676  011B                     u353_21:
  4677  011B  291F               	goto	i1l5568
  4678  011C                     u353_20:
  4679                           	line	405
  4680                           	
  4681  011C                     i1l5566:	
  4682                           ;main.c: 404: {
  4683                           ;main.c: 405: buff_idx = 0;
  4684  011C  01F8               	clrf	(isr@buff_idx)
  4685                           	line	406
  4686                           ;main.c: 406: SSPCON1bits.CKP = 1;
  4687  011D  1615               	bsf	(533)^0200h,4	;volatile
  4688                           	line	407
  4689                           ;main.c: 407: }
  4690  011E  2972               	goto	i1l1959
  4691                           	line	408
  4692                           	
  4693  011F                     i1l1949:	
  4694                           	
  4695  011F                     i1l5568:	
  4696                           ;main.c: 408: else if ( sspstat == 0b00100001 )
  4697  011F  0877               	movf	(isr@sspstat),w
  4698  0120  3A21               	xorlw	021h&0ffh
  4699  0121  1D03               	skipz
  4700  0122  2924               	goto	u354_21
  4701  0123  2925               	goto	u354_20
  4702  0124                     u354_21:
  4703  0124  293D               	goto	i1l5578
  4704  0125                     u354_20:
  4705                           	line	410
  4706                           	
  4707  0125                     i1l5570:	
  4708                           ;main.c: 409: {
  4709                           ;main.c: 410: i2c_rx_buff[buff_idx] = SSPBUF;
  4710  0125  0811               	movf	(529)^0200h,w	;volatile
  4711  0126  00F0               	movwf	(??_isr+0)+0
  4712  0127  0878               	movf	(isr@buff_idx),w
  4713  0128  3E60               	addlw	_i2c_rx_buff&0ffh
  4714  0129  0086               	movwf	fsr1l
  4715  012A  3001               	movlw 1	; select bank2/3
  4716  012B  0087               	movwf fsr1h	
  4717                           	
  4718  012C  0870               	movf	(??_isr+0)+0,w
  4719  012D  0081               	movwf	indf1
  4720                           	line	411
  4721                           	
  4722  012E                     i1l5572:	
  4723                           ;main.c: 411: SSPCON1bits.CKP = 1;
  4724  012E  1615               	bsf	(533)^0200h,4	;volatile
  4725                           	line	412
  4726                           	
  4727  012F                     i1l5574:	
  4728                           ;main.c: 412: if (++buff_idx == sizeof(i2c_rx_buff))
  4729  012F  3001               	movlw	(01h)
  4730  0130  00F0               	movwf	(??_isr+0)+0
  4731  0131  0870               	movf	(??_isr+0)+0,w
  4732  0132  07F8               	addwf	(isr@buff_idx),f
  4733  0133  0878               	movf	((isr@buff_idx)),w
  4734  0134  3A08               	xorlw	08h&0ffh
  4735  0135  1D03               	skipz
  4736  0136  2938               	goto	u355_21
  4737  0137  2939               	goto	u355_20
  4738  0138                     u355_21:
  4739  0138  2972               	goto	i1l1959
  4740  0139                     u355_20:
  4741                           	line	414
  4742                           	
  4743  0139                     i1l5576:	
  4744                           ;main.c: 413: {
  4745                           ;main.c: 414: buff_idx--;
  4746  0139  3001               	movlw	low(01h)
  4747  013A  02F8               	subwf	(isr@buff_idx),f
  4748  013B  2972               	goto	i1l1959
  4749                           	line	415
  4750                           	
  4751  013C                     i1l1952:	
  4752                           	line	416
  4753                           ;main.c: 415: }
  4754                           ;main.c: 416: }
  4755  013C  2972               	goto	i1l1959
  4756                           	line	417
  4757                           	
  4758  013D                     i1l1951:	
  4759                           	
  4760  013D                     i1l5578:	
  4761                           ;main.c: 417: else if ( sspstat == 0b00000101 )
  4762  013D  0877               	movf	(isr@sspstat),w
  4763  013E  3A05               	xorlw	05h&0ffh
  4764  013F  1D03               	skipz
  4765  0140  2942               	goto	u356_21
  4766  0141  2943               	goto	u356_20
  4767  0142                     u356_21:
  4768  0142  294E               	goto	i1l5588
  4769  0143                     u356_20:
  4770                           	line	420
  4771                           	
  4772  0143                     i1l5580:	
  4773                           ;main.c: 418: {
  4774                           ;main.c: 420: LATCbits.LATC5 = 1 ;
  4775  0143  0022               	movlb 2	; select bank2
  4776  0144  168E               	bsf	(270)^0100h,5	;volatile
  4777                           	line	421
  4778                           	
  4779  0145                     i1l5582:	
  4780                           ;main.c: 421: SSPBUF = i2c_tx_buff[0];
  4781  0145  0020               	movlb 0	; select bank0
  4782  0146  0848               	movf	(_i2c_tx_buff),w
  4783  0147  0024               	movlb 4	; select bank4
  4784  0148  0091               	movwf	(529)^0200h	;volatile
  4785                           	line	422
  4786                           	
  4787  0149                     i1l5584:	
  4788                           ;main.c: 422: SSPCON1bits.CKP=1;
  4789  0149  1615               	bsf	(533)^0200h,4	;volatile
  4790                           	line	423
  4791                           	
  4792  014A                     i1l5586:	
  4793                           ;main.c: 423: buff_idx = 1;
  4794  014A  01F8               	clrf	(isr@buff_idx)
  4795  014B  1403               	bsf	status,0
  4796  014C  0DF8               	rlf	(isr@buff_idx),f
  4797                           	line	424
  4798                           ;main.c: 424: }
  4799  014D  2972               	goto	i1l1959
  4800                           	line	425
  4801                           	
  4802  014E                     i1l1954:	
  4803                           	
  4804  014E                     i1l5588:	
  4805                           ;main.c: 425: else if (( sspstat == 0b00100100 )&&(!SSPCON2bits.ACKSTAT))
  4806  014E  0877               	movf	(isr@sspstat),w
  4807  014F  3A24               	xorlw	024h&0ffh
  4808  0150  1D03               	skipz
  4809  0151  2953               	goto	u357_21
  4810  0152  2954               	goto	u357_20
  4811  0153                     u357_21:
  4812  0153  296C               	goto	i1l1956
  4813  0154                     u357_20:
  4814                           	
  4815  0154                     i1l5590:	
  4816  0154  1B16               	btfsc	(534)^0200h,6	;volatile
  4817  0155  2957               	goto	u358_21
  4818  0156  2958               	goto	u358_20
  4819  0157                     u358_21:
  4820  0157  296C               	goto	i1l1956
  4821  0158                     u358_20:
  4822                           	line	427
  4823                           	
  4824  0158                     i1l5592:	
  4825                           ;main.c: 426: {
  4826                           ;main.c: 427: SSPBUF = i2c_tx_buff[buff_idx];
  4827  0158  0878               	movf	(isr@buff_idx),w
  4828  0159  3E48               	addlw	_i2c_tx_buff&0ffh
  4829  015A  0086               	movwf	fsr1l
  4830  015B  0187               	clrf fsr1h	
  4831                           	
  4832  015C  0801               	movf	indf1,w
  4833  015D  0091               	movwf	(529)^0200h	;volatile
  4834                           	line	428
  4835                           	
  4836  015E                     i1l5594:	
  4837                           ;main.c: 428: SSPCON1bits.CKP = 1;
  4838  015E  1615               	bsf	(533)^0200h,4	;volatile
  4839                           	line	429
  4840                           	
  4841  015F                     i1l5596:	
  4842                           ;main.c: 429: if (++buff_idx == sizeof(i2c_tx_buff))
  4843  015F  3001               	movlw	(01h)
  4844  0160  00F0               	movwf	(??_isr+0)+0
  4845  0161  0870               	movf	(??_isr+0)+0,w
  4846  0162  07F8               	addwf	(isr@buff_idx),f
  4847  0163  0878               	movf	((isr@buff_idx)),w
  4848  0164  3A08               	xorlw	08h&0ffh
  4849  0165  1D03               	skipz
  4850  0166  2968               	goto	u359_21
  4851  0167  2969               	goto	u359_20
  4852  0168                     u359_21:
  4853  0168  2972               	goto	i1l1959
  4854  0169                     u359_20:
  4855                           	line	431
  4856                           	
  4857  0169                     i1l5598:	
  4858                           ;main.c: 430: {
  4859                           ;main.c: 431: buff_idx = 0;
  4860  0169  01F8               	clrf	(isr@buff_idx)
  4861  016A  2972               	goto	i1l1959
  4862                           	line	433
  4863                           	
  4864  016B                     i1l1957:	
  4865                           	line	434
  4866                           ;main.c: 433: }
  4867                           ;main.c: 434: }
  4868  016B  2972               	goto	i1l1959
  4869                           	line	435
  4870                           	
  4871  016C                     i1l1956:	
  4872                           	line	437
  4873                           ;main.c: 435: else
  4874                           ;main.c: 436: {
  4875                           ;main.c: 437: SSPCON1bits.CKP=1;
  4876  016C  1615               	bsf	(533)^0200h,4	;volatile
  4877  016D  2972               	goto	i1l1959
  4878                           	line	438
  4879                           	
  4880  016E                     i1l1958:	
  4881  016E  2972               	goto	i1l1959
  4882                           	
  4883  016F                     i1l1955:	
  4884  016F  2972               	goto	i1l1959
  4885                           	
  4886  0170                     i1l1953:	
  4887  0170  2972               	goto	i1l1959
  4888                           	
  4889  0171                     i1l1950:	
  4890  0171  2972               	goto	i1l1959
  4891                           	line	439
  4892                           	
  4893  0172                     i1l1948:	
  4894                           	line	440
  4895                           	
  4896  0172                     i1l1959:	
  4897  0172  0876               	movf	(??_isr+6),w
  4898  0173  0020               	movlb 0	; select bank0
  4899  0174  00FF               	movwf	btemp+1
  4900  0175  0009               	retfie
  4901                           	opt stack 0
  4902                           GLOBAL	__end_of_isr
  4903  0176                     	__end_of_isr:
  4904 ;; =============== function _isr ends ============
  4905                           
  4906                           	signat	_isr,88
  4907                           	global	i1_setscanchannel
  4908                           psect	text345,local,class=CODE,delta=2
  4909                           global __ptext345
  4910  0767                     __ptext345:
  4911                           
  4912 ;; *************** function i1_setscanchannel *****************
  4913 ;; Defined at:
  4914 ;;		line 46 in file "main.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;		None               void
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4928 ;;      Params:         0       0       0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_isr
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           psect	text345
  4941                           	file	"main.c"
  4942                           	line	46
  4943                           	global	__size_ofi1_setscanchannel
  4944  0056                     	__size_ofi1_setscanchannel	equ	__end_ofi1_setscanchannel-i1_setscanchannel
  4945                           	
  4946  0767                     i1_setscanchannel:	
  4947                           	opt	stack 12
  4948                           ; Regs used in i1_setscanchannel: [wreg+status,2+status,0]
  4949                           	line	47
  4950                           	
  4951  0767                     i1l5674:	
  4952                           ;main.c: 47: if(channelno==0){CPSCON1 = 0b00000000;}
  4953  0767  08FB               	movf	(_channelno),f
  4954  0768  1D03               	skipz
  4955  0769  2F6B               	goto	u379_21
  4956  076A  2F6C               	goto	u379_20
  4957  076B                     u379_21:
  4958  076B  2F6F               	goto	i1l5678
  4959  076C                     u379_20:
  4960                           	
  4961  076C                     i1l5676:	
  4962  076C  0020               	movlb 0	; select bank0
  4963  076D  019F               	clrf	(31)	;volatile
  4964  076E  2FBC               	goto	i1l1862
  4965                           	line	48
  4966                           	
  4967  076F                     i1l1847:	
  4968                           	
  4969  076F                     i1l5678:	
  4970                           ;main.c: 48: else if(channelno==1){CPSCON1 = 0b00000001;}
  4971  076F  087B               	movf	(_channelno),w
  4972  0770  3A01               	xorlw	01h&0ffh
  4973  0771  1D03               	skipz
  4974  0772  2F74               	goto	u380_21
  4975  0773  2F75               	goto	u380_20
  4976  0774                     u380_21:
  4977  0774  2F79               	goto	i1l5682
  4978  0775                     u380_20:
  4979                           	
  4980  0775                     i1l5680:	
  4981  0775  3001               	movlw	(01h)
  4982  0776  0020               	movlb 0	; select bank0
  4983  0777  009F               	movwf	(31)	;volatile
  4984  0778  2FBC               	goto	i1l1862
  4985                           	line	49
  4986                           	
  4987  0779                     i1l1849:	
  4988                           	
  4989  0779                     i1l5682:	
  4990                           ;main.c: 49: else if(channelno==2){CPSCON1 = 0b00000010;}
  4991  0779  087B               	movf	(_channelno),w
  4992  077A  3A02               	xorlw	02h&0ffh
  4993  077B  1D03               	skipz
  4994  077C  2F7E               	goto	u381_21
  4995  077D  2F7F               	goto	u381_20
  4996  077E                     u381_21:
  4997  077E  2F83               	goto	i1l5686
  4998  077F                     u381_20:
  4999                           	
  5000  077F                     i1l5684:	
  5001  077F  3002               	movlw	(02h)
  5002  0780  0020               	movlb 0	; select bank0
  5003  0781  009F               	movwf	(31)	;volatile
  5004  0782  2FBC               	goto	i1l1862
  5005                           	line	50
  5006                           	
  5007  0783                     i1l1851:	
  5008                           	
  5009  0783                     i1l5686:	
  5010                           ;main.c: 50: else if(channelno==3){CPSCON1 = 0b00000011;}
  5011  0783  087B               	movf	(_channelno),w
  5012  0784  3A03               	xorlw	03h&0ffh
  5013  0785  1D03               	skipz
  5014  0786  2F88               	goto	u382_21
  5015  0787  2F89               	goto	u382_20
  5016  0788                     u382_21:
  5017  0788  2F8D               	goto	i1l5690
  5018  0789                     u382_20:
  5019                           	
  5020  0789                     i1l5688:	
  5021  0789  3003               	movlw	(03h)
  5022  078A  0020               	movlb 0	; select bank0
  5023  078B  009F               	movwf	(31)	;volatile
  5024  078C  2FBC               	goto	i1l1862
  5025                           	line	51
  5026                           	
  5027  078D                     i1l1853:	
  5028                           	
  5029  078D                     i1l5690:	
  5030                           ;main.c: 51: else if(channelno==4){CPSCON1 = 0b00000100;}
  5031  078D  087B               	movf	(_channelno),w
  5032  078E  3A04               	xorlw	04h&0ffh
  5033  078F  1D03               	skipz
  5034  0790  2F92               	goto	u383_21
  5035  0791  2F93               	goto	u383_20
  5036  0792                     u383_21:
  5037  0792  2F97               	goto	i1l5694
  5038  0793                     u383_20:
  5039                           	
  5040  0793                     i1l5692:	
  5041  0793  3004               	movlw	(04h)
  5042  0794  0020               	movlb 0	; select bank0
  5043  0795  009F               	movwf	(31)	;volatile
  5044  0796  2FBC               	goto	i1l1862
  5045                           	line	52
  5046                           	
  5047  0797                     i1l1855:	
  5048                           	
  5049  0797                     i1l5694:	
  5050                           ;main.c: 52: else if(channelno==5){CPSCON1 = 0b00000101;}
  5051  0797  087B               	movf	(_channelno),w
  5052  0798  3A05               	xorlw	05h&0ffh
  5053  0799  1D03               	skipz
  5054  079A  2F9C               	goto	u384_21
  5055  079B  2F9D               	goto	u384_20
  5056  079C                     u384_21:
  5057  079C  2FA1               	goto	i1l5698
  5058  079D                     u384_20:
  5059                           	
  5060  079D                     i1l5696:	
  5061  079D  3005               	movlw	(05h)
  5062  079E  0020               	movlb 0	; select bank0
  5063  079F  009F               	movwf	(31)	;volatile
  5064  07A0  2FBC               	goto	i1l1862
  5065                           	line	53
  5066                           	
  5067  07A1                     i1l1857:	
  5068                           	
  5069  07A1                     i1l5698:	
  5070                           ;main.c: 53: else if(channelno==6){CPSCON1 = 0b00000110;}
  5071  07A1  087B               	movf	(_channelno),w
  5072  07A2  3A06               	xorlw	06h&0ffh
  5073  07A3  1D03               	skipz
  5074  07A4  2FA6               	goto	u385_21
  5075  07A5  2FA7               	goto	u385_20
  5076  07A6                     u385_21:
  5077  07A6  2FAB               	goto	i1l5702
  5078  07A7                     u385_20:
  5079                           	
  5080  07A7                     i1l5700:	
  5081  07A7  3006               	movlw	(06h)
  5082  07A8  0020               	movlb 0	; select bank0
  5083  07A9  009F               	movwf	(31)	;volatile
  5084  07AA  2FBC               	goto	i1l1862
  5085                           	line	54
  5086                           	
  5087  07AB                     i1l1859:	
  5088                           	
  5089  07AB                     i1l5702:	
  5090                           ;main.c: 54: else if(channelno==7){CPSCON1 = 0b00000111;}
  5091  07AB  087B               	movf	(_channelno),w
  5092  07AC  3A07               	xorlw	07h&0ffh
  5093  07AD  1D03               	skipz
  5094  07AE  2FB0               	goto	u386_21
  5095  07AF  2FB1               	goto	u386_20
  5096  07B0                     u386_21:
  5097  07B0  2FBC               	goto	i1l1862
  5098  07B1                     u386_20:
  5099                           	
  5100  07B1                     i1l5704:	
  5101  07B1  3007               	movlw	(07h)
  5102  07B2  0020               	movlb 0	; select bank0
  5103  07B3  009F               	movwf	(31)	;volatile
  5104  07B4  2FBC               	goto	i1l1862
  5105                           	
  5106  07B5                     i1l1861:	
  5107  07B5  2FBC               	goto	i1l1862
  5108                           	line	55
  5109                           	
  5110  07B6                     i1l1860:	
  5111  07B6  2FBC               	goto	i1l1862
  5112                           	
  5113  07B7                     i1l1858:	
  5114  07B7  2FBC               	goto	i1l1862
  5115                           	
  5116  07B8                     i1l1856:	
  5117  07B8  2FBC               	goto	i1l1862
  5118                           	
  5119  07B9                     i1l1854:	
  5120  07B9  2FBC               	goto	i1l1862
  5121                           	
  5122  07BA                     i1l1852:	
  5123  07BA  2FBC               	goto	i1l1862
  5124                           	
  5125  07BB                     i1l1850:	
  5126  07BB  2FBC               	goto	i1l1862
  5127                           	
  5128  07BC                     i1l1848:	
  5129                           	
  5130  07BC                     i1l1862:	
  5131  07BC  0008               	return
  5132                           	opt stack 0
  5133                           GLOBAL	__end_ofi1_setscanchannel
  5134  07BD                     	__end_ofi1_setscanchannel:
  5135 ;; =============== function i1_setscanchannel ends ============
  5136                           
  5137                           	signat	i1_setscanchannel,88
  5138                           psect	text346,local,class=CODE,delta=2
  5139                           global __ptext346
  5140  0000                     __ptext346:
  5141                           	global	btemp
  5142  007E                     	btemp set 07Eh
  5143                           
  5144                           	DABS	1,126,2	;btemp
  5145                           	global	wtemp0
  5146  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Feb 19 15:31:49 2015

         i1_setscanchannel 0767                         _RD 0CA8                         _WR 0CA9  
             ___awdiv@sign 0026                        _GIE 005F                        _max 0065  
                      _isr 0004                        _pos 006E               ___awmod@sign 0026  
                      wreg 0009            __end_of_I2Cinit 0FDB                       l1901 0FDA  
                     l1910 0564                       l1911 02C9                       l1920 0460  
                     l1912 025E                       l1904 0196                       l1921 0559  
                     l1913 0293                       l1905 01ED                       l1850 0765  
                     l1930 04CC                       l1922 046F                       l1914 02C8  
                     l1906 020B                       l1851 072D                       l1923 050A  
                     l1931 04EB                       l1915 02A2                       l1907 021A  
                     l1852 0764                       l1860 0760                       l1908 0566  
                     l1932 04E5                       l1924 048B                       l1916 02C4  
                     l1861 075F                       l1853 0737                       l1917 055A  
                     l1933 0534                       l1925 0485                       l1909 0229  
                     l1854 0763                       l1862 0766                       l1934 0567  
                     l1926 04EC                       l1918 03CD                       l1855 0741  
                     l1847 0719                       l1871 07F4                       l1935 0568  
                     l1927 04D5                       l1919 041D                       l1848 0766  
                     l1856 0762                       l5400 0716                       l1872 07F4  
                     l1880 0FB9                       l1936 0568                       l1928 04D4  
                     l1857 074B                       l1849 0723                       l1865 07F0  
                     l1873 07FA                       l1929 04BC                       l1858 0761  
                     l5410 072D                       l5402 0719                       l1874 07FE  
                     l1890 05AE                       l1859 0755                       l1891 05E6  
                     l5420 0747                       l5412 0733                       l5404 071F  
                     l1868 0F9E                       l1892 0603                       l1877 0FAF  
                     l1893 05F7                       l1885 058E                       l5422 074B  
                     l5414 0737                       l5406 0723                       l5430 07BD  
                     l1878 0FA2                       l1894 05F2                       l1886 0593  
                     l1879 0FB9                       l1895 0602                       l1887 05AD  
                     l5424 0751                       l5416 073D                       l5408 0729  
                     l5440 07DA                       l5432 07BF                       l5600 0643  
                     l3840 06BF                       l1896 0610                       l1888 0642  
                     l3841 06C9                       l1897 0625                       l1889 05DE  
                     l5426 0755                       l5418 0741                       l5450 07E7  
                     l5442 07DD                       l5434 07C5                       l5610 0660  
                     l5602 0649                       l3850 0710                       l3842 06FF  
                     l1898 0642                       l3843 06DD                       l5428 075B  
                     l5452 07EC                       l5444 07E1                       l5436 07CB  
                     l5460 0F97                       l3780 069D                       l5620 0676  
                     l5612 0662                       l3772 0652                       l5604 0652  
                     l3844 06D3                       l3781 06A8                       l3773 0660  
                     l3845 06E2                       l5454 07ED                       l5446 07E2  
                     l5438 07D1                       l5462 0F99                       l5470 07FA  
                     l3782 06AF                       l3774 069E                       l5630 0696  
                     l5622 067C                       l5614 0668                       l5606 0656  
                     l3846 06E3                       l5710 0FA9                       l3775 0676  
                     l3847 06F2                       l5456 07EF                       l5448 07E6  
                     l5464 0F9A                       l5480 0FD2                       l5472 0FBA  
                     l5624 068B                       l5616 066C                       l3776 066C  
                     l5632 069E                       l5608 065B                       l3848 06FE  
                     l5640 06B0                       l5712 0FAF                       l5720 057F  
                     l5800 01F8                       l3777 067B                       l3849 0709  
                     l5466 0F9C                       l5458 0F8D                       l5482 0FD4  
                     l5474 0FBD                       l5634 06A2                       l5626 068F  
                     l3778 067C                       l5618 0671                       l5650 06CF  
                     l5642 06B6                       l5706 0FA1                       l5730 059A  
                     l5722 0583                       l5714 056A                       l5810 020D  
                     l5802 01FA                       l3779 0691                       l5468 07F3  
                     l5484 0FD5                       l5476 0FC9                       l5636 06A8  
                     l5628 0691                       l5660 06ED                       l5652 06D3  
                     l5644 06BF                       l5708 0FA2                       l5740 05D9  
                     l5732 05A7                       l5724 0587                       l5716 0578  
                     l5900 04DF                       l5820 0221                       l5812 0215  
                     l5804 0201                       l5398 0711                       l5486 0FD7  
                     l5478 0FD0                       l5638 06AF                       l5670 0709  
                     l5662 06F2                       l5654 06D8                       l5646 06C3  
                     l5750 05F7                       l5734 05AC                       l5742 05DE  
                     l5726 058E                       l5718 057D                       l5910 0510  
                     l5902 04EC                       l5830 024A                       l5822 0228  
                     l5814 021A                       l5806 0206                       l5488 0FD9  
                     l5672 0710                       l5664 06F7                       l5656 06DD  
                     l5648 06C9                       l5760 062F                       l5752 0603  
                     l5744 05E6                       l5736 05AE                       l5728 0593  
                     l5920 0531                       l5912 051B                       l5904 04FE  
                     l5840 029A                       l5832 0288                       l5824 0229  
                     l5816 021B                       l5808 020B                       l5658 06E3  
                     l5666 06FF                       l5762 0634                       l5754 0616  
                     l5746 05F1                       l5738 05C5                       l5930 0554  
                     l5914 0524                       l5922 0534                       l5906 0503  
                     l5842 02A1                       l5850 02C4                       l5834 028E  
                     l5826 023F                       l5818 0220                       l5770 0180  
                     l5668 0703                       l5756 0624                       l5748 05F2  
                     l5924 0543                       l5916 0528                       l5908 050A  
                     l5860 041D                       l5844 02A2                       l5932 055A  
                     l5836 0293                       l5828 0244                       l5852 02C9  
                     l5780 0187                       l5772 0181                       l5764 0179  
                     ?_isr 0070                       l5758 0625                       l5934 055E  
                     l5926 0547                       l5918 052C                       l5870 0467  
                     l5862 0447                       l5854 033F                       l5846 02B9  
                     l5838 0299                       l5790 0196                       l5782 0188  
                     l5774 0183                       l5766 017C                       l5928 054B  
                     l5880 048B                       l5872 046E                       l5864 045B  
                     l5856 037D                       l5848 02BD                       l5792 01E3  
                     l5784 018C                       l5776 0184                       l5768 017F  
                     l5890 04BC                       l5882 04A1                       l5874 046F  
                     l5866 0460                       l5858 03CD                       l5794 01E7  
                     l5786 018E                       l5778 0186                       l5892 04C1  
                     l5884 04B3                       l5876 0475                       l5868 0466  
                     l5796 01F1                       l5788 0195                       l5894 04C5  
                     l5886 04B4                       l5878 047F                       l5798 01F7  
                     l5888 04BB                       l5896 04CC                       l5898 04D5  
                     STR_1 0811                       STR_2 0801                       _LATB 010D  
                     u4010 01ED                       u4011 01EC                       u3300 073D  
                     u4020 0206                       u3301 073C                       u4021 0205  
                     u4005 01C9                       u3310 0747                       u4030 0220  
                     u3311 0746                       u3320 0751                       u4120 028E  
                     u4040 0227                       u3321 0750                       u4121 028D  
                     u4105 0261                       u4041 0226                       u3330 075B  
                     u4130 0299                       u3331 075A                       u4131 0298  
                     u4115 0274                       u3260 0716                       u3340 07F9  
                     u4140 02A0                       u3261 0715                       u3341 07F8  
                     u4205 02F4                       u4141 029F                       u3270 071F  
                     u4070 0244                       u3271 071E                       u4215 0308  
                     u4071 0243                       u4055 022C                       u3280 0729  
                     u3600 0649                       u4400 04B3                       u4080 024A  
                     u3281 0728                       u3601 0648                       u4401 04B2  
                     u4305 03E4                       u4225 032E                       u4081 0249  
                     u4065 0235                       u3290 0733                       u3610 0656  
                     u4410 04BA                       u4330 0447                       u4250 037D  
                     u4170 02C3                       u3291 0732                       u3611 0655  
                     u4411 04B9                       u4331 0446                       u4315 040B  
                     u4251 037C                       u4235 0342                       u4171 02C2  
                     u4155 02A5                       u3620 0668                       u3700 06B6  
                     u4420 04CB                       u3621 0667                       u3701 06B5  
                     u4421 04CA                       u4333 0443                       u4325 0420  
                     u4253 0379                       u4245 0356                       u4165 02AF  
                     u3710 06C3                       u4430 04DF                       u4350 0466  
                     u3711 06C2                       u4431 04DE                       u4351 0465  
                     u4095 024D                       u3640 067A                       u3720 06CF  
                     u4440 0509                       u4360 046D                       u3641 0679  
                     u3721 06CE                       u4441 0508                       u4361 046C  
                     u4345 044A                       u4265 0380                       u4185 02CC  
                     u4450 0510                       u4370 0475                       u3635 066D  
                     u4451 050F                       u4371 0474                       u4275 0394  
                     u4195 02E0                       _PEIE 005E                       u3660 068B  
                     u3740 06E1                       u3900 059A                       u4460 051B  
                     u4380 047F                       u3661 068A                       u3741 06E0  
                     u3901 0599                       u4461 051A                       u4381 047E  
                     u4285 03BB                       u3750 06ED                       u3910 05A7  
                     u4470 0564                       u4390 04A1                       u3655 067D  
                     u3751 06EC                       u3735 06D4                       u3911 05A6  
                     u4471 0563                       u4391 04A0                       u4295 03D0  
                     u3680 069C                       u3920 05E5                       u3681 069B  
                     u3665 0687                       u3921 05E4                       u4393 049D  
                     u3690 06A2                       u3770 06FD                       u3930 05F0  
                     u3675 0692                       u3771 06FC                       u3755 06E9  
                     u3931 05EF                       u3915 05A3                       u3780 0703  
                     u3940 0601                       u3765 06F3                       u3941 0600  
                     u3870 0FB8                       u3950 0623                       u3871 0FB7  
                     u3951 0622                       u3935 05EC                       u3960 0641  
                     u3880 0574                       u3961 0640                       u3890 0583  
                     u3970 0194                       u3955 061F                       u3891 0582  
                     u3971 0193                       u3965 063D                       u3985 01A2  
                     u3995 01B6                       _TMR0 0015                       _WREN 0CAA  
   __end_of_USARTWriteChar 07FF                       _diff 01C0                       _main 0179  
                     fsr0h 0005                       fsr1h 0007                       fsr0l 0004  
                     indf0 0000                       indf1 0001                       fsr1l 0006  
                     btemp 007E                       isr@j 0079             ?_USARTWriteInt 0029  
                     start 0176                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 06B0                      _EEADR 0191            __end_of___awmod 0711  
                    _CARRY 0018           USARTWriteChar@ch 0020            ___awdiv@divisor 0020  
                    _T1CON 0018                      _T1GGO 00CB           ??_setscanchannel 0020  
          ___awdiv@counter 0025                      _TMR1H 0017                      _TMR1L 0016  
                    _TRISA 008C                      _TRISB 008D                      _TRISC 008E  
                    _SSPIE 048B                      _SSPIF 008B                      _TXREG 019A  
         USARTWriteInt@val 0029           USARTWriteInt@str 002F                      _count 007C  
                    main@i 0047                      main@j 0045                      main@k 0044  
                    main@t 0046                      isr@no 007A            ?_USARTWriteChar 0070  
                    status 0003                      wtemp0 007E       __size_of_capsensinit 0034  
             __end_of_main 056A                  ??_I2Cinit 0020                     ??_main 0038  
                   _ADCON0 009D                     _ADCON1 009E                     _EEDATA 0193  
                   _EECON1 0195                     _EECON2 0196           ___awdiv@dividend 0022  
              isr@buff_idx 0078                     _ANSELA 018C                     _ANSELB 018D  
                   _T1GCON 0019                     i1l1850 07BB                     i1l1851 0783  
                   i1l1852 07BA                     i1l1860 07B6                     i1l1940 003F  
                   i1l1861 07B5                     i1l1853 078D                     i1l1941 0035  
                   i1l1854 07B9                     i1l1862 07BC                     i1l1950 0171  
                   i1l1942 0048                     i1l1855 0797                     i1l1847 076F  
                   i1l1951 013D                     i1l1943 0104                     i1l1848 07BC  
                   i1l1856 07B8                     i1l1952 013C                     i1l1944 00A2  
                   i1l1857 07A1                     i1l1849 0779                     i1l1953 0170  
                   i1l1945 0103                     i1l1858 07B7                     i1l1954 014E  
                   i1l1946 00BB                     i1l1859 07AB                     i1l1955 016F  
                   i1l1947 00FF                     i1l1939 0011                     i1l1948 0172  
                   i1l1956 016C                     i1l5500 0035                     i1l1957 016B  
                   i1l1949 011F                     i1l1958 016E                     i1l5510 0051  
                   i1l5502 0039                     i1l1959 0172                     i1l5520 0092  
                   i1l5512 0053                     i1l5504 0043                     i1l5530 00A5  
                   i1l5522 0096                     i1l5514 0054                     i1l5506 0047  
                   i1l5700 07A7                     i1l5540 00AB                     i1l5532 00A7  
                   i1l5524 009C                     i1l5516 0055                     i1l5508 004C  
                   i1l5702 07AB                     i1l5550 00F4                     i1l5542 00B1  
                   i1l5534 00A8                     i1l5526 009D                     i1l5518 0064  
                   i1l5704 07B1                     i1l5560 010E                     i1l5552 00F8  
                   i1l5544 00B3                     i1l5536 00A9                     i1l5528 00A2  
                   i1l5570 0125                     i1l5562 0110                     i1l5546 00BA  
                   i1l5554 00FF                     i1l5538 00AA                     i1l5490 0008  
                   i1l5580 0143                     i1l5572 012E                     i1l5564 0116  
                   i1l5548 00BB                     i1l5556 0104                     i1l5492 0009  
                   i1l5590 0154                     i1l5582 0145                     i1l5574 012F  
                   i1l5566 011C                     i1l5558 0109                     i1l5494 0010  
                   i1l5680 0775                     i1l5592 0158                     i1l5584 0149  
                   i1l5576 0139                     i1l5568 011F                     i1l5496 0011  
                   i1l5690 078D                     i1l5682 0779                     i1l5674 0767  
                   i1l5594 015E                     i1l5586 014A                     i1l5578 013D  
                   i1l5498 001C                     i1l5692 0793                     i1l5684 077F  
                   i1l5676 076C                     i1l5596 015F                     i1l5588 014E  
                   i1l5694 0797                     i1l5686 0783                     i1l5678 076F  
                   i1l5598 0169                     i1l5696 079D                     i1l5688 0789  
                   i1l5698 07A1                     u340_20 004C                     u340_21 004B  
                   u341_20 0051                     u341_21 0050                     u350_20 00FE  
                   u350_21 00FD                     u342_25 006F                     u351_20 0109  
                   u335_20 000F                     u351_21 0108                     u335_21 000E  
                   u343_25 0082                     u352_20 010E                     u344_20 009C  
                   u336_20 001C                     u352_21 010D                     u344_21 009B  
                   u336_21 001B                     u353_20 011C                     u345_20 00B1  
                   u337_20 003F                     u353_21 011B                     u345_21 00B0  
                   u337_21 003E                     u354_20 0125                     u346_20 00B9  
                   u338_20 0043                     u354_21 0124                     u346_21 00B8  
                   u338_21 0042                     u355_20 0139                     u339_20 0047  
                   u355_21 0138                     u339_21 0046                     u347_25 00BE  
                   u380_20 0775                     u356_20 0143                     u380_21 0774  
                   u356_21 0142                     u348_25 00D1                     u381_20 077F  
                   u357_20 0154                     u381_21 077E                     u357_21 0153  
                   u349_25 00E4                     u382_20 0789                     u358_20 0158  
                   u382_21 0788                     u358_21 0157                     u383_20 0793  
                   u359_20 0169                     u383_21 0792                     u359_21 0168  
                   u384_20 079D                     u384_21 079C                     u385_20 07A7  
                   u385_21 07A6                     u386_20 07B1                     _OSCCON 0099  
                   u386_21 07B0                     u379_20 076C                     u379_21 076B  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR1IE 0488  
                   _TMR1IF 0088                     _SPBRGH 019C                     _TMR1ON 00C0  
                   _SPBRGL 019B            ??_USARTWriteInt 002D                     _SSPADD 0212  
                   _SSPBUF 0211                     _SWDTEN 04B8                     _SSPMSK 0213  
                ??___awdiv 0024                  ??___awmod 0024   __end_of_USARTWriteString 0FBA  
                   _keycnt 0050           ___awdiv@quotient 0027            ___awmod@divisor 0020  
          ___awmod@counter 0025                     clrloop 0F88   __end_ofi1_setscanchannel 07BD  
           __pcstackCOMMON 0070                _i2c_rx_buff 0160                _i2c_tx_buff 0048  
               __pbssBANK0 0048                 __pbssBANK1 00A0                 __pbssBANK2 0120  
               __pbssBANK3 01C0                 __pnvCOMMON 007D                 __pmaintext 0179  
               __pintentry 0004  USARTWriteInt@field_length 002B                    _I2Cinit 0FBA  
                  _CPSCON0 001E                    _CPSCON1 001F                    _OSCTUNE 0098  
                  _TMR1GIE 048F                    _TMR1GIF 008F           ??_USARTWriteChar 0020  
                  _SSPCON1 0215                    _SSPCON2 0216                    _SSPCON3 0217  
       USARTWriteInt@F3022 0060                    _SSPSTAT 0214                 __stringtab 0800  
       __size_of_usartinit 0012                    ___awdiv 0643                    ___awmod 06B0  
                  _debounc 00E0                    _avgflag 006D                    _average 00A0  
                  _curdiff 0120               __size_of_isr 0172           ___awmod@dividend 0022  
                  _olddiff 0140                    _keystat 0058                    _pwrstat 007D  
     end_of_initialization 0FFD              ??_capsensinit 0020             main@tholdcount 0043  
                _RCSTAbits 019D          ?_USARTWriteString 0070          __end_of_usartinit 0F9F  
       ??_USARTWriteString 0021                  _TRISCbits 008E          ?i1_setscanchannel 0070  
  __size_of_setscanchannel 0056         ??i1_setscanchannel 0070                  _TXSTAbits 019E  
           USARTWriteInt@i 0036             USARTWriteInt@j 0034      __end_of_USARTWriteInt 0643  
      __end_of_capsensinit 07F1        start_initialization 0FDB                __end_of_isr 0176  
               isr@sspstat 0077                   ?_I2Cinit 0070                __pbssCOMMON 007B  
            __pcstackBANK0 0020                _capsensinit 07BD                  __pnvBANK0 006F  
                __pnvBANK3 01A0                  _channelno 007B                   ?___awdiv 0020  
                __ptext340 07F1                  __ptext341 0F8D                  __ptext342 07BD  
                __ptext343 0711                  __ptext335 056A                  __ptext336 0F9F  
                __ptext345 0767                  __ptext337 06B0                  __ptext346 0000  
                __ptext338 0643                  __ptext339 0FBA                   ?___awmod 0020  
                __pstrings 0800             _setscanchannel 0711                   _LATCbits 010E  
                 _PIE1bits 0091                   _PIR1bits 0011                  _threshold 01A0  
         __size_of_I2Cinit 0021                  _usartinit 0F8D     __end_of_setscanchannel 0767  
__size_of_USARTWriteString 001B    __size_of_USARTWriteChar 000E  __size_ofi1_setscanchannel 0056  
         __size_of___awdiv 006D           __size_of___awmod 0061                 ?_usartinit 0070  
          ?_setscanchannel 0070                   _cur_read 00C0              __size_of_main 03F1  
                 clear_ram 0F87                   _tholdflg 006F     __size_of_USARTWriteInt 00D9  
              _raw_reading 0069                   intlevel1 0000               ?_capsensinit 0070  
      USARTWriteString@str 0022                 _OPTION_REG 0095                ??_usartinit 0020  
              _SSPCON1bits 0215                _SSPCON2bits 0216                 _WDTCONbits 0097  
         _USARTWriteString 0F9F                 _STATUSbits 0003             _USARTWriteChar 07F1  
            _USARTWriteInt 056A  
